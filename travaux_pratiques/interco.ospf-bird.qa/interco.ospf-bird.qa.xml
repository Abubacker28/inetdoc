<?xml version='1.0'?>
<!DOCTYPE article PUBLIC "-//OASIS//DTD DocBook XML V5.0//EN"
	"/usr/share/xml/docbook/schema/dtd/5.0/docbook.dtd"[

<!ENTITY author		SYSTEM "author.xml">
<!ENTITY legal		SYSTEM "legal.xml">

<!-- inetdoc -->
<!ENTITY % inetdoc_urls SYSTEM 'inetdoc.urls.xml'>
%inetdoc_urls;

<!-- ospf -->
<!ENTITY url.ospf
	"<link xmlns='http://docbook.org/ns/docbook'
	xlink:href='https://en.wikipedia.org/wiki/Open_Shortest_Path_First'>Open Shortest Path First</link>">

<!-- bird -->
<!ENTITY url.bird-users-guide
	"<link xmlns='http://docbook.org/ns/docbook'
	xlink:href='http://bird.network.cz/?get_doc&amp;f=bird.html'>BIRD User's Guide</link>">

<!ENTITY url.bird-ospf-example
	"<link xmlns='http://docbook.org/ns/docbook'
	xlink:href='https://gitlab.labs.nic.cz/labs/bird/wikis/OSPF_example'>OSPF example</link>">

<!-- openvswitch -->
<!ENTITY url.ovs
	"<link xmlns='http://docbook.org/ns/docbook'
	xlink:href='http://openvswitch.org'>Open vSwitch</link>">

<!ENTITY url.cam
	'<link xmlns="http://docbook.org/ns/docbook" xlink:href="https://en.wikipedia.org/wiki/Content-addressable_memory">
	<citetitle>Content-addressable memory</citetitle></link>'>
]>

<article xml:id='interco.ospf-bird' xml:lang='fr'>

<info>
	<title>Introduction au routage dynamique avec OSPF</title>

	&author;
	<abstract>
	<para>
	<informaltable frame='none' pgwide='1'>
	<tgroup cols='2' align='left' colsep='0' rowsep='0'>
	<colspec colwidth='5*'/>
	<colspec colwidth='220px'/>
	<tbody>
    <row>
    <entry valign='top'>
	<para>L'objectif de ce support de travaux pratiques est de mettre en
	évidence les caractéristiques de fonctionnement du protocole de routage
	<acronym>OSPF</acronym>. Cette illustration s'appuie sur des liens de type
	Ethernet et sur l'utilisation des <acronym>VLAN</acronym>s. Les questions
	sont présentées comme une introduction pas à pas au protocole de routage
	<acronym>OSPF</acronym>. On débute avec la mise en place d'une topologie
	réseau type basée sur le routage inter-VLAN, puis on implante les instances
	de démons de routage.</para>
	</entry>
	<entry>
	<inlinemediaobject>
	<imageobject role='html'>
		<imagedata fileref='images/interco.ospf.physical-topology.png' format='PNG' width='220px' scalefit='1'/>
	</imageobject>
	<imageobject role='fo'>
		<imagedata fileref='images/interco.ospf.physical-topology.png' format='PNG' width='4.5cm' scalefit='1'/>
	</imageobject>
	</inlinemediaobject>
	</entry>
	</row>
	</tbody>
	</tgroup>
	</informaltable>
	</para>
	</abstract>

	<keywordset>
	<keyword>kvm</keyword>
	<keyword>openvswitch</keyword>
	<keyword>ospf</keyword>
	<keyword>qemu</keyword>
	<keyword>bird</keyword>
	<keyword>routage</keyword>
	<keyword>trunk</keyword>
	<keyword>vlan</keyword>
	</keywordset>
</info>

<?custom-pagebreak?>
<sect1 xml:id='interco.ospf-bird.legal.meta'>
	&legal;

<sect2 xml:id='interco.ospf-bird.meta'>
	<title>Méta-information</title>
    
	<para>Ce document est écrit avec <link
	xlink:href="http://www.docbook.org"><citetitle>DocBook</citetitle></link>
	XML sur un système <link
	xlink:href="https://www.debian.org"><citetitle>Debian
	GNU/Linux</citetitle></link>. Il est disponible en version imprimable au
	format PDF : <link
	xlink:href="https://www.inetdoc.net/pdf/__printbasename__"><literal>__printbasename__</literal></link>.</para>

	<para>Toutes les commandes utilisées dans ce document ne sont pas
	spécifiques à une version particulière des systèmes UNIX ou GNU/Linux.
	C'est la distribution <citetitle>Debian GNU/Linux</citetitle> qui est
	utilisée pour les tests présentés. Voici une liste des paquets contenant
	les commandes :</para>

	<itemizedlist>
	<listitem>
		<para><application>procps</application> - Utilitaires pour le système
		de fichiers /proc</para>
	</listitem>
	<listitem>
		<para><application>iproute2</application> - Outils de contrôle du
		trafic et	du réseau</para>
	</listitem>
	<listitem>
		<para><application>ifupdown</application> - Outils de haut niveau pour
		configurer les interfaces réseau</para>
	</listitem>
	<listitem>
		<para><application>iputils-ping</application> - Outils pour tester
		l'accessibilité de noeuds réseaux</para>
	</listitem>
	<listitem>
		<para><application>bird</application> - Internet Routing Daemon</para>
	</listitem>
	</itemizedlist>
</sect2>

<sect2 xml:id='interco.ospf-bird.convtypo'>
	<title>Conventions typographiques</title>

	<para>Tous les exemples d'exécution des commandes sont précédés d'une
	invite utilisateur ou <wordasword>prompt</wordasword> spécifique au niveau
	des droits utilisateurs nécessaires sur le système.</para>

	<itemizedlist>
	<listitem>
		<para>Toute commande précédée de l'invite <prompt>$</prompt> ne
		nécessite aucun privilège particulier et peut être utilisée au niveau
		utilisateur simple.</para>
	</listitem>
	<listitem>
		<para>Toute commande précédée de l'invite <prompt>#</prompt> nécessite
		les privilèges du super-utilisateur.</para>
	</listitem>
	</itemizedlist>
</sect2>
</sect1>

<?custom-pagebreak?>
<sect1 xml:id='interco.ospf-bird.archi'>
	<title>Architecture réseau étudiée</title>

<sect2 xml:id='interco.ospf-bird.archi.topologie'>
	<title>Topologie type</title>

	<para>La topologie réseau étudiée peut être présentée sous deux formes
	distinctes : logique et physique.</para>
 
	<variablelist>
	<varlistentry xml:id='interco.ospf-bird.topologie.logique'>
		<term>Topologie logique</term>
	<listitem>
		<para>On retrouve un grand classique dans l'introduction aux protocoles
		de routage dynamiques : le triangle. Tous les liens sont de type
		<acronym>LAN</acronym>.</para>
	</listitem>
	</varlistentry>
	<varlistentry xml:id='interco.ospf-bird.topologie.physique'>
		<term>Topologie physique</term>
	<listitem>
		<para>On s'appuie sur le support &url.inter-vlan-routing; pour
		constituer une topologie physique à base de réseaux locaux virtuels ou
		<acronym>VLAN</acronym>s. On fait correspondre à chaque lien de la
		topologie logique en triangle un numéro de <acronym>VLAN</acronym>
		défini.</para>
	</listitem>
	</varlistentry>
	</variablelist>

	<table xml:id='interco.ospf-bird.archi.topologie.table' frame='all' pgwide='1'>
		<title>Topologie type étudiée</title>
	<tgroup cols='2'>
		<colspec colnum='1' colwidth='1*'/>
		<colspec colnum='2' colwidth='1*'/>
	<thead>
	<row>
	<entry>Topologie logique</entry>
	<entry>Topologie physique</entry>
	</row>
	</thead>
	<tbody>
	<row>
		<entry valign='middle' align='center'>
		<mediaobject>
		<imageobject role='fo'>
			<imagedata format='PNG' fileref='images/interco.ospf.logical-topology.png' width='7cm' scalefit='1' />
		</imageobject>
		<imageobject role='html'>
			<imagedata format='PNG' fileref='images/interco.ospf.logical-topology.png' width='320px' scalefit='1' />
		</imageobject>
		<textobject>
			<phrase>Topologie logique triangle</phrase>
		</textobject>
		</mediaobject>
		</entry>
		<entry valign='middle' align='center'>
		<mediaobject>
		<imageobject role='fo'>
			<imagedata format='PNG' fileref='images/interco.ospf.physical-topology.png' width='7cm' scalefit='1' />
		</imageobject>
		<imageobject role='html'>
			<imagedata format='PNG' fileref='images/interco.ospf.physical-topology.png' width='320px' scalefit='1' />
		</imageobject>
		<textobject>
			<phrase>Topologie physique étoile</phrase>
		</textobject>
		</mediaobject>
		</entry>
	</row>
	</tbody>
	</tgroup>
	</table>

	<para>Après avoir mis en œuvre la topologie physique en s'appuyant sur le
	support de la séance de travaux pratiques précédente :
	&url.inter-vlan-routing;, on implante les démons de routage
	<acronym>OSPF</acronym> sur les trois routeurs R1, R2 et R3.</para>

	<para>Cette séance se limite à l'étude du routage dynamique à l'intérieur
	d'une aire unique. La seule «frontière» de communication inter-aires
	visible est constituée par le lien vers l'Internet. Cette route par défaut
	sera redistribuée via <acronym>OSPF</acronym> par le routeur R1 aux autres
	routeurs. On verra alors un exemple de route externe dans les bases de
	données <acronym>OSPF</acronym>.</para>

	<para>On profite aussi de cette introduction pour employer une technique
	très répandue pour ajouter «artificiellement» des entrées de tables de
	routage en s'appuyant sur des interfaces virtuelles de type
	<wordasword>dummy</wordasword> équivalentes à des interfaces de boucle
	locale.</para>

	<para>Pour les besoins de rédaction des questions et réponses de ce
	support, la topologie a été mise en œuvre sur machines virtuelles
	<acronym>KVM</acronym> avec le commutateur <citetitle>Open
	vSwitch</citetitle> fourni avec le paquet
	<application>openvswitch-switch</application>. Les éléments de réponse aux
	questions dépendent donc de cette mise en œuvre. Pour la séance de travaux
	pratiques «réelle», il convient donc de se conformer strictement au plan
	d'adressage fourni ci-après.</para>
</sect2>

<?custom-pagebreak?>
<sect2 xml:id='interco.ospf-bird.archi.adressage'>
	<title>Plan d'adressage</title>

	<para>Comme dans le support sur l'introduction au routage inter-VLAN, le
	seul point de configuration imposé est le raccordement au réseau
	d'interconnexion avec les routeurs de l'infrastructure de travaux
	pratiques.</para>
  
	<itemizedlist>
	<listitem>
		<para><systemitem>dsw2.infra.stri</systemitem> en salle 211</para>
	</listitem>
	<listitem>
		<para><systemitem>dsw1.infra.stri</systemitem> en salle 213</para>
	</listitem>
	</itemizedlist>

	<para>Le raccordement au commutateur de la couche distribution utilise le
	port «de numéro le plus élevé» de chaque commutateur de couche accès ;
	<systemitem>gi0/2</systemitem> normalement. Ces liens montants doivent être
	configurés en mode <wordasword>trunk</wordasword> en utilisant le
	<acronym>VLAN</acronym> natif numéro 1. Le réseau <acronym>IP</acronym>
	correspondant au <acronym>VLAN</acronym> numéro 4 a pour adresse :
	<systemitem class='ipaddress'>172.16.16.0/20</systemitem></para>

	<para>Point important, la lecture de la section «Plan d'adressage» du
	document &url.infra.tp; donne l'adresse des deux routeurs connectés à
	l'Internet.</para>

	<itemizedlist>
	<listitem>
	<para>Routeur <systemitem class='systemname'>cooper.stri</systemitem> :
		<systemitem class='ipaddress'>172.16.16.1/20</systemitem></para>
	</listitem>
	<listitem>
	<para>Routeur <systemitem class='systemname'>casper.stri</systemitem> :
		<systemitem class='ipaddress'>172.16.16.2/20</systemitem></para>
	</listitem>
	</itemizedlist>

	<table xml:id='lab.addressing' frame='all' pgwide='1'>
		<title>Affectation des rôles, des numéros de VLANs et des adresses
		IP</title>
	<tgroup cols='8' align='left' colsep='1' rowsep='1'>
		<colspec colnum='1' colwidth='1*'/>
		<colspec colnum='2' colwidth='2.5*'/>
		<colspec colnum='3' colwidth='1*'/>
		<colspec colnum='4' colwidth='1*'/>
		<colspec colnum='5' colwidth='1*'/>
		<colspec colnum='6' colwidth='1*'/>
		<colspec colnum='7' colwidth='1*'/>
		<colspec colnum='8' colwidth='1.5*'/>
	<thead>
	<row>
		<entry>Groupe</entry>
		<entry>Commutateur</entry>
		<entry>Poste</entry>
		<entry>Rôle</entry>
		<entry>router-id</entry>
		<entry>VLAN</entry>
		<entry>Interface</entry>
		<entry>Réseau</entry>
	</row>
	</thead>
	<tbody>
	<row>
		<entry morerows='9' valign='middle'>1</entry>
		<entry morerows='9' valign='middle'><systemitem class='systemname'>asw05-213.infra.stri</systemitem></entry>
		<entry morerows='3' valign='middle'>alderaan</entry>
		<entry morerows='3' valign='middle'>R10</entry>
		<entry morerows='3' valign='middle'>0.0.0.10</entry>
		<entry align='right'>4</entry>
		<entry>eth0.4</entry>
		<entry><systemitem class='ipaddress'>172.16.17.10/20</systemitem></entry>
	</row>
	<row>
		<entry align='right'>221</entry>
		<entry>eth0.221</entry>
		<entry><systemitem class='ipaddress'>10.1.21.1/26</systemitem></entry>
	</row>
	<row>
		<entry align='right'>231</entry>
		<entry>eth0.231</entry>
		<entry><systemitem class='ipaddress'>10.1.31.1/26</systemitem></entry>
	</row>
	<row>
		<entry align='right'>-</entry>
		<entry>dummy0</entry>
		<entry><systemitem class='ipaddress'>10.1.10.1/29</systemitem></entry>
	</row>
	<row>
		<entry morerows='2' valign='middle'>bespin</entry>
		<entry morerows='2' valign='middle'>R20</entry>
		<entry morerows='2' valign='middle'>0.0.0.20</entry>
		<entry align='right'>221</entry>
		<entry>eth0.221</entry>
		<entry><systemitem class='ipaddress'>10.1.21.2/26</systemitem></entry>
	</row>
	<row>
		<entry align='right'>232</entry>
		<entry>eth0.232</entry>
		<entry><systemitem class='ipaddress'>10.1.32.2/26</systemitem></entry>
	</row>
	<row>
		<entry align='right'>-</entry>
		<entry>dummy0</entry>
		<entry><systemitem class='ipaddress'>10.1.20.1/29</systemitem></entry>
	</row>
	<row>
		<entry morerows='2' valign='middle'>centares</entry>
		<entry morerows='2' valign='middle'>R30</entry>
		<entry morerows='2' valign='middle'>0.0.0.30</entry>
		<entry align='right'>231</entry>
		<entry>eth0.231</entry>
		<entry><systemitem class='ipaddress'>10.1.31.3/26</systemitem></entry>
	</row>
	<row>
		<entry align='right'>232</entry>
		<entry>eth0.232</entry>
		<entry><systemitem class='ipaddress'>10.1.32.3/26</systemitem></entry>
	</row>
	<row>
		<entry align='right'>-</entry>
		<entry>dummy0</entry>
		<entry><systemitem class='ipaddress'>10.1.30.1/29</systemitem></entry>
	</row>
	<row>
		<entry morerows='9' valign='middle'>2</entry>
		<entry morerows='9' valign='middle'><systemitem class='systemname'>asw06-213.infra.stri</systemitem></entry>
		<entry morerows='3' valign='middle'>coruscant</entry>
		<entry morerows='3' valign='middle'>R40</entry>
		<entry morerows='3' valign='middle'>0.0.0.40</entry>
		<entry align='right'>4</entry>
		<entry>eth0.4</entry>
		<entry><systemitem class='ipaddress'>172.16.17.40/20</systemitem></entry>
	</row>
	<row>
		<entry align='right'>241</entry>
		<entry>eth0.241</entry>
		<entry><systemitem class='ipaddress'>10.2.41.1/26</systemitem></entry>
	</row>
	<row>
		<entry align='right'>251</entry>
		<entry>eth0.251</entry>
		<entry><systemitem class='ipaddress'>10.2.51.1/26</systemitem></entry>
	</row>
	<row>
		<entry align='right'>-</entry>
		<entry>dummy0</entry>
		<entry><systemitem class='ipaddress'>10.2.40.1/29</systemitem></entry>
	</row>
	<row>
		<entry morerows='2' valign='middle'>dagobah</entry>
		<entry morerows='2' valign='middle'>R50</entry>
		<entry morerows='2' valign='middle'>0.0.0.50</entry>
		<entry align='right'>241</entry>
		<entry>eth0.241</entry>
		<entry><systemitem class='ipaddress'>10.2.41.4/26</systemitem></entry>
	</row>
	<row>
		<entry align='right'>254</entry>
		<entry>eth0.254</entry>
		<entry><systemitem class='ipaddress'>10.2.54.4/26</systemitem></entry>
	</row>
	<row>
		<entry align='right'>-</entry>
		<entry>dummy0</entry>
		<entry><systemitem class='ipaddress'>10.2.50.1/29</systemitem></entry>
	</row>
	<row>
		<entry morerows='2' valign='middle'>endor</entry>
		<entry morerows='2' valign='middle'>R60</entry>
		<entry morerows='2' valign='middle'>0.0.0.60</entry>
		<entry align='right'>251</entry>
		<entry>eth0.251</entry>
		<entry><systemitem class='ipaddress'>10.2.51.5/26</systemitem></entry>
	</row>
	<row>
		<entry align='right'>254</entry>
		<entry>eth0.254</entry>
		<entry><systemitem class='ipaddress'>10.2.54.5/26</systemitem></entry>
	</row>
	<row>
		<entry align='right'>-</entry>
		<entry>dummy0</entry>
		<entry><systemitem class='ipaddress'>10.2.60.1/29</systemitem></entry>
	</row>
	<row>
		<entry morerows='9' valign='middle'>1</entry>
		<entry morerows='9' valign='middle'><systemitem class='systemname'>asw07-213.infra.stri</systemitem></entry>
		<entry morerows='3' valign='middle'>felucia</entry>
		<entry morerows='3' valign='middle'>R70</entry>
		<entry morerows='3' valign='middle'>0.0.0.70</entry>
		<entry align='right'>4</entry>
		<entry>eth0.4</entry>
		<entry><systemitem class='ipaddress'>172.16.17.70/20</systemitem></entry>
	</row>
	<row>
		<entry align='right'>261</entry>
		<entry>eth0.261</entry>
		<entry><systemitem class='ipaddress'>10.3.61.1/26</systemitem></entry>
	</row>
	<row>
		<entry align='right'>271</entry>
		<entry>eth0.271</entry>
		<entry><systemitem class='ipaddress'>10.3.71.1/26</systemitem></entry>
	</row>
	<row>
		<entry align='right'>-</entry>
		<entry>dummy0</entry>
		<entry><systemitem class='ipaddress'>10.3.70.1/29</systemitem></entry>
	</row>
	<row>
		<entry morerows='2' valign='middle'>geonosis</entry>
		<entry morerows='2' valign='middle'>R80</entry>
		<entry morerows='2' valign='middle'>0.0.0.80</entry>
		<entry align='right'>261</entry>
		<entry>eth0.261</entry>
		<entry><systemitem class='ipaddress'>10.3.61.6/26</systemitem></entry>
	</row>
	<row>
		<entry align='right'>276</entry>
		<entry>eth0.276</entry>
		<entry><systemitem class='ipaddress'>10.3.76.6/26</systemitem></entry>
	</row>
	<row>
		<entry align='right'>-</entry>
		<entry>dummy0</entry>
		<entry><systemitem class='ipaddress'>10.3.80.1/29</systemitem></entry>
	</row>
	<row>
		<entry morerows='2' valign='middle'>hoth</entry>
		<entry morerows='2' valign='middle'>R90</entry>
		<entry morerows='2' valign='middle'>0.0.0.90</entry>
		<entry align='right'>271</entry>
		<entry>eth0.271</entry>
		<entry><systemitem class='ipaddress'>10.3.71.7/26</systemitem></entry>
	</row>
	<row>
		<entry align='right'>276</entry>
		<entry>eth0.276</entry>
		<entry><systemitem class='ipaddress'>10.3.76.7/26</systemitem></entry>
	</row>
	<row>
		<entry align='right'>-</entry>
		<entry>dummy0</entry>
		<entry><systemitem class='ipaddress'>10.3.90.1/29</systemitem></entry>
	</row>
	<row>
		<entry morerows='9' valign='middle'>4</entry>
		<entry morerows='9' valign='middle'><systemitem class='systemname'>asw08-213.infra.stri</systemitem></entry>
		<entry morerows='3' valign='middle'>mustafar</entry>
		<entry morerows='3' valign='middle'>R100</entry>
		<entry morerows='3' valign='middle'>0.0.0.100</entry>
		<entry align='right'>4</entry>
		<entry>eth0.4</entry>
		<entry><systemitem class='ipaddress'>172.16.17.100/20</systemitem></entry>
	</row>
	<row>
		<entry align='right'>281</entry>
		<entry>eth0.281</entry>
		<entry><systemitem class='ipaddress'>10.4.81.1/26</systemitem></entry>
	</row>
	<row>
		<entry align='right'>291</entry>
		<entry>eth0.291</entry>
		<entry><systemitem class='ipaddress'>10.4.91.1/26</systemitem></entry>
	</row>
	<row>
		<entry align='right'>-</entry>
		<entry>dummy0</entry>
		<entry><systemitem class='ipaddress'>10.4.100.1/29</systemitem></entry>
	</row>
	<row>
		<entry morerows='2' valign='middle'>naboo</entry>
		<entry morerows='2' valign='middle'>R110</entry>
		<entry morerows='2' valign='middle'>0.0.0.110</entry>
		<entry align='right'>281</entry>
		<entry>eth0.281</entry>
		<entry><systemitem class='ipaddress'>10.4.81.8/26</systemitem></entry>
	</row>
	<row>
		<entry align='right'>298</entry>
		<entry>eth0.298</entry>
		<entry><systemitem class='ipaddress'>10.4.98.8/26</systemitem></entry>
	</row>
	<row>
		<entry align='right'>-</entry>
		<entry>dummy0</entry>
		<entry><systemitem class='ipaddress'>10.4.110.1/29</systemitem></entry>
	</row>
	<row>
		<entry morerows='2' valign='middle'>tatooine</entry>
		<entry morerows='2' valign='middle'>R120</entry>
		<entry morerows='2' valign='middle'>0.0.0.120</entry>
		<entry align='right'>291</entry>
		<entry>eth0.291</entry>
		<entry><systemitem class='ipaddress'>10.4.91.9/26</systemitem></entry>
	</row>
	<row>
		<entry align='right'>298</entry>
		<entry>eth0.298</entry>
		<entry><systemitem class='ipaddress'>10.4.98.9/26</systemitem></entry>
	</row>
	<row>
		<entry align='right'>-</entry>
		<entry>dummy0</entry>
		<entry><systemitem class='ipaddress'>10.4.120.1/29</systemitem></entry>
	</row>
	</tbody>
	</tgroup>
	</table>

	<para>Le positionnement des 4 commutateurs est référencé dans le support
	&url.infra.tp;.</para>
</sect2> 
</sect1>

<?custom-pagebreak?>
<sect1 xml:id='interco.ospf-bird.prepare-config'>
	<title>Préparation des routeurs</title>

	<para>La première étape consiste à mettre en place la topologie
	physique.</para>

	<itemizedlist>
	<listitem>
		<para>Vérifier l'installation du paquet
		<application>bird</application> avant de brasser les postes sur les
		commutateurs non programmés.</para>

<screen><prompt>$</prompt> aptitude search ~ibird
i   bird              - Internet Routing Daemon</screen>
	</listitem>

	<listitem xml:id='interco.ospf-bird.prepare-config.routing'>
		<para>Vérifier que la fonction de routage des paquets
		<acronym>IPv4</acronym> est active au niveau noyau.</para>

<screen><prompt>$</prompt> cat /proc/sys/net/ipv4/ip_forward
1</screen>

		<para>Si ce n'est pas le cas, il est possible d'éditer le fichier
		<filename>/etc/sysctl.conf</filename> pour fixer les valeurs des
		paramètres de configuration des protocoles de la pile
		<acronym>TCP/IP</acronym> dans le noyau Linux. Voir la section
		<citetitle>Fonctions réseau d'une interface</citetitle> du support
		&url.config.interface.lan;.</para>

<screen><prompt>#</prompt> sysctl -p
net.ipv4.conf.default.rp_filter = 1
net.ipv4.conf.all.rp_filter = 1
net.ipv4.ip_forward = 1
net.ipv6.conf.all.forwarding = 1
net.ipv4.conf.all.log_martians = 1
net.ipv4.conf.all.proxy_arp = 0</screen>
	</listitem>

	<listitem xml:id='interco.ospf-bird.prepare-config.subinterfaces'>
		<para>Créer les sous-interfaces associées aux <acronym>VLAN</acronym>s
		sur chacun des routeurs R1, R2 et R3 à l'aide du script suivant
		:</para>

<screen><?dbfo keep-together="auto" ?><xi:include href='files/subinterfaces.sh'
parse='text' xmlns:xi='http://www.w3.org/2001/XInclude'/></screen>

		<para>Sur le routeur R1, on utilise le script avec les numéros de
		<acronym>VLAN</acronym>s 12 et 13 par exemple.</para>

<screen>r1:~# sh ./subinterfaces.sh 12 13</screen>

		<para>On adapte l'utilisation du même script aux routeurs R2 et R3 avec
		les numéros de <acronym>VLAN</acronym>s concernés.</para>

		<para>Bien sûr, il est aussi possible d'éditer le fichier
			<filename>/etc/network/interfaces</filename> de façon à rendre
			cette configuration permanente. Voici une copie de ce fichier pour
			le routeur R1.</para>

<screen><?dbfo keep-together="auto" ?><xi:include href='files/R1-interfaces'
parse='text' xmlns:xi='http://www.w3.org/2001/XInclude'/></screen>
	</listitem>
	</itemizedlist>
</sect1>

<?custom-pagebreak?>
<sect1 xml:id='interco.ospf-bird.pointopoint'>
	<title>Communications entre routeurs</title>

	<para>Avant d'aborder le déploiement du protocole de routage dynamique, il
	est nécessaire de valider les communications <acronym>IP</acronym> entre
	chaque routeur et de visualiser les tables de routage déjà connues.</para>

<qandaset>
<qandadiv>
	<qandaentry>
	<question>
		<para><phrase>Comment implanter	les adresses <acronym>IP</acronym> des
			interfaces pourchacun des <acronym>VLAN</acronym>s routés
			?</phrase></para>

		<para>Au niveau liaison, les sous-interfaces ont déjà été configurées
		avec le script <link
		linkend='interco.ospf-bird.prepare-config.subinterfaces'>subinterfaces.sh</link>.
		Il reste à paramétrer les adresses <acronym>IP</acronym> de ces
		sous-interfaces.</para>
	</question>
	<answer>
		<variablelist>
		<varlistentry>
			<term>Routeur R1</term>
		<listitem>
<screen><prompt>r1:~#</prompt> ip addr add 10.1.12.1/26 brd + dev eth0.12
<prompt>r1:~#</prompt> ip addr add 10.1.13.1/26 brd + dev eth0.13</screen>
		</listitem>
		</varlistentry>
		<varlistentry>
			<term>Routeur R2</term>
		<listitem>
<screen><prompt>r2:~#</prompt> ip addr add 10.1.12.2/26 brd + dev eth0.12
<prompt>r2:~#</prompt> ip addr add 10.1.23.2/26 brd + dev eth0.23</screen>
		</listitem>
		</varlistentry>
		<varlistentry>
			<term>Routeur R3</term>
		<listitem>
<screen><prompt>r3:~#</prompt> ip addr add 10.1.23.3/26 brd + dev eth0.23
<prompt>r3:~#</prompt> ip addr add 10.1.13.3/26 brd + dev eth0.13</screen>
		</listitem>
		</varlistentry>
		</variablelist>
	</answer>
	</qandaentry>

	<qandaentry>
	<question>
		<para><phrase>Comment valider les communications <acronym>IP</acronym>
			entre routeurs ?</phrase></para>

		<para>Lancer les tests <acronym>ICMP</acronym> usuels entre chaque
		routeur sur chaque lien actif.</para>
	</question>
	<answer>
		<variablelist>
		<varlistentry>
			<term>Exemple entre R1 et R2</term>
		<listitem>
<screen><prompt>r1:~$</prompt> ping -c2 10.1.12.2
PING 10.1.12.2 (10.1.12.2) 56(84) bytes of data.
64 bytes from 10.1.12.2: icmp_seq=1 ttl=64 time=0.810 ms
64 bytes from 10.1.12.2: icmp_seq=2 ttl=64 time=0.715 ms

--- 10.1.12.2 ping statistics ---
2 packets transmitted, 2 received, 0% packet loss, time 1001ms
rtt min/avg/max/mdev = 0.715/0.762/0.810/0.054 ms</screen>
		</listitem>
		</varlistentry>
		</variablelist>

		<para>L'opération est à répéter sur chaque lien entre deux routeurs
		reliés sur le même <acronym>VLAN</acronym>.</para>
	</answer>
	</qandaentry>

	<qandaentry>
	<question>
		<para><phrase>Comment visualiser la table de routage au niveau système
			?</phrase></para>

		<para>Utiliser la commande <command>ip</command> pour visualiser la
			table de routage</para>
	</question>
	<answer>
		<variablelist>
		<varlistentry>
			<term>Routeur R1 - niveau système</term>
		<listitem>
<screen><prompt>r1:~$</prompt> ip route ls
default via 192.0.2.1 dev eth0 
10.1.12.0/26 dev eth0.12  proto kernel  scope link  src 10.1.12.1 
10.1.13.0/26 dev eth0.13  proto kernel  scope link  src 10.1.13.1 
192.0.2.0/26 dev eth0  proto kernel  scope link  src 192.0.2.10</screen>

		<para>Toutes les routes affichées correspondent à des réseaux
		<acronym>IPv4</acronym> sur lesquels le routeur est directement
		connecté via une interface active et correctement configurée.</para>
		</listitem>
		</varlistentry>

		<varlistentry>
			<term>Routeur R2 - niveau système</term>
		<listitem>
<screen><prompt>r2:~$</prompt> ip route ls
10.1.12.0/26 dev eth0.12  proto kernel  scope link  src 10.1.12.2 
10.1.23.0/26 dev eth0.23  proto kernel  scope link  src 10.1.23.2</screen>
		</listitem>
		</varlistentry>

		<varlistentry>
			<term>Routeur R3 - niveau système</term>
		<listitem>
<screen><prompt>r3:~$</prompt> ip route ls
10.1.13.0/26 dev eth0.13  proto kernel  scope link  src 10.1.13.3 
10.1.23.0/26 dev eth0.23  proto kernel  scope link  src 10.1.23.3</screen>
		</listitem>
		</varlistentry>
		</variablelist>
	</answer>
	</qandaentry>

	<qandaentry>
	<question>
		<para><phrase>Comment activer la fonction routage du noyau Linux
			?</phrase></para>

		<para>Reprendre l'instruction présentée dans le document
		&url.config.interface.lan.proc;.</para>

		<para>L'opération doit être répétée sur chacun des trois routeurs pour
		que le protocole de routage dynamique puisse fonctionner
		normalement.</para>
	</question>
	<answer>
		<para>Si cette fonction n'est pas active dans le noyau Linux, aucune
		décision d'acheminement d'un paquet d'une interface vers l'autre ne
		sera prise. Les paquets à router sont simplement jetés.</para>

		<para>Les instructions d'activation de la fonction de routage sont
		données dans la section <link
		linkend='interco.ospf-bird.prepare-config.routing'>Préparation des
		routeurs</link>.</para>
	</answer>
	</qandaentry>
</qandadiv>
</qandaset>
</sect1>

<?custom-pagebreak?>
<sect1 xml:id='interco.ospf-bird.protocol-config'>
	<title>Configuration OSPF de base</title>

	<para>Dans cette section, on introduit les premières commandes de
		configuration du protocole de routage dynamique <acronym>OSPF</acronym>
		qui permettent d'activer le protocole puis d'introduire des entrées de
		réseau dans la base de données de ce protocole.</para>

<qandaset>
<qandadiv>
	<qandaentry>
	<question>
	<para><phrase>Comment contrôler l'état du service <systemitem
		class='daemon'>bird</systemitem> sur le routeur
		?</phrase></para>

	<para>Une fois le paquet <systemitem class='daemon'>bird</systemitem>
		installé, la configuration des différents protocoles se fait dans un
		seul fichier : <filename>/etc/bird.conf</filename>.</para>

	<para>À chaque édition du fichier de configuration, il faut relancer le
		démon de façon à valider son fonctionnement puis se connecter à la
		console <command>birdc</command> pour obtenir les informations d'état
		sur le ou les protocoles utilisés.</para>

	<para>Consulter le document &url.bird-users-guide; à la section
		<acronym>OSPF</acronym> pour activer le protocole.</para>
	</question>
	<answer>
	<para>On commence par contrôler le statut du démon <systemitem
		class='daemon'>bird</systemitem>.</para>

<screen><prompt>$</prompt> systemctl status bird
● bird.service - BIRD Internet Routing Daemon (IPv4)
   Loaded: loaded (/lib/systemd/system/bird.service; enabled; vendor preset: enabled)
   Active: <emphasis>active (running)</emphasis> since Mon 2017-11-06 08:39:44 CET; 13s ago
 Main PID: 2701 (bird)
    Tasks: 1 (limit: 4915)
   CGroup: /system.slice/bird.service
   └─2701 /usr/sbin/bird -f -u bird -g bird</screen>

	<para>En l'absence de toute configuration, le protocole
		<acronym>OSPF</acronym> n'est pas actif. On peut le vérifier à partir
		de la console <command>birdc</command>.</para>

<screen><prompt>#</prompt> birdc
BIRD 1.6.3 ready.
bird> sh ospf state
There is no OSPF protocol running
bird></screen>
	</answer>
	</qandaentry>

	<qandaentry>
	<question>
	<para><phrase>Comment activer le protocole de routage
		<acronym>OSPF</acronym> et fixer manuellement	l'identifiant du
		routeur ?</phrase></para>

	<warning>
	<para>Les identifiants à utiliser lors de la séance de travaux pratiques
		sont donnés dans le <xref linkend='lab.addressing'/>.</para>
	</warning>
    </question>
    <answer>
	<para>On édite le fichier <filename>/etc/bird.conf</filename> de façon à
		fixer le paramètre <option>router id</option> et à ouvrir une section
		pour le protocole <acronym>OSPF</acronym>.</para>

<screen><?dbfo keep-together="auto" ?><prompt>#</prompt> grep -v ^# /etc/bird/bird.conf

router id 0.0.0.1;

protocol device {
}

protocol kernel {
	metric 64;	# Use explicit kernel route metric to avoid collisions
				# with non-BIRD routes in the kernel routing table
	import none;
}

protocol ospf OSPFv2R1 {
	area 0 {
	};
}</screen>

	<para>Une fois le service relancé, on obtient les informations suivantes à
		la console.</para>

<screen><prompt>#</prompt> birdc
BIRD 1.6.3 ready.
bird> show protocols
name     proto    table    state  since       info
device1  Device   master   up     08:39:44
kernel1  Kernel   master   up     08:39:44
OSPFv2R1 OSPF     master   up     09:07:29    Alone
bird> show ospf state

area 0.0.0.0

	router 0.0.0.1
		distance 0
bird></screen>
	</answer>
	</qandaentry>

	<qandaentry>
	<question>
	<para><phrase>Comment activer et valider le protocole de routage
		<acronym>OSPF</acronym> pour les réseaux <acronym>IPv4</acronym>
		connus de chaque routeur ?</phrase></para>

	<para>Consulter la section <acronym>OSPF</acronym> de la documentation
		&url.bird-users-guide; ainsi que l'exemple &url.bird-ospf-example;. Il
		suffit d'adapter les exemples avec les noms d'interfaces en fonction du
		contexte.</para>

	<para>Pour la validation des interfaces et des réseaux, il faut utiliser la
		console <command>birdc</command>.</para>
	</question>
	<answer>
		<variablelist>
		<varlistentry>
			<term>Routeur R1</term>
		<listitem>
<screen><?dbfo keep-together="auto" ?><prompt>#</prompt> grep -v ^# /etc/bird/bird.conf

router id 0.0.0.1;

protocol device {
}

protocol kernel {
	metric 64;	# Use explicit kernel route metric to avoid collisions
			# with non-BIRD routes in the kernel routing table
	import none;
	export all;     # Actually insert routes into the kernel routing table
}

protocol ospf OSPFv2R1 {
	rfc1583compat yes;
	debug all;
	import all;

	area 0.0.0.0 {
		interface "eth0.12", "eth0.13" {
			authentication none;
		};
	};
}</screen>

	<para>Les commandes de la catégorie <acronym>OSPF</acronym> permettent de
		vérifier que la liste des réseaux du routeurs sont bien annoncés par le
		protocole de routage dynamique. À titre d'exemple, voici le résultat de
		la commande <userinput>show ospf state</userinput>.</para>

<screen><?dbfo keep-together="auto" ?><prompt>#</prompt> birdc
BIRD 1.6.3 ready.
bird> show ospf state

area 0.0.0.0

	router 0.0.0.1
		distance 0
		network 10.1.12.0/26 metric 10
		network 10.1.13.0/26 metric 10

	network 10.1.12.0/26
		dr 0.0.0.1
		distance 10
		router 0.0.0.1

	network 10.1.13.0/26
		dr 0.0.0.1
		distance 10
		router 0.0.0.1</screen>
		</listitem>
		</varlistentry>

		<varlistentry>
			<term>Routeur R2</term>
		<listitem>
<screen><?dbfo keep-together="auto" ?><prompt>#</prompt> grep -v ^# /etc/bird/bird.conf

log syslog { info, remote, warning, error, fatal };

router id 0.0.0.2;

protocol device {
}

protocol kernel {
	metric 64;	# Use explicit kernel route metric to avoid collisions
			# with non-BIRD routes in the kernel routing table
	import none;
	export all;     # Actually insert routes into the kernel routing table
}

protocol ospf OSPFv2R2 {
	rfc1583compat yes;
	debug all;
	export all;
	import all;

	area 0.0.0.0 {
		interface "eth0.12", "eth0.23" {
			authentication none;
		};
	};
}</screen>
		</listitem>
		</varlistentry>

		<varlistentry>
			<term>Routeur R3</term>
		<listitem>
<screen><?dbfo keep-together="auto" ?><prompt>#</prompt> grep -v ^# /etc/bird/bird.conf

log syslog { info, remote, warning, error, fatal };

router id 0.0.0.3;

protocol device {
}

protocol kernel {
	metric 64;	# Use explicit kernel route metric to avoid collisions
			# with non-BIRD routes in the kernel routing table
	import none;
	export all;	# Actually insert routes into the kernel routing table
}

protocol ospf OSPFv2R3 {
	rfc1583compat yes;
	debug all;
	export all;
	import all;

	area 0.0.0.0 {
        interface "eth0.13", "eth0.23" {
			authentication none;
		};
	};
}</screen>
		</listitem>
		</varlistentry>
		</variablelist>
	</answer>
	</qandaentry>

	<qandaentry>
	<question>
	<para><phrase>Comment visualiser l'état	des interfaces actives du routeur
		vis-à-vis du protocole de routage	<acronym>OSPF</acronym>
		?</phrase></para>

	<para>Comme la configuration du démon <systemitem
		class='daemon'>bird</systemitem> est basée sur l'activation du
		protocole par interface, il suffit de consulter la console
		<command>birdc</command>.</para>
	</question>
	<answer>
	<para>C'est la commande <command>show ospf interface</command> qui affiche
		l'état de chaque interface du routeur.</para>

		<variablelist>
		<varlistentry>
			<term>Exemple du routeur R1</term>
		<listitem>
<screen><?dbfo keep-together="auto" ?><prompt>#</prompt> birdc
BIRD 1.6.3 ready.
bird> show ospf interface
OSPFv2R1:
Interface eth0.12 (10.1.12.0/26)
	Type: broadcast
	Area: 0.0.0.0 (0)
	State: Backup
	Priority: 1
	Cost: 10
	ECMP weight: 1
	Hello timer: 10
	Wait timer: 40
	Dead timer: 40
	Retransmit timer: 5
	Designated router (ID): 0.0.0.2
	Designated router (IP): 10.1.12.2
	Backup designated router (ID): 0.0.0.1
	Backup designated router (IP): 10.1.12.1
Interface eth0.13 (10.1.13.0/26)
	Type: broadcast
	Area: 0.0.0.0 (0)
	State: Backup
	Priority: 1
	Cost: 10
	ECMP weight: 1
	Hello timer: 10
	Wait timer: 40
	Dead timer: 40
	Retransmit timer: 5
	Designated router (ID): 0.0.0.3
	Designated router (IP): 10.1.13.3
	Backup designated router (ID): 0.0.0.1
	Backup designated router (IP): 10.1.13.1</screen>
		</listitem>
		</varlistentry>
		</variablelist>
	</answer>
	</qandaentry>

	<qandaentry>
	<question>
	<para><phrase>Comment retrouver pour chaque <acronym>VLAN</acronym>,
		l'identifiant du routeur désigné et le type de réseau
		?</phrase></para>

	<para>Consulter la documentation sur le protocole : &url.ospf;.</para>
	</question>
	<answer>
	<para>En reprenant l'exemple du routeur <systemitem
		class='systemname'>R1</systemitem> et de son interface
		<option>eth0.12</option> placée dans le <acronym>VLAN</acronym> 12, on
		relève les informations suivantes.</para>

	<para>Soient les lignes : <literal>Type: broadcast</literal> et
		<literal>Designated router (ID): 0.0.0.2</literal>.</para>

	<para>On apprend que l'identifiant <acronym>OSPF</acronym> du routeur
		désigné est <systemitem class='ipaddress'>0.0.0.2</systemitem> ; soit
		le routeur <systemitem class='systemname'>R2</systemitem>. L'interface
		est connectée sur un	réseau Ethernet de type
		<emphasis>diffusion</emphasis> dans lequel <systemitem
		class='systemname'>R2</systemitem> est un «routeur désigné»
		(<wordasword>Designated Router</wordasword>) qui sert de référence aux
		autres routeurs du même périmètre de diffusion.</para>
	</answer>
	</qandaentry>

	<qandaentry>
	<question>
	<para><phrase>Comment peut-on vérifier que l'algorithme
		<acronym>SPF</acronym> du protocole <acronym>OSPF</acronym> à
		été correctement exécuté ?</phrase></para>

	<para>Visualiser les listes des routeurs voisins puis la liste des routes
		présentes dans la base de données du protocole.</para>
	</question>
	<answer>
	<para>En reprenant l'exemple du routeur <systemitem
		class='systemname'>R1</systemitem>, on consulte la liste des
		voisins <acronym>OSPF</acronym> à partir de la console
		<command>birdc</command>.</para>

<screen><prompt>#</prompt> birdc
BIRD 1.6.3 ready.
bird> show ospf neighbors
OSPFv2R1:
Router ID       Pri          State      DTime   Interface  Router IP
0.0.0.2   1     Full/DR         00:36   eth0.12    10.1.12.2
0.0.0.3   1     Full/DR         00:35   eth0.13    10.1.13.3</screen>

	<para>Dans cette liste, on relève la présence des deux autres
		routeurs.</para>

	<itemizedlist>
	<listitem>
	<para><systemitem class='systemname'>R2</systemitem> avec l'identifiant
		<systemitem class='ipaddress'>0.0.0.2</systemitem></para>
	</listitem>
	<listitem>
	<para><systemitem class='systemname'>R3</systemitem> avec l'identifiant
		<systemitem class='ipaddress'>0.0.0.3</systemitem></para>
	</listitem>
	</itemizedlist>

	<para>Les indicateurs d'état <literal>Full/DR</literal> montrent que le
		dialogue entre les routeurs voisins à convergé vers l'état stable et
		que les routeurs voisins de <systemitem
		class='systemname'>R1</systemitem> jouent le rôle de «routeur
		désigné» (<wordasword>Designated Router</wordasword>).</para>

	<para>Toujours sur le routeur <systemitem
		class='systemname'>R1</systemitem>, la liste des routes connues du
		protocole <acronym>OSPF</acronym> est donnée par la commande
		<command>show route</command> de la console
		<command>birdc</command>.</para>

<screen>bird> show route
0.0.0.0/0          via 172.16.0.3 on eth0 [static1 2017-11-04] * (200)
10.1.12.0/26       dev eth0.12 [OSPFv2R1 2017-11-04] * I (150/10) [0.0.0.2]
10.1.13.0/26       dev eth0.13 [OSPFv2R1 2017-11-04] * I (150/10) [0.0.0.3]
10.1.23.0/26       multipath [OSPFv2R1 2017-11-04] * I (150/20) [0.0.0.2]
	via 10.1.12.2 on eth0.12 weight 1
	via 10.1.13.3 on eth0.13 weight 1</screen>

	<para>Les valeurs notées entre parenthèses après le symbole '/'
		correspondent à la métrique ou au coût du lien pour joindre le réseau
		distant.</para>

	<para>L'outil <systemitem class='daemon'>bird</systemitem> utilise
		uniquement la notion de coût pour le calcul de métrique qui permet de
		déterminer le chemin le plus court vers un réseau distant. Dans notre
		exemple, chaque lien s'est vu attribué un coût de 10 par défaut.</para>

	<para>Sur la copie d'écran ci-dessus, les deux réseaux raccordés au routeur
		<systemitem class='systemname'>R1</systemitem> ont un coût de 10 tandis
		que le réseau distant joignable via  <systemitem
		class='systemname'>R2</systemitem> ou <systemitem
		class='systemname'>R3</systemitem> a un coût de 20. Autrement dit,
		le réseau <systemitem class='ipaddress'>10.1.23.0/26</systemitem> est
		joignable via deux liens de coût 10.</para>
	</answer>
	</qandaentry>

	<qandaentry>
	<question>
	<para><phrase>Comment utiliser toutes les solutions disponibles pour
		joindre le réseau distant ?</phrase></para>

	<para>Avec la topologie logique triangle, le réseau (le côté) opposé au
		routeur (au sommet) doit être joignable depuis les deux réseaux locaux
		raccordés à ce routeur. Nous sommes donc dans un contexte multi
		chemins.</para>
	</question>
	<answer>
	<para>La fonction réseau du noyau Linux recherchée est connue sous le nom
		<wordasword>Equal Cost Multi Path</wordasword> ou
		<acronym>ECMP</acronym>.</para>

	<para>La configuration du protocole <acronym>OSPF</acronym> du démon
		<systemitem class='daemon'>bird</systemitem> dispose d'un paramètre qui
		permet d'activer <acronym>ECMP</acronym>.</para>

	<para>Avec le routeur <systemitem class='systemname'>R1</systemitem>, la
		configuration est la suivante.</para>

<screen><prompt>#</prompt> sed -n '/protocol ospf/,//p' /etc/bird/bird.conf
protocol ospf OSPFv2R1 {
	rfc1583compat yes;
	debug all;
	export all;
	import all;
	<emphasis>ecmp yes;</emphasis>

	area 0.0.0.0 {
		interface "eth0.12", "eth0.13" {
			authentication none;
			};
	};
}</screen>
	</answer>
	</qandaentry>

	<qandaentry>
	<question>
	<para><phrase>Comment visualiser la table de routage au niveau système
			?</phrase></para>

	<para>Utiliser une commande usuelle de visualisation de la table de
		routage.</para>
	</question>
	<answer>
	<para>Avec la commande <command>ip</command>, on voit apparaître les
		«sources» d'alimentation de la table de routage finale du système :
		<option>kernel</option> et <option>bird</option>.</para>

<screen><prompt>r1:~$</prompt> ip route ls
default via 172.16.0.3 dev eth0 onlink
default via 172.16.0.3 dev eth0 proto bird metric 64
10.1.12.0/26 dev eth0.12 proto kernel scope link src 10.1.12.1
10.1.13.0/26 dev eth0.13 proto kernel scope link src 10.1.13.1
10.1.23.0/26 proto bird metric 64
        nexthop via 10.1.12.2  dev eth0.12 weight 1
        nexthop via 10.1.13.3  dev eth0.13 weight 1
172.16.0.0/20 dev eth0 proto kernel scope link src 172.16.15.1</screen>

	<para>Il est possible de visualiser l'arbre de décision du noyau pour
		l'acheminement des paquets à l'aide de la commande suivante.</para>

<screen><prompt>$</prompt> cat /proc/net/fib_trie</screen>
	</answer>
	</qandaentry>
</qandadiv>
</qandaset>
</sect1>

<?custom-pagebreak?>
<sect1 xml:id='interco.ospf-bird.default-information'>
	<title>Publication d'une route par défaut via OSPF</title>

	<para>Dans la topologie logique étudiée, le routeur <systemitem
		class='systemname'>R1</systemitem> dispose d'un lien montant vers
		l'Internet. On peut donc considérer que ce lien est la route par défaut
		vers tous les réseaux non connus de l'aire <acronym>OSPF</acronym>
		contenant les trois routeurs.</para>

	<para>Il est possible de publier une route par défaut via le protocole
		<acronym>OSPF</acronym> depuis le routeur <systemitem
		class='systemname'>R1</systemitem> vers les routeurs <systemitem
		class='systemname'>R2</systemitem> et <systemitem
		class='systemname'>R3</systemitem>.</para>

	<para>Voici, pour mémoire, une copie de la base de données
		<acronym>OSPF</acronym> avant la mise en place de la publication de
		route par défaut. On reconnaît les <acronym>LSA</acronym>s
		(<wordasword>Link	State Advertisement)</wordasword>) de type 1 et 2
		qui correspondent respectivement aux annonces de routeurs et de
		réseaux.</para>

<screen><?dbfo keep-together="auto" ?><prompt>#</prompt> birdc
BIRD 1.6.3 ready.
bird> show ospf state

area 0.0.0.0

	router 0.0.0.1
		distance 0
		network 10.1.12.0/26 metric 10
		network 10.1.13.0/26 metric 10

	router 0.0.0.2
		distance 10
		network 10.1.12.0/26 metric 10
		network 10.1.23.0/26 metric 10

	router 0.0.0.3
		distance 10
		network 10.1.13.0/26 metric 10
		network 10.1.23.0/26 metric 10

	network 10.1.12.0/26
		dr 0.0.0.2
		distance 10
		router 0.0.0.2
		router 0.0.0.1

	network 10.1.13.0/26
		dr 0.0.0.3
		distance 10
		router 0.0.0.3
		router 0.0.0.1

	network 10.1.23.0/26
		dr 0.0.0.3
		distance 20
		router 0.0.0.3
		router 0.0.0.2</screen>

<qandaset>
<qandadiv>
	<qandaentry>
	<question>
	<para><phrase>Quelle est la condition préalable à respecter pour que le
		routeur <systemitem class='systemname'>R1</systemitem> soit en
		mesure de publier une route par défaut via <acronym>OSPF</acronym>
		?</phrase></para>

	<para>Avant de procéder à une redistribution de route, on doit s'assurer
		qu'elle existe au préalable.</para>
	</question>
	<answer>
	<para>Une route par défaut doit exister avant d'être injectée dans une aire
		<acronym>OSPF</acronym>. Dans notre cas, une route statique par défaut
		suffit à respecter la condition préalable.</para>

	<para>Sur la maquette, on valide la présence de la route par défaut	comme
		suit :</para>

<screen><prompt>r1:~$</prompt> ip route ls | grep default
default via 172.16.0.3 dev eth0 onlink
<prompt>r1:~$</prompt> ip route get 8.8.8.8
8.8.8.8 via 172.16.0.3 dev eth0 src 172.16.15.1
	cache</screen>
	</answer>
	</qandaentry>

	<qandaentry>
	<question>
	<para><phrase>Comment pour publier une route par défaut via le démon
		<systemitem class='daemon'>bird</systemitem> ?</phrase></para>

	<para>La configuration se fait en deux étapes.</para>

	<orderedlist>
	<listitem>
	<para>Le démon <systemitem class='daemon'>bird</systemitem> doit apprendre
		la route par défaut à partir des informations de routage du noyau.</para>
	</listitem>
	<listitem>
	<para>La partie <acronym>OSPF</acronym> de la configuration doit exporter
		spécifiquement la route par défaut via le protocole de routage.</para>
	</listitem>
	</orderedlist>
	</question>
	<answer>
	<para>On commence par l'apprentissage des routes depuis le noyau. La partie
		<wordasword>kernel</wordasword> du fichier de configuration
		<filename>/etc/bird/bird.conf</filename> devient :</para>

<screen><prompt>#</prompt> sed -n '/kernel {/,/}/p' /etc/bird/bird.conf
protocol kernel {
	metric 64;      # Use explicit kernel route metric to avoid collisions
                # with non-BIRD routes in the kernel routing table
	<emphasis>import all;</emphasis>
	export all;     # Actually insert routes into the kernel routing table

	learn;
}</screen>

	<para>On créé un filtre qui sélectionne exclusivement la route par défaut à
		partir du préfixe <systemitem
		class='ipaddress'>0.0.0.0/0</systemitem>.</para>

<screen><prompt>#</prompt> sed -n '/filter export_OSPF {/,/^}/p' /etc/bird/bird.conf
filter export_OSPF {
	if ( net = 0.0.0.0/0 ) then {
		ospf_metric2 = 100;
		accept;
	}
	reject;
}</screen>

	<para>Enfin, on applique ce filtre sur la règle d'exportation de la partie
		<acronym>OSPF</acronym> du fichier de configuration.</para>

<screen><prompt>#</prompt> sed -n '/protocol ospf OSPFv2R1 {/,/^}/p' /etc/bird/bird.conf
protocol ospf OSPFv2R1 {
	rfc1583compat yes;
	debug all;
	<emphasis>export filter export_OSPF;</emphasis>
	import all;
	ecmp yes;

	area 0.0.0.0 {
		interface "eth0.12", "eth0.13" {
			authentication none;
		};
	};
}</screen>

	<para>Après avoir relancé le démon <systemitem
		class='daemon'>bird</systemitem>, le routeur <systemitem
		class='systemname'>R1</systemitem> a le rôle
		<acronym>ASBR</acronym> (<wordasword>Autonmous System Border
		Router</wordasword>) et il est responsable de l'émission des
		<acronym>LSA</acronym>s de type 5 à destination des autres routeurs de
		l'aire. On le vérifie à la console <command>birdc</command>.</para>

<screen><?dbfo keep-together="auto" ?><prompt>#</prompt> birdc
BIRD 1.6.3 ready.
bird> show ospf lsadb

Global

 Type   LS ID           Router          Sequence   Age  Checksum
 <emphasis>0005</emphasis>  0.0.0.0         0.0.0.1          80000001  1693    c8a4

Area 0.0.0.0

 Type   LS ID           Router          Sequence   Age  Checksum
 0001  0.0.0.1         0.0.0.1          80000078  1684    73dc
 0001  0.0.0.2         0.0.0.2          80000077  1688    5bdd
 0002  10.1.12.2       0.0.0.2          80000006  1689    ea8b
 0001  0.0.0.3         0.0.0.3          80000074  1688    999b
 0002  10.1.13.3       0.0.0.3          80000006  1692    d998
 0002  10.1.23.3       0.0.0.3          80000003  1042    7fea</screen>
	</answer>
	</qandaentry>

	<qandaentry>
	<question>
	<para><phrase>Comment la route par défaut apparaît-elle sur les autres
		routeurs <acronym>OSPF</acronym> ?</phrase></para>

	<para>Relevez les informations sur la route par défaut au niveau système et
		au niveau du démon <systemitem class='daemon'>bird</systemitem>.
		Rechercher le type de route <acronym>OSPF</acronym> publié par le
		routeur de bordure <systemitem
		class='systemname'>R1</systemitem>.</para>
	</question>
	<answer>
	<para>Le relevé le plus simple consiste à visualiser la table de routage au
		niveau système.</para>

<screen><prompt>r3:~$</prompt> ip route ls
<emphasis>default</emphasis> via 10.1.13.1 dev eth0.13 proto bird metric 64
10.1.12.0/26 proto bird metric 64
        nexthop via 10.1.13.1  dev eth0.13 weight 1
        nexthop via 10.1.23.2  dev eth0.23 weight 1
10.1.13.0/26 dev eth0.13 proto kernel scope link src 10.1.13.3
10.1.23.0/26 dev eth0.23 proto kernel scope link src 10.1.23.3</screen>

	<para>Sur les routeurs <systemitem class='systemname'>R2</systemitem> et
		<systemitem class='systemname'>R3</systemitem>, cette route par défaut
		apparaît dans la base <acronym>OSPF</acronym> comme une entrée de type
		<option>E2</option>.</para>

	<para>L'indicateur <option>E2</option> correspond au type par défaut des
		routes apprises par le biais de la redistribution. La métrique est	un
		point important à considérer avec les routes de type
		<option>E2</option>. Ces routes ne présentent que le coût du chemin
		allant du routeur <acronym>ASBR</acronym> vers le réseau de destination
		; ce qui ne correspond pas au coût réel du chemin.</para>
	
	<para>En prenant l'exemple du routeur <systemitem
		class='systemname'>R3</systemitem>, on retrouve les informations
		suivantes à la console <command>birdc</command>.</para>

<screen><prompt>#</prompt> birdc
BIRD 1.6.3 ready.
bird> show route
0.0.0.0/0	via 10.1.13.1 on eth0.13 [OSPFv2R3 17:00:08] * <emphasis>E2 (150/10/100)</emphasis> [0.0.0.1]
10.1.12.0/26	multipath [OSPFv2R3 17:00:08] * I (150/20) [0.0.0.2]
        via 10.1.13.1 on eth0.13 weight 1
        via 10.1.23.2 on eth0.23 weight 1
10.1.13.0/26	dev eth0.13 [OSPFv2R3 16:18:17] * I (150/10) [0.0.0.3]
10.1.23.0/26	dev eth0.23 [OSPFv2R3 16:10:43] * I (150/10) [0.0.0.3]</screen>

	<para>La métrique relevée pour la route par défaut est composée d'un coût de
		<option>10</option> correspondant au lien entre <systemitem
		class='systemname'>R3</systemitem> et <systemitem
		class='systemname'>R1</systemitem> : c'est la métrique de type
		1.</para>

	<para>La même métrique est aussi composée d'un coût de <option>100</option>
		qui correspond à la règle d'exportation appliquée sur le routeur
		<systemitem class='systemname'>R1</systemitem> : c'est la métrique de
		type 2.</para>

	<para>Au niveau système, cette même route apparaît avec la métrique
		<option>64</option> parce qu'elle a été exportée depuis le démon
		<systemitem class='daemon'>bird</systemitem> vers le noyau avec cette
		dernière valeur.</para>
	</answer>
	</qandaentry>
</qandadiv>
</qandaset>
</sect1>

<?custom-pagebreak?>
<sect1 xml:id='interco.ospf-bird.fake-routes'>
	<title>Ajout de routes fictives</title>

	<para>L'introduction de nouvelles entrées fictives dans les tables de
		routage est une pratique très répandue. Elle permet de qualifier le bon
		fonctionnement du filtrage réseau ou d'un service Internet sans ajouter
		de matériel. Cette section décrit justement la mise en place d'un
		service Web	de test.</para>

	<para>Pour réaliser ces manipulations, on dispose de deux techniques
		distinctes.</para>

	<itemizedlist>
	<listitem>
	<para>Historiquement, la première solution consiste à utiliser des
		interfaces de boucles locales sur des équipements Cisco ou des
		interfaces de type <wordasword>dummy</wordasword> sur les systèmes
		GNU/Linux.</para>

	<para>Cette solution est satisfaisante du point de vue protocole de
		routage, mais ces interfaces ne participent pas au routage sur le
		système sur lequel elles sont implantées. Elles servent aux annonces
		faites par les protocoles de routage dynamique.</para>

	<para>Ce type d'interface est utilisé sur le routeur <systemitem
		class='systemname'>R3</systemitem> dans la <xref
		linkend='interco.ospf-bird.fake-routes.dummies' />.</para>
	</listitem>
	<listitem>
	<para>Avec le recours de plus en plus fréquent à la virtualisation et aux
		conteneurs, de nouveaux types d'interfaces virtuelles ont été
		introduits : <systemitem>tap</systemitem> et
		<systemitem>veth</systemitem>. Pour simplifier au maximum, les
		interfaces <systemitem>tap</systemitem> sont des cordons de brassage et
		les interfaces <systemitem>veth</systemitem> sont des liens point à
		point.</para> 

	<para>Dans notre contexte, chaque paire d'interfaces
		<systemitem>veth</systemitem> nous sert à introduire nouveau réseau
		fictif sans ajouter un seul équipement matériel supplémentaire.</para>

	<para>Relativement, aux interface de type <systemitem>dummy</systemitem>,
		l'utilisation d'un lien point à point provoque effectivement une
		décision de routage au sein du noyau.</para>

	<para>Pour compléter un peu plus le scénario du réseau factice, on peut
		utiliser les espaces de noms réseau (<wordasword>network
		namespaces</wordasword>). Un espace de nom réseau désigne un
		ensemble d'interfaces associées à une table de routage indépendante.
		Dans notre contexte, on place une extrémité du lien point à point,
		c'est à dire une interface <systemitem>veth</systemitem>, dans un
		espace ne nom différent.</para>

	<para>Cet espace de nom réseau et le type d'interface
		<systemitem>veth</systemitem> sont utilisés sur le routeur <systemitem
		class='systemname'>R2</systemitem> dans la <xref
		linkend='interco.ospf-bird.fake-routes.veth' />.</para>
	</listitem>
	</itemizedlist>
</sect1>

<sect1 xml:id='interco.ospf-bird.fake-routes.dummies'>
	<title>Interfaces de type <wordasword>dummy</wordasword></title>

<qandaset>
<qandadiv>
	<qandaentry>
	<question>
	<para><phrase>Comment créer et configurer une interface réseau virtuelle de type
		<wordasword>dummy</wordasword> sur un système GNU/Linux
		?</phrase></para>

	<para>Rechercher dans la documentation de la commande <command>ip</command>
		la syntaxe qui permet de créer l'interface <option>dummy0</option> avec
		l'adresse <systemitem
		class='ipaddress'>10.1.3.3/29</systemitem>.</para>

	<para>Vérifier la présence d'une nouvelle entrée dans la table de routage
		au niveau système.</para>
	</question>
	<answer>
	<para>On commence par la création de l'interface.</para>

<screen><prompt>#</prompt> ip link add name dummy0 type dummy
<prompt>#</prompt> ip link ls dev dummy0
6: dummy0: &lt;BROADCAST,NOARP> mtu 1500 qdisc noop state DOWN mode DEFAULT \
group default qlen 1000
	link/ether 3e:e8:51:46:27:62 brd ff:ff:ff:ff:ff:ff</screen>

	<para>On enchaîne avec la configuration de cette interface.</para>

<screen><prompt>#</prompt> ip link set dev dummy0 up
<prompt>#</prompt> ip addr add 10.1.3.3/29 brd + dev dummy0
<prompt>#</prompt> ip addr ls dev dummy0
6: dummy0: &lt;BROADCAST,NOARP,UP,LOWER_UP> mtu 1500 qdisc noqueue state UNKNOWN \
group default qlen 1000
	link/ether 3e:e8:51:46:27:62 brd ff:ff:ff:ff:ff:ff
	inet 10.1.3.3/29 brd 10.1.3.7 scope global dummy0
		valid_lft forever preferred_lft forever
	inet6 fe80::3ce8:51ff:fe46:2762/64 scope link
		valid_lft forever preferred_lft forever</screen>

	<para>Enfin, on valide la présence d'une entrée correspondante dans la
		table de routage.</para>

<screen><prompt>#</prompt> ip route show to 10.1.3.3/29
10.1.3.0/29 dev dummy0 proto kernel scope link src 10.1.3.3</screen>
	</answer>
	</qandaentry>

	<qandaentry>
	<question>
	<para><phrase>Comment installer un service Web en écoute exclusivement sur
		l'adresse <acronym>IP</acronym> de l'interface
		<option>dummy0</option> ?</phrase></para>

	<para>Pour aller au plus court, on installe le paquet
		<application>lighttpd</application> et on édite la configuration du
		service de façon à limiter l'accès à l'adresse <acronym>IP</acronym>
		voulue.</para>
	</question>
	<answer>
<screen><prompt>#</prompt> aptitude install lighttpd
Les NOUVEAUX paquets suivants vont être installés :
  libfam0{a} lighttpd spawn-fcgi{a}
0 paquets mis à jour, 3 nouvellement installés, 0 à enlever et 0 non mis à jour.
Il est nécessaire de télécharger 350 ko d'archives.
Après dépaquetage, 1 096 ko seront utilisés.
Voulez-vous continuer ? [Y/n/?]</screen>

	<para>On modifie ensuite le fichier de configuration
		<filename>/etc/lighttpd/lighttpd.conf</filename> de façon à limiter
		l'accès à l'adresse <acronym>IPv4</acronym> de l'interface
		<option>dummy0</option>.</para>

<screen><?dbfo keep-together="auto" ?><xi:include href='files/lighttpd.conf.patch'
parse='text' xmlns:xi='http://www.w3.org/2001/XInclude'/></screen>

	<para>Après avoir redémarré l'instance de serveur Web, on vérifie que la
		nouvelle configuration est bien en place.</para>

<screen><prompt>#</prompt> systemctl restart lighttpd
&lt;snipped>
<prompt>#</prompt> ss -nlt '( src :80 )'
State      Recv-Q Send-Q   Local Address:Port     Peer Address:Port
LISTEN     0      128           10.1.3.3:80                  *:*
LISTEN     0      128                 :::80                 :::*</screen>
	</answer>
	</qandaentry>

	<qandaentry>
	<question>
	<para><phrase>Comment ajouter la nouvelle route <systemitem
		class='ipaddress'>10.1.3.0/29</systemitem> dans l'aire de
		routage <acronym>OSPF</acronym> ?</phrase></para>

	<para>Ajouter l'interface <option>dummy0</option> dans la configuration du
		protocole <acronym>OSPF</acronym> du démon <systemitem
		class='daemon'>bird</systemitem> sur le routeur <systemitem
		class='systemname'>R3</systemitem>.</para>
	</question>
	<answer>
	<para>La partie <acronym>OSPF</acronym> du fichier de configuration sur
		<systemitem class='systemname'>R3</systemitem> devient :</para>

<screen><prompt>#</prompt> sed -n '/protocol ospf OSPFv2R3 {/,/^}/p' /etc/bird/bird.conf
protocol ospf OSPFv2R3 {
	rfc1583compat yes;
	ecmp yes;
	debug all;
	export all;
	import all;

	area 0.0.0.0 {
		interface "eth0.13", "eth0.23" {
			authentication none;
		};
		<emphasis>interface "dummy0"</emphasis> {
			stub yes;
		};
	};
}</screen>

	<para>On vérifie ensuite que cette entrée est bien intégrée dans la base
		des routes <acronym>OSPF</acronym> à l'aide de la console
		<command>birdc</command>.</para>

<screen><prompt>#</prompt> birdc
BIRD 1.6.3 ready.
bird> show route 10.1.3.0/29
10.1.3.0/29        dev dummy0 [OSPFv2R3 18:52:11] * I (150/10) [0.0.0.3]</screen>
	</answer>
	</qandaentry>

	<qandaentry>
	<question>
	<para><phrase>Comment valider l'accès à ce service Web depuis les autres
		réseaux ?</phrase></para>

	<para>En respectant l'ordre des protocoles de la pile
		<acronym>TCP/IP</acronym>, on commence par valider la connectivité au
		niveau réseau avant de passer à la couche application.</para>
	</question>
	<answer>
	<para>À partir du routeur <systemitem class='systemname'>R1</systemitem>,
		on utilise la séquence suivante :</para>
	<itemizedlist>
	<listitem>
	<para>Test <acronym>ICMP</acronym> au niveau réseau :</para>

<screen><prompt>r1:~$</prompt> ping -c 2 10.1.3.3
PING 10.1.3.3 (10.1.3.3) 56(84) bytes of data.
64 bytes from 10.1.3.3: icmp_seq=1 ttl=64 time=0.916 ms
64 bytes from 10.1.3.3: icmp_seq=2 ttl=64 time=0.731 ms

--- 10.1.3.3 ping statistics ---
2 packets transmitted, 2 received, 0% packet loss, time 1001ms
rtt min/avg/max/mdev = 0.731/0.823/0.916/0.096 ms</screen>
	</listitem>
	<listitem>
	<para>Test <acronym>HTTP</acronym> au niveau application :</para>

<screen><prompt>r1:~$</prompt> wget -O /dev/null http://10.1.3.3
--2017-11-06 19:12:56--  http://10.1.3.3/
Connexion à 10.1.3.3:80… connecté.
requête HTTP transmise, en attente de la réponse… 200 OK
Taille : 1475 (1,4K) [text/html]
Sauvegarde en : « /dev/null »

/dev/null   100%[==========================>]   1,44K  --.-KB/s    ds 0s

2017-11-06 19:12:56 (301 MB/s) - « /dev/null » sauvegardé [3378]</screen>
	</listitem>
	</itemizedlist>
	</answer>
	</qandaentry>
</qandadiv>	
</qandaset>
</sect1>

<sect1 xml:id='interco.ospf-bird.fake-routes.veth'>
	<title>Interfaces de type <wordasword>veth</wordasword> et
		<wordasword>network namespaces</wordasword></title>

	<para>L'introduction d'un nouvel espace de nom réseau revient à introduire
		une nouvelle table de routage dans un même système. Dans la vue
		ci-dessous, le cadre vert illustre les éléments ajoutés au routeur
		<systemitem class='systemname'>R2</systemitem>.</para>

	<mediaobject>
	<imageobject role='fo'>
		<imagedata format='PNG' fileref='images/interco.ospf.ns.png' width='9cm' scalefit='1' />
	</imageobject>
	<imageobject role='html'>
		<imagedata format='PNG' fileref='images/interco.ospf.ns.png' width='480px' scalefit='1' />
	</imageobject>
	<textobject>
		<phrase>Topologie logique avec un espace de noms réseau</phrase>
	</textobject>
	</mediaobject>

<qandaset>
<qandadiv>
	<qandaentry>
	<question>
	<para><phrase>Comment créer et configurer une paire d'interfaces réseau
		virtuelles de type <wordasword>veth</wordasword> sur un système
		GNU/Linux ?</phrase></para>

	<para>Rechercher dans la documentation de la commande <command>ip
		link</command> la syntaxe qui permet de créer la paire d'interfaces
		<option>veth0</option> et <option>veth1</option>.</para>
	</question>
	<answer>
<screen><prompt>#</prompt> ip link add veth1 type veth peer name veth0
<prompt>#</prompt> ip link ls | grep veth | fmt -t -w80
7: veth0@veth1: &lt;BROADCAST,MULTICAST,M-DOWN> mtu 1500 qdisc noop state DOWN
	mode DEFAULT group default qlen 1000
8: veth1@veth0: &lt;BROADCAST,MULTICAST,M-DOWN> mtu 1500 qdisc noop state DOWN
	mode DEFAULT group default qlen 1000</screen>

	<para>On doit activer ces deux interfaces pour les utiliser ensuite au
		niveau réseau.</para>

<screen><prompt>#</prompt> ip link set dev veth0 up
<prompt>#</prompt> ip link set dev veth1 up
<prompt>#</prompt> ip link ls | grep veth | fmt -t -w80
7: veth0@veth1: &lt;BROADCAST,MULTICAST,UP,LOWER_UP> mtu 1500 qdisc noqueue
	state UP mode DEFAULT group default qlen 1000
8: veth1@veth0: &lt;BROADCAST,MULTICAST,UP,LOWER_UP> mtu 1500 qdisc noqueue
	state UP mode DEFAULT group default qlen 1000</screen>
	</answer>
	</qandaentry>
</qandadiv>	
</qandaset>
</sect1>

<?custom-pagebreak?>
<sect1 xml:id='interco.ospf-bird.vm'>
	<title>Manipulations sur machines virtuelles</title>

	<para>Il est possible de réaliser l'ensemble des manipulations de ce
	support à l'aide de trois instances de machines virtuelles et du
	commutateur &url.ovs; présenté dans le guide &url.vm;.</para>

	<para>Voici quelques éléments sur la mise en œuvre de cette «infrastructure
	de travaux pratiques». Dans la figure ci-dessous, le routeur baptisé
	<citetitle>ISP</citetitle> correspond au système hôte sur lequel les
	systèmes virtuels sont exécutés.</para>

	<mediaobject>
	<imageobject role='fo'>
		<imagedata format='PNG' fileref='images/interco.ospf.vm.png' width='9cm' scalefit='1' />
	</imageobject>
	<imageobject role='html'>
		<imagedata format='PNG' fileref='images/interco.ospf.vm.png' width='480px' scalefit='1' />
	</imageobject>
	<textobject>
		<phrase>Topologie logique machines virtuelles</phrase>
	</textobject>
	</mediaobject>

	<sect2 xml:id='interco.ospf-bird.vm.ovs'>
		<title>Préparation du commutateur Open vSwitch</title>

	<para>On se réfère au guide &url.vm; dans lequel le lancement du
	commutateur virtuel &url.ovs; est intégré à la configuration du système
	hôte. Voici un extrait du fichier
	<filename>/etc/network/interfaces</filename> relatif à la configuration du
	commutateur <systemitem>dsw-host</systemitem>.</para>

<screen><?dbfo keep-together="auto" ?><xi:include href='files/interfaces'
parse='text' xmlns:xi='http://www.w3.org/2001/XInclude'/></screen>

	<para>Dans cette configuration, <systemitem>vlan1</systemitem> est
	l'interface principale du système hôte. Elle sert à la fois au routage et à
	l'accès aux instances de machines virtuelles depuis les autres
	réseaux.</para>

	<para>La configuration de départ du commutateur sur le système hôte est la
	suivante :</para>

<screen>$ sudo ovs-vsctl show
0fb1e80b-37cf-4dce-9a19-17b9fb989610
    Bridge dsw-host
        Port "eth0"
            Interface "eth0"
        Port "vlan1"
            Interface "vlan1"
                type: internal
        Port dsw-host
            Interface dsw-host
                type: internal
    ovs_version: "2.3.0"</screen>

	<para>Partant de cette configuration de départ, on créé 3 cordons de
	brassage ; un par routeur. On dispose d'un script pour répéter les
	opérations de base.</para>

<screen><?dbfo keep-together="auto" ?><xi:include href='files/patchcables.sh'
parse='text' xmlns:xi='http://www.w3.org/2001/XInclude'/></screen>

	<para>Avec cet outil, la création des cordons s'effectue comme suit
	:</para>

<screen><prompt>$</prompt> sh ./patchcables.sh tap1 tap2 tap3</screen>

	<para>Maintenant que les cordons sont disponibles, il faut les brasser sur
	le commutateur <systemitem>dsw-host</systemitem>. L'opération ci-dessous
	créé trois nouveaux ports sur le commutateur.</para>

<screen><prompt>$</prompt> for port in tap1 tap2 tap3; do sudo ovs-vsctl add-port dsw-host $port; done</screen>

	<para>Pour respecter la topologie physique proposée dans l'énoncé, ces
	trois ports doivent être configurés en mode
	<wordasword>trunk</wordasword>de façon à ce que chaque routeur puisse
	router les <acronym>VLAN</acronym>s qui le concernent. Avec &url.ovs;, les
	paramètres de configuration sont les suivants :</para>

<screen><prompt>$</prompt> sudo ovs-vsctl set port tap1 vlan_mode=trunk trunks=0,12,13
<prompt>$</prompt> sudo ovs-vsctl set port tap2 vlan_mode=trunk trunks=12,23
<prompt>$</prompt> sudo ovs-vsctl set port tap3 vlan_mode=trunk trunks=13,23</screen>

	<note>
	<para>La particularité du commutateur &url.ovs; est d'utiliser le numéro 0
	comme <acronym>VLAN</acronym> par défaut. Dans notre cas, ce
	<acronym>VLAN</acronym> 0 devient le <acronym>VLAN</acronym> natif dans
	lequel circulent les trames sans étiquettes
	<acronym>IEEE802.1Q</acronym>.</para>
	</note>

	<para>On aboutit à la représentation graphique suivante :</para>

	<mediaobject>
	<imageobject role='fo'>
		<imagedata format='PNG' fileref='images/interco.ospf.ovs.png' width='9cm' scalefit='1' />
	</imageobject>
	<imageobject role='html'>
		<imagedata format='PNG' fileref='images/interco.ospf.ovs.png' width='480px' scalefit='1' />
	</imageobject>
	<textobject>
		<phrase>Brassage des machines virtuelles</phrase>
	</textobject>
	</mediaobject>

	<para>La table de correspondance entre <acronym>VLAN</acronym> et liaison
	devient :</para>

	<informaltable frame='all'>
	<tgroup cols='2'>
	<colspec colwidth='1*'/>
	<colspec colwidth='1*'/>
	<tbody>
	<row>
		<entry><acronym>VLAN</acronym> numéro 0</entry>
		<entry>Liaison R1 &lt;-> ISP</entry>
	</row>
	<row>
		<entry><acronym>VLAN</acronym> numéro 12</entry>
		<entry>Liaison R1 &lt;-> R2</entry>
	</row>
	<row>
		<entry><acronym>VLAN</acronym> numéro 13</entry>
		<entry>Liaison R1 &lt;-> R3</entry>
	</row>
	<row>
		<entry><acronym>VLAN</acronym> numéro 23</entry>
		<entry>Liaison R2 &lt;-> R3</entry>
	</row>
	</tbody>
	</tgroup>
	</informaltable>

	<para>Une fois que les opérations des sections suivantes auront été
	effectuées, la consultation de la table <acronym>CAM</acronym> du
	commutateur donnera les informations suivantes :</para>

<screen><prompt>$</prompt> sudo ovs-appctl fdb/show dsw-host
[sudo] password for latu: 
 port  VLAN  MAC                Age
   11    12  ba:ad:ca:fe:00:02   10
   12    23  ba:ad:ca:fe:00:03    9
   12    13  ba:ad:ca:fe:00:03    9
   10    13  ba:ad:ca:fe:0d:01    9
   10    12  ba:ad:ca:fe:0c:01    4
   11    23  ba:ad:ca:fe:00:02    1
    1     0  de:56:80:40:1d:ed    0
    2     0  42:d9:5d:6c:89:d8    0</screen>
	</sect2>

	<sect2 xml:id='interco.ospf-bird.vm.rtr'>
		<title>Préparation des routeurs</title>

	<para>Sachant que l'on dispose d'une image <wordasword>master</wordasword>
	sur laquelle est installée un système Debian GNU/Linux de base, on créé 3
	images différentielles qui vont correspondre aux instances de routeurs.
	Voici un exemple de suite de commandes pour la mise en place des
	images.</para>

<screen><prompt>:~$</prompt> mkdir -p ~/vm/ospf
<prompt>:~$</prompt> cd vm
<prompt>:~/vm$</prompt> wget http://www.stri/vm/vm0-debian-testing-i386-base.qed
&lt;snipped/>
<prompt>:~/vm$</prompt> cd ospf
<prompt>:~/vm/ospf$</prompt> ../scripts/diff-img.sh ../vm0-debian-testing-i386-base.qed r1.qed
<prompt>:~/vm/ospf$</prompt> ../scripts/diff-img.sh ../vm0-debian-testing-i386-base.qed r2.qed
<prompt>:~/vm/ospf$</prompt> ../scripts/diff-img.sh ../vm0-debian-testing-i386-base.qed r3.qed</screen>

	<para>Le code du &url.vm.diff-img.sh; est fourni dans le guide
	&url.vm;.</para>

	<para>Ensuite, on créé un nouveau script <wordasword>shell</wordasword> de
	lancement des instances de «routeurs» dans lequel on fixe les paramètres
	d'initialisation de ces mêmes «routeurs».</para>

	<warning>
	<para>Ce script ne doit être lancé qu'après l'initialisation du commutateur
	virtuel pour que le brassage des routeurs sur les ports du commutateur
	puisse se faire correctement.</para>
	</warning>

<screen><prompt>$</prompt> cd ~/vm/ospf
<prompt>$</prompt> cat ospf-startup.sh 
#!/bin/bash

../scripts/ovs-startup.sh r1.qed 512 1

../scripts/ovs-startup.sh r2.qed 512 2

../scripts/ovs-startup.sh r3.qed 512 3</screen>
	</sect2>

	<sect2 xml:id='interco.ospf-bird.vm.router-id'>
		<title>Choix des identifiants de routeur OSPF</title>

	<para>Pour toute instance du protocole de routage <acronym>OSPF</acronym>,
	le choix de l'identifiant se fait dans l'ordre suivant :</para>

	<orderedlist>
	<listitem>
		<para>Adresse <acronym>IPv4</acronym> définie à l'aide de l'instruction
		<command>router-id</command>.</para>
	</listitem>
	<listitem>
		<para>Adresse <acronym>IPv4</acronym> la plus élevée parmi toutes les
		interfaces de boucle locale</para>
	</listitem>
	<listitem>
		<para>Adresse <acronym>IPv4</acronym> la plus élevée parmi toutes les
		interfaces actives</para>
	</listitem>
	</orderedlist>

	<para>La liste de identifiants utilisés pour les trois routeurs qui servent
	à la rédaction des réponses types est la suivante.</para>

	<informaltable frame='all'>
	<tgroup cols='2'>
		<colspec colwidth='1*'/>
		<colspec colwidth='1*'/>
	<tbody>
	<row>
		<entry>R1</entry>
		<entry><systemitem class='ipaddress'>0.0.0.1</systemitem></entry>
	</row>
	<row>
		<entry>R2</entry>
		<entry><systemitem class='ipaddress'>0.0.0.2</systemitem></entry>
	</row>
	<row>
		<entry>R3</entry>
		<entry><systemitem class='ipaddress'>0.0.0.3</systemitem></entry>
	</row>
	</tbody>
	</tgroup>
	</informaltable>
	</sect2>

	<sect2 xml:id='interco.ospf-bird.vm.static-route'>
		<title>Table de routage du système hôte</title>

	<para>Pour que les réseaux de l'aire <acronym>OSPF</acronym> puissent
	communiquer avec le système hôte et l'Internet, il est nécessaire de
	compléter la table de routage du système hôte. Dans ce contexte le système
	hôte joue le rôle d'un routeur central et la technique usuelle employée
	pour répondre au besoin d'interconnexion consiste à implanter une route
	statique avec un «super réseau» qui rassemble tous les réseaux de l'aire en
	une seule entrée.</para>

	<para>L'aire <acronym>OSPF</acronym> étudiée contient quatre réseaux
	:</para>

	<itemizedlist>
	<listitem>
		<para>10.1.3.0/29 - réseau fictif ajouté sur R3,</para>
	</listitem>
	<listitem>
		<para>10.1.12.0/26 - réseau correspondant au lien entre R1 et R2,</para>
	</listitem>
	<listitem>
		<para>10.1.13.0/26 - réseau correspondant au lien entre R1 et R3,</para>
	</listitem>
	<listitem>
		<para>10.1.23.0/26 - réseau correspondant au lien entre R2 et R3,</para>
	</listitem>
	</itemizedlist>

	<para>L'utilisation de l'outil <application>ipcalc</application> permet de
	vérifier qu'un masque de 19 bits permet d'englober ces quatre réseaux en
	une seule entrée.</para>

<screen><prompt>$</prompt> ipcalc 10.1.0.0/19
Address:   10.1.0.0             00001010.00000001.000 00000.00000000
Netmask:   255.255.224.0 = 19   11111111.11111111.111 00000.00000000
Wildcard:  0.0.31.255           00000000.00000000.000 11111.11111111
=>
Network:   10.1.0.0/19          00001010.00000001.000 00000.00000000
HostMin:   10.1.0.1             00001010.00000001.000 00000.00000001
HostMax:   10.1.31.254          00001010.00000001.000 11111.11111110
Broadcast: 10.1.31.255          00001010.00000001.000 11111.11111111
Hosts/Net: 8190                  Class A, Private Internet</screen>

	<para>On complète donc la table de routage du système hôte avec
	l'instruction suivante :</para>

<screen><prompt>$</prompt> sudo ip route add 10.1.0.0/19 via 192.0.2.10</screen>

	<para>Une fois cette nouvelle entrée de la table de routage du système hôte
	en place, on peut valider l'accessibilité des réseaux de l'aire en testant
	le service Web factice implanté sur le routeur R3 depuis le système
	hôte.</para>

<screen><prompt>$</prompt> wget -O /dev/null http://10.1.3.3
--2015-10-30 15:35:37--  http://10.1.3.3/
Connexion à 10.1.3.3:80… connecté.
requête HTTP transmise, en attente de la réponse… <emphasis>200 OK</emphasis>
Taille : 11104 (11K) [text/html]
Sauvegarde en : « /dev/null »</screen>

	<para>Le chargement de la page depuis le serveur web factice fonctionne
	bien !</para>
	</sect2>
</sect1>

<?custom-pagebreak?>
<sect1 xml:id='interco.ospf-bird.refdocs'>
	<title>Documents de référence</title>

	<variablelist>
	<varlistentry xml:id='interco.ospf-bird.refdocs.archi-tp'>
		<term><citetitle>Architecture réseau des travaux pratiques</citetitle></term>
	<listitem>
		<para>Le support &url.infra.tp;  présente la topologie physique des
		salles de travaux pratiques avec la &url.infra.tp.cabling; ainsi que
		les configurations par défaut des équipements. On y trouve aussi le
		plan d'adressage <acronym>IP</acronym> utilisé avec les autres supports
		de travaux pratiques, le plan de numérotations des
		<acronym>VLAN</acronym>s et les affectations des groupes de ports des
		commutateurs.</para>
	</listitem>
	</varlistentry>

	<varlistentry xml:id='interco.ospf-bird.refdocs.config-interface-lan'>
		<term><citetitle>Configuration d'une interface réseau</citetitle></term>
	<listitem>
		<para>Le support &url.config.interface.lan; présente les opérations de
		configuration d'une interface réseau et propose quelques
		manipulations sur les protocoles de la pile
		<acronym>TCP/IP</acronym></para>
	</listitem>
	</varlistentry>

	<varlistentry xml:id='interco.ospf-bird.refdocs.inter-vlan'>
		<term><citetitle>Introduction au routage inter-VLAN</citetitle></term>
	<listitem>
		<para>Le support &url.inter-vlan-routing; introduit le principe du
		routage inter-VLAN ainsi que ses conditions d'utilisation. C'est aussi
		un support de travaux pratiques dans lequel on n'utilise que du routage
		statique et de la traduction d'adresses sources
		(<acronym>S-NAT</acronym>) pour acheminer le trafic utilisateur entre
		les différents réseaux.</para>
	</listitem>
	</varlistentry>

	<varlistentry xml:id='interco.ospf-bird.refdocs.vm'>
		<term><citetitle>Virtualisation système et enseignement</citetitle></term>
	<listitem>
		<para>Le support &url.vm; présente la solution de virtualisation
		intégrée au noyau Linux : <acronym>KVM</acronym>. Associée au
		commutateur &url.ovs;, cette solution permet de construire des
		maquettes de travaux pratiques très complètes en offrant de nombreuses
		fonctions réseau «réelles» dont une table &url.cam;.</para>
	</listitem>
	</varlistentry>
	</variablelist>
</sect1>
</article>
