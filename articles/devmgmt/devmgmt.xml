<?xml version='1.0'?>
<!DOCTYPE article PUBLIC "-//OASIS//DTD DocBook XML V5.0//EN"
        "/usr/share/xml/docbook/schema/dtd/5.0/docbook.dtd" [

<!ENTITY phl                    SYSTEM "author.xml">
<!ENTITY legal                  SYSTEM "legal.xml">

<!ENTITY iptables.active        SYSTEM "files/active">

<!-- urls -->
<!ENTITY % rfc_urls SYSTEM 'rfc.urls.xml'>
%rfc_urls;

<!ENTITY url.initiation.routage
	'<link xmlns="http://docbook.org/ns/docbook" xlink:href="http://www.inetdoc.net/guides/index.html#routing-qos-sect">
	<citetitle>Routage et Qualité de service</citetitle></link>'>

<!ENTITY url.quagga
	'<link xmlns="http://docbook.org/ns/docbook" xlink:href="http://www.quagga.net/">
	<citetitle>Quagga</citetitle></link>'>

<!ENTITY url.openssh
	'<link xmlns="http://docbook.org/ns/docbook" xlink:href="http://openssh.org/">
	<citetitle>OpenSSH</citetitle></link>'>

<!ENTITY url.stunnel
	'<link xmlns="http://docbook.org/ns/docbook" xlink:href="http://www.stunnel.org/">
	<citetitle>Stunnel</citetitle></link>'>

<!ENTITY url.openvpn
	'<link xmlns="http://docbook.org/ns/docbook" xlink:href="http://openvpn.net/">
	<citetitle>OpenVPN</citetitle></link>'>

<!ENTITY url.minicom
	'<link xmlns="http://docbook.org/ns/docbook" xlink:href="http://alioth.debian.org/projects/minicom/">
	<citetitle>Information sur le projet minicom</citetitle></link>'>

<!ENTITY url.cert.incidents
	'<link xmlns="http://docbook.org/ns/docbook" xlink:href="http://www.cert.org/nav/index_red.html">
	<citetitle>CERT: Vulnerabilities, Incidents &amp; Fixes</citetitle></link>'>

<!ENTITY url.ietf.syslog
        '<link xmlns="http://docbook.org/ns/docbook" xlink:href="http://www.employees.org/~lonvick/">
        <citetitle>IETF Syslog Working Group Home Page</citetitle></link>'>

<!ENTITY url.hsc.syslog
        '<link xmlns="http://docbook.org/ns/docbook" xlink:href="http://www.hsc.fr/ressources/presentations/dnac03/">
        <citetitle>Normes utiles en sécurité réseau</citetitle></link>'>

<!ENTITY url.logwatch
        '<link xmlns="http://docbook.org/ns/docbook" xlink:href="http://www.logwatch.org/">
        <citetitle>Logwatch</citetitle></link>'>

<!ENTITY url.logcheck
        '<link xmlns="http://docbook.org/ns/docbook" xlink:href="http://logcheck.org/">
        <citetitle>Logcheck</citetitle></link>'>

<!ENTITY url.nsa.switch.guide
        '<link xmlns="http://docbook.org/ns/docbook" xlink:href="http://www.nsa.gov/ia/_files/switches/switch-guide-version1_01.pdf">
        <citetitle>Swicth guide version 1.01</citetitle></link>'>

<!ENTITY url.nsa.router.guide
        '<link xmlns="http://docbook.org/ns/docbook" xlink:href="http://www.nsa.gov/ia/_files/routers/C4-040R-02.pdf">
        <citetitle>Router guide version 1.1c</citetitle></link>'>

<!ENTITY url.nsa.summary
        '<link xmlns="http://docbook.org/ns/docbook" xlink:href="http://www.nsa.gov/ia/_files/routers/cisco_exec_sum.pdf">
        <citetitle>Executive Summary</citetitle></link>'>
]>

<article xmlns="http://docbook.org/ns/docbook" xml:id="devmgmt" xml:lang="fr">

<info>
  <title>Gestion des équipements réseau avec GNU/Linux</title>
  &phl;
  <abstract>
    <para>Cet article présente les principaux modes de gestion d'équipements
    réseau (routeurs, commutateurs, points d'accès, etc.) à partir d'un système
    GNU/Linux.</para>
  </abstract>
  <keywordset>
    <keyword>inetdoc</keyword>
    <keyword>Linux</keyword>
    <keyword>minicom</keyword>
    <keyword>lrzsz</keyword>
    <keyword>xmodem</keyword>
    <keyword>tftp</keyword>
    <keyword>tftpd-hpa</keyword>
    <keyword>syslog</keyword>
    <keyword>syslog-ng</keyword>
    <keyword>ntp</keyword>
    <keyword>mrtg</keyword>
    <keyword>snmp</keyword>
  </keywordset>
</info>

<sect1 xml:id='devmgmt.legal.meta'>
  &legal;
  <sect2 xml:id='devmgmt.meta'>
    <title>Méta-information</title>

  <para>Cet article est écrit avec <link
  xlink:href="http://www.docbook.org"><citetitle>DocBook</citetitle></link> XML
  sur un système <link xlink:href="http://www.debian.org"><citetitle>Debian
  GNU/Linux</citetitle></link>. Il est disponible en version imprimable au
  format PDF : <link
  xlink:href="http://www.inetdoc.net/pdf/__printbasename__"><literal>__printbasename__</literal></link>.</para>
  </sect2>

  <sect2 xml:id='devmgmt.meta.hardware'>
    <title>Équipements testés</title>

    <para>Tous les tests présentés dans cet article sont effectués sur des
    équipements <trademark>Cisco</trademark>. Cela ne signifie pas que ces
    équipements sont les seuls à être gérés de cette façon. Bien au contraire !
    Les outils de gestion décrits sont utilisables avec n'importe quel
    équipement offrant la fonctionnalité étudiée.</para>
  </sect2>

  <sect2 xml:id='meta.software'>
    <title>Logiciels utilisés</title>

    <para>Toutes les commandes utilisées dans ce document ne sont pas
    spécifiques à une version particulière des systèmes UNIX ou GNU/Linux.
    Comme la distribution <citetitle>Debian GNU/Linux</citetitle> est
    utilisée pour l'ensemble des supports du site
    <citetitle>inetdoc.net</citetitle>, voici une liste des paquets contenant
    les commandes nécessaires :</para>

    <itemizedlist>
      <listitem>
	<para><link
	linkend='devmgmt.minicom'><application>minicom</application></link> -
	friendly menu driven serial communication program.</para>
      </listitem>
      <listitem>
	<para><link
	linkend='devmgmt.minicom.examples.xmodem'><application>lrzsz</application></link> -
	Tools for zmodem/xmodem/ymodem file transfer.</para>
      </listitem>
      <listitem>
	<para><link
	linkend='devmgmt.tftp-hpa'><application>tftpd-hpa</application></link> -
	HPA's tftp server.</para>
      </listitem>
      <listitem>
	<para><link
	linkend='devmgmt.log'><application>sysklogd</application></link> -
	System Logging Daemon.</para>
      </listitem>
      <listitem>
	<para><link
	linkend='devmgmt.log.syslog-ng'><application>syslog-ng</application></link> -
	Next generation logging daemon.</para>
      </listitem>
      <listitem>
	<para><link
	linkend='devmgmt.log.process'><application>logcheck</application></link> -
	Mails anomalies in the system logfiles to the administrator.</para>
      </listitem>
      <listitem>
	<para><link
	linkend='devmgmt.ntp'><application>ntp</application></link> -
	Network Time Protocol: daemon for simple systems.</para>
      </listitem>
      <listitem>
	<para><link
	linkend='devmgmt.mrtg'><application>mrtg</application></link> -
	multi router traffic grapher.</para>
      </listitem>
    </itemizedlist>
  </sect2>
</sect1>

<?custom-pagebreak?>
<sect1 xml:id='devmgmt.archi'>
  <title>Sécurité et architecture</title>

  <para>Par définition, la sécurité d'un système d'information est une chaîne
  de fonctions dont la résistance est égale à celle du maillon le plus
  faible. La thématique de cet article peut être considérée comme une fonction
  de sécurité. En effet, il est essentiel d'avoir un accès sûr et continu aux
  équipements d'interconnexion et|ou d'être capable de redémarrer avec des jeux
  de configurations fiables en cas de défaut.</para>

  <para>L'objet de cet article n'est pas de développer en détails les aspects
  sécurité de la gestion des équipements réseau. Pour autant, on peut essayer
  d'énoncer «la règle d'or» de la sécurisation des équipements à partir
  l'expression consacrée en anglais : <emphasis>toutes les opérations de
  gestion des équipements doivent s'effectuer hors de la bande passante
  utilisateur</emphasis>. En anglais, on retrouve très fréquemment l'acronyme
  <acronym>OOB</acronym> pour <wordasword>Out Of Band
  management</wordasword>.</para>

  <para>Dans la conception d'une architecture d'interconnexion réseau moderne,
  on doit systématiquement prévoir un périmètre dédié à la gestion de
  l'infrastructure. Les contours d'un tel périmètre varient en fonction du
  contexte. À minima, ce périmètre peut être constitué d'un VLAN pour un
  commutateur unique. Dès que le nombre des équipements s'étoffe un peu on
  doit disposer d'un réseau <acronym>IP</acronym> spécifique et de services
  complets : <acronym>SSH</acronym>, <link
  linkend='devmgmt.tftp'><acronym>TFTP</acronym></link>, <link
  linkend='devmgmt.log'><acronym>SysLog</acronym></link>, <link
  linkend='devmgmt.ntp'><acronym>NTP</acronym></link>, <link
  linkend='devmgmt.mrtg'><acronym>SNMP</acronym></link>,
  <acronym>DNS</acronym>, <acronym>WWW</acronym>, etc.</para>

  <para>Voici un exemple d'architecture type dans laquelle les signes
  '<literal>,-&lt;</literal>' matérialisent les accès de gestion sur les
  équipements :</para>

<screen width='80'>           __
       ___/  \_         ,-&lt;    pare-feu
     _/        \__     _V_____   .--.        ,-&lt;
    /             \   (_______)  | X|,-&lt;   __V________ / /______
   | Internet . . .|__|routeur|__| X|__   |_=_=_=_=_=_/ /_=_=_=_|
   \_ . . . .   __/   (_______)  | X|  `----'   |    / /      |
    |\__     __/            ,-&lt; ------          |     ,-&lt;     |périmètre
    |   \___/             __V________           |   __V______ |accès
 .--'                    |_=_=_=_=_=_|          |  |_=_=_=_=_||
 |.....                          | | périmètre  |    |     '--'
.------,~                    .--.| | services   |    |.....
| mgmt |'                    | .|, `------------'   .------,~
|      ||                 .--| =|                   |client|'
\------ /                 | .|  |       _________   |      ||--,~
 ======/\              .--| ------     |_=_=_=_=_|  \------ /nt|'
console  \             | .|  |        périmètre|     ======/   ||--,~
          \            | ------         gestion|        \------ /nt|'
        ___\           |  |                .--.|         ======/   ||
        \             ------          ,-&lt;  | .|,            \------ /
         \                           _V_____ =|services      ======/
          \  ligne spécialisée      (_______) |gestion des
           \________________________|routeur|--- équipements
                                    (_______)
</screen>

  <para>On retrouve ici les deux grandes catégories d'accès pour la gestion des
  équipements hors de la bande passante utilisateur.</para>

  <variablelist>
    <varlistentry xml:id='ls'>
    <term>Ligne spécialisée</term>
    <listitem>
    <para>L'utilisation d'une ligne spécialisée est généralement préconisée
    pour obtenir un accès physique indépendant à l'infrastructure à moindre
    coût. Une ligne spécialisée présente une sécurité intrinsèque puisque le
    canal de communication est dédié et la limitation du débit ne pose pas de
    problème puisque les opérations de gestion des équipements ne consomment
    que très peu de bande passante. Cette solution est généralement proposée
    dans les offres d'hébergements externalisés.</para>
    </listitem>
    </varlistentry>
    <varlistentry xml:id='vpn'>
    <term>Réseau privé virtuel</term>
    <listitem>
    <para>Dans le cas où l'on ne dispose pas d'une deuxième voie d'accès
    physique à l'infrastructure, l'utilisation d'un réseau privé virtuel
    réservé à la gestion permet d'accéder aux équipements. Le principal défaut
    de cette solution est évident : le routeur «de tête» devient un point
    d'entrée encore plus sensible. Si on perd l'accès à ce routeur, on est
    coupé du reste de l'infrastructure.</para>
    </listitem>
    </varlistentry>
  </variablelist>

<?custom-pagebreak?>
  <sect2>
    <title>Outils GNU/Linux</title>

  <para>Relativement à l'architecture type présentée ci-dessus, les systèmes
  GNU/Linux conviennent parfaitement à la mise en œuvre d'un ensemble de
  services spécifiques dédiés à la gestion des équipements réseau.</para>
  
  <para>Tout d'abord, le serveur qui héberge les services du périmètre doit
  fonctionner avec GNU/Linux. C'est à cette condition que l'on pourra déployer
  les fonctions décrites dans la suite du document :</para>

  <itemizedlist>
    <listitem>
    <para>Routage directement intégré au serveur avec &url.quagga;. Voir
    &url.initiation.routage;. Dans le cas d'un système d'information utilisant
    le protocole de routage <acronym>OSPF</acronym>, &url.quagga; peut très
    bien servir de «démon de référence» dans les calculs de topologie du réseau
    effectués par les autres équipements.</para>
    </listitem>
    <listitem>
    <para>Centralisation des accès de configuration. Voir <xref
    linkend='devmgmt.minicom'/>.</para>
    </listitem>
    <listitem>
    <para>Centralisation des copies de sauvegarde des configurations. Voir
    <xref linkend='devmgmt.tftp'/>.</para>
    </listitem>
    <listitem>
    <para>[FIXME: compléter avec les autres fonctions de gestion].</para>
    </listitem>
  </itemizedlist>

  <para>Ensuite, pour accéder à distance aux services du périmètre de gestion
  des équipements, les outils GNU/Linux fournissent tout un panel de solutions
  de transmissions chiffrées. :</para>

  <itemizedlist>
    <listitem>
    <para>On peut utiliser &url.openssh; pour ouvrir une console à distance et
    effectuer les opérations de configuration. Voir <xref
    linkend='devmgmt.minicom'/>.</para>
    </listitem>
    <listitem>
    <para>On peut utiliser &url.stunnel; pour chiffrer et|ou translater les
    communications sur un service (ou numéro de port) unique. Il est tout à
    fait possible d'échanger des fichiers d'image système ou de configuration
    via <acronym>TFTP</acronym> à travers un réseau public. &url.stunnel; sert
    alors à chiffrer les communications sur le numéro de port 69 après avoir
    authentifié les deux extrémités à l'aide de leurs certificats respectifs.
    Voir <xref linkend='devmgmt.tftp'/>.</para>
    </listitem>
    <listitem>
    <para>Enfin, on peut utiliser &url.openvpn; pour un chiffrement global des
    communications entre la console et le serveur à travers un réseau public.
    Le coût de mise en œuvre de cet outil est tellement dérisoire relativement
    aux solutions propriétaires, qu'il ne faut pas rater une occasion de
    l'utiliser !</para>
    </listitem>
  </itemizedlist>
  </sect2>
</sect1>

<sect1 xml:id='devmgmt.minicom'>
  <title>Accès à la console</title>

  <para>Même s'il est souvent possible de configurer un équipement à partir
  d'une interface Web, la console a toujours été l'interface de configuration
  la plus «sérieuse». Voici quelques arguments pour étayer cette
  idée :</para>
  
  <itemizedlist>
    <listitem>
    <para>Les «conditions de sécurité» des accès Web de configuration
    d'équipement ont toujours été médiocres jusqu'à présent. Soit le serveur
    Web inclus dans l'équipement contient de nombreux trous de sécurité (il
    suffit d'interroger les bases de rapport d'incidents du
    &url.cert.incidents; pour s'en convaincre) ; soit le coût financier et
    humain de modification de l'infrastructure d'accès aux équipements est trop
    important relativement aux bénéfices attendus.</para>
    </listitem>
    <listitem>
    <para>Les interfaces Web ne permettent pas d'appréhender globalement les
    paramètres de configuration. En effet, dès que le nombre des paramètres et
    des options devient important, les formulaires Web deviennent très lourds à
    gérer. Naviguer d'un paramètre à l'autre suppose plusieurs manipulations de
    formulaires alors que la même opération est immédiate à la console.</para>
    </listitem>
  </itemizedlist>

  <para>Sur les systèmes GNU/Linux, <application>minicom</application> est le
  «couteau suisse» idéal pour toutes les manipulations sur les liaisons séries.
  Avant d'aborder sa configuration et sont utilisation, on vérifie que le
  système offre bien les fonctions nécessaires : <xref
  linkend='devmgmt.minicom.ports' /> et <xref
  linkend='devmgmt.minicom.ports.admin' />.</para>

<?custom-pagebreak?>
  <sect2 xml:id='devmgmt.minicom.ports'>
    <title>Ports série</title>

  <para>Avant de s'attaquer à la configuration du logiciel, il faut s'assurer
  que le port série que l'on veut utiliser est disponible. Comme il s'agit d'un
  périphérique matériel, c'est dans le noyau Linux que l'on trouve les
  informations utiles. Normalement, tous les noyaux livrés avec les
  distributions intègrent directement les pilotes des ports série.</para>

  <para>Il est facile de vérifier que les ports sont disponibles à l'aide de la
  commande <command>dmesg</command> :</para>

<screen width='80'>$ dmesg | less
&lt;snip/>
Serial: 8250/16550 driver .Revision: 1.4 . 48 ports, IRQ sharing enabled
ttyS0 at I/O 0x3f8 (irq = 4) is a 16550A
ttyS1 at I/O 0x2f8 (irq = 3) is a 16550A
ttyS0 at I/O 0x3f8 (irq = 4) is a 16550A
ttyS1 at I/O 0x2f8 (irq = 3) is a 16550A
</screen>

  <para>Les informations ci-dessus indiquent que l'on dispose de deux
  ports : <literal>ttyS0</literal> et <literal>ttyS1</literal> pilotés par
  le composant <literal>16550A</literal>.</para>

  <para>Dans le cas où l'on utilise un noyau «compilé maison», il faut retenir
  les options indiquées ci-dessous à partir des menus de configuration du
  noyau :</para>

<screen width='80'>Linux Kernel Configuration
     Device Drivers
          Character devices
	       Serial drivers

       &lt;*> 8250/16550 and compatible serial support
       [*]   Console on 8250/16550 and compatible serial port
       &lt; >   8250/16550 PCMCIA device support
       [ ]   8250/16550 device discovery via ACPI namespace
       (4)   Maximum number of non-legacy 8250/16550 serial ports
       [*]   Extended 8250/16550 serial driver options 
       [*]     Support more than 4 legacy serial ports
       [*]     Support for sharing serial interrupts
       [ ]     Autodetect IRQ on standard ports (unsafe)
       [*]     Support special multiport boards
       [*]     Support RSA serial ports
       --- Non-8250 serial port support  
</screen>
  </sect2>

  <sect2 xml:id='devmgmt.minicom.ports.admin'>
    <title>Administration des accès</title>

  <para>Une fois que le noyau Linux assure le pilotage des ports série, il faut
  administrer les droits d'accès à ces ports. Par défaut, les périphériques du
  système de fichiers correspondant aux ports série appartiennent au groupe
  <systemitem class='groupname'>dialout</systemitem> :</para>

<screen width='80'>$ ls -l /dev/ttyS?
crw-rw----  1 root dialout 4, 64 2003-02-13 16:41 /dev/ttyS0
crw-rw----  1 root dialout 4, 65 2002-03-14 22:51 /dev/ttyS1
crw-rw----  1 root dialout 4, 66 2002-03-14 22:51 /dev/ttyS2
crw-rw----  1 root dialout 4, 67 2002-03-14 22:51 /dev/ttyS3
</screen>

  <para>Pour qu'un utilisateur normal ait accès aux ports série, il doit
  appartenir au groupe <systemitem
  class='groupname'>dialout</systemitem> :</para>

<screen width='80'># adduser etu dialout
Ajout de l'utilisateur etu au groupe dialout...
Fait.
</screen>

  <para>L'utilisateur <systemitem class='username'>etu</systemitem> doit se
  reconnecter pour bénéficier des ces nouveaux droits d'accès.</para>
  </sect2>

<?custom-pagebreak?>
  <sect2 xml:id='devmgmt.minicom.minirc.dfl'>
    <title>Installation et configuration par défaut de minicom</title>

  <para>Comme indiqué dans la section <xref linkend='meta.software' />, seuls
  les paquets de la distribution <citetitle>Debian GNU/Linux</citetitle>
  sont présentés ici. L'installation de <application>minicom</application> se
  résume donc à l'instruction suivante :</para>

<screen width='80'># apt-get install minicom lrzsz
</screen>

  <para>Après cette étape, il faut créer le fichier de configuration par
  défaut. Ce fichier sert de dénominateur commun à l'échelle du système. Les
  paramètres de ce fichier : <filename>/etc/minicom/minirc.dfl</filename>
  sont activé à chaque lancement du programme
  <application>minicom</application>. L'utilisateur est ensuite libre de tout
  modifier et de se créer ses propres paramètres de configuration par
  défaut.</para>

  <para>Voici un exemple de première exécution du programme :</para>

<screen width='80'># minicom -s
&lt;snip/>

       -------------[configuration]-------------
       | Noms de fichers et chemins            |
       | Protocoles de transfert               |
       | Configuration du port série <co xml:id='main.port.config'/>
       | Modem et appel                        |
       | Ecran et clavier                      |
       | Enregistrer config. sous dfl <co xml:id='main.save'/>
       | Enregistrer la configuration sous...  |
       | Sortir                                |
       | Sortir de Minicom                     |
       -----------------------------------------
</screen>

  <para>Pour aller au plus simple, on se contente de fixer les paramètres du
  port série et de sauvegarder.</para>

  <calloutlist>
    <callout arearefs='main.port.config'>
      <para>Première étape, le port série : voir <xref
      linkend='devmgmt.minicom.minirc.dfl.serial.port'/></para>
    </callout>
    <callout arearefs='main.save'>
      <para>Enregistrement du fichier
      <filename>/etc/minicom/minirc.dfl</filename>.</para>
    </callout>
  </calloutlist>

  <sect3 xml:id='devmgmt.minicom.minirc.dfl.serial.port'>
    <title>Paramètres du port série</title>

  <para>Les valeurs présentés ci-dessous correspondent à la grande majorité des
  paramètres par défaut des équipements d'interconnexion.</para>

<screen width='80'> -----------------------------------------------------------------------
 | A -                             Port série : /dev/ttyS0 <co xml:id='port.name'/>
 | B - Emplacement du fichier de verrouillage : /var/lock              |
 | C -            Programme d'appel intérieur :                        |
 | D -            Programme d'appel extérieur :                        |
 | E -                      Débit/Parité/Bits : 9600 8N1 <co xml:id='port.speed'/>
 | F -              Contrôle de flux matériel : Oui <co xml:id='port.flow.control'/>
 | G -              Contrôle de flux logiciel : Non                    |
 |                                                                     |
 |    Changer quel réglage ?                                           |
 -----------------------------------------------------------------------
</screen>

  <calloutlist>
    <callout arearefs='port.name'>
      <para>En fonction de la liste des ports série disponibles (voir <xref
      linkend='devmgmt.minicom.ports'/>), on saisit le nom du premier port
      série.</para>
    </callout>
    <callout arearefs='port.speed'>
      <para>En fonction des paramètres de l'équipement à gérer, on fixe les
      paramètres de la liaison à l'aide du menu suivant :</para>

<?custom-pagebreak?>
<screen width='80'> ------[Paramètres de communication]-------
 |                                        |
 | Actuellement :  9600 8N1               |
 |                                        |
 |   Vitesse        Parité       Données  |
 |                                        |
 | A: 300           L: Aucune       S: 5  |
 | B: 1200          M: Paire        T: 6  |
 | C: 2400          N: Impaire      U: 7  |
 | D: 4800          O: Marque       V: 8  |
 | E: 9600          P: Espace             |
 | F: 19200                  Bits d'arrêt |
 | G: 38400                         W: 1  |
 | H: 57600                         X: 2  |
 | I: 115200        Q: 8-A-1              |
 | J: 230400        R: 7-P-1              |
 |                                        |
 |                                        |
 | Choix, ou &lt;Entrée> pour sortir ?       |
 ------------------------------------------
</screen>
    </callout>
    <callout arearefs='port.flow.control'>
      <para>Toujours en fonction de l'équipement à gérer, on choisit le
      contrôle de flux matériel. C'est le mode le plus fiable.</para>
    </callout>
  </calloutlist>
  </sect3>

  <sect3 xml:id='devmgmt.minicom.minirc.dfl.file'>
    <title>Fichier de configuration par défaut</title>

  <para>Voici une exemple de fichier
  <filename>/etc/minicom/minirc.dfl</filename> obtenu à partir des réglages
  ci-dessus.</para>

<screen width='80'># Fichier généré automatiquement - utilisez « minicom -s »
# pour changer les paramètres
pu port             /dev/ttyS0
pu baudrate         9600
pu bits             8
pu parity           N
pu stopbits         1
pu scriptprog       /usr/bin/runscript
pu minit            ~^M~ATZ^M~
pu mreset           ~^M~ATZ^M~
pu escape-key       Escape (Meta)
</screen>
  
  <para>Il est aussi possible d'effacer toutes les commandes
  <citetitle>Hayes</citetitle> de dialogue avec les modems. Comme
  <application>minicom</application> possède une option de démarrage éliminant
  tous les dialogues modems, il n'est pas nécessaire de traiter ce problème au
  niveau système. Il se peut qu'un utilisateur ait effectivement besoin d'un
  modem.</para>
  </sect3>
  </sect2>

  <sect2 xml:id='devmgmt.minicom.user.config'>
    <title>Configuration utilisateur</title>

  <para>Le jeu des fonctionnalités de <application>minicom</application> est
  très riche. Il suffit de consulter les pages de manuels pour s'en
  convaincre : <userinput>man minicom</userinput>. L'objet de ce document
  n'étant de dresser un catalogue exhaustif de ces fonctions, voici un exemple
  type de configuration utilisateur :</para>

<screen width='80'>$ MINICOM="-o<co xml:id='option.o'/> -8<co xml:id='option.8'/> -l<co xml:id='option.l'/> -m<co xml:id='option.m'/> -con<co xml:id='option.c'/> -t linux<co xml:id='option.t'/>" ; export MINICOM<co xml:id='option.env'/>
</screen>

  <calloutlist>
    <callout arearefs='option.o'>
      <para>Option <option>-o</option> :
      <application>minicom</application> n'exécute pas les codes
      d'initialisation. C'est cette option qui permet d'éviter les commandes
      <citetitle>Hayes</citetitle> au démarrage. Dans le contexte de connexion
      à un équipement réseau, les dialogues modems sont totalement
      inutiles.</para>
    </callout>
    <callout arearefs='option.8'>
      <para>Option <option>-8</option> : les caractères codés sur
      8 bits sont transmis sans aucune modification. Cette option permet
      d'afficher les caractères accentués en français.</para>
    </callout>
    <callout arearefs='option.l'>
      <para>Option <option>-l</option> : traduction littérale des
      caractères avec le bit de poids fort à 1. Avec cette option
      <application>minicom</application> n'essaie pas de traduire les
      caractères IBM en ASCII.</para>
    </callout>
    <callout arearefs='option.m'>
      <para>Option <option>-m</option> : redéfinit la touche de commande
      avec la touche <keycap>Meta</keycap> ou <keycap>Alt</keycap>. Avec un
      système GNU/Linux, on rencontre deux cas de figure
      classiques :</para>
      <variablelist>
        <varlistentry>
	<term>Sans interface graphique</term>
	<listitem>
<screen width='25'>$ env | grep -i term
TERM=linux
</screen>
	  <para>Il vaut mieux éviter l'option <option>-m</option> et utiliser
	  la séquence de touches <keycap>Ctrl+a</keycap> pour accéder aux
	  fonctions. Par exemple, on accède au menu principal avec la séquence
	  <keycap>Ctrl+a</keycap> puis <keycap>z</keycap>.</para>
	</listitem>
        </varlistentry>
	<varlistentry>
	<term>Avec interface graphique</term>
	<listitem>
<screen width='25'>$ env | grep -i term
TERM=xterm
</screen>
	  <para>L'option <option>-m</option> est utile pour simplifier l'appel
	  aux fonctions. Il suffit d'utiliser la touche <keycap>Alt</keycap>.
	  Par exemple, on accède au menu principal avec la séquence
	  <keycap>Alt+z</keycap>.</para>
	</listitem>
	</varlistentry>
      </variablelist>
    </callout>
    <callout arearefs='option.c'>
      <para>Option <option>-c</option> : utilisation de la couleur. On
      ajoute <option>on</option> ou <option>off</option> pour activer ou
      désactiver l'affichage des couleurs.</para>
    </callout>
    <callout arearefs='option.t'>
      <para>Option <option>-t</option> : définition du type de
      terminal : <option>linux</option> dans ce cas. Cette option est très
      pratique pour conserver les dimensions de la console avec les
      environnements graphiques utilisateur. Il est fréquent que la même
      fenêtre de consoles serve à gérer plusieurs équipements et de la
      documentation. Sans cette option, <application>minicom</application>
      redimensionne la console avec une largeur de 80 caractères.</para>
    </callout>
    <callout arearefs='option.env'>
      <para>Positionnement de la variable d'environnement
      <envar>MINICOM</envar>. Cette variable est consultée à chaque exécution
      de <application>minicom</application>.</para>
    </callout>
  </calloutlist>

  <para>Une fois que l'on est satisfait de son jeu d'options
  <application>minicom</application>, il est possible de le conserver dans la
  configuration du <citetitle>shell</citetitle> :</para>

<screen width='80'>$ echo export MINICOM=\"-o -8 -l -m -con -t linux\" >>~/.bash_profile
</screen>

  <para>De cette façon, toute ouverture d'un nouveau
  <citetitle>shell</citetitle> comprendra la variable d'environnement
  <envar>MINICOM</envar> et ses options.</para>
  </sect2>

  <sect2 xml:id='devmgmt.minicom.examples'>
    <title>Exemples d'utilisation de minicom</title>

  <sect3 xml:id='devmgmt.minicom.examples.break'>
    <title>Séquences Break</title>

  <para>Les exemples d'utilisation des séquences <literal>Break</literal> sont
  nombreux. Le plus souvent, il s'agit d'interrompre brutalement le chargement
  du système d'exploitation sur un équipement. À la suite de cette opération,
  on peut charger une nouvelle image système ou reprendre la main sur un
  équipement dont on a perdu les mots de passe.</para>

  <para>Suivant la configuration de <application>minicom</application>, les
  séquences de touches diffèrent.</para>

  <itemizedlist>
    <listitem>
    <para>Avec un codage clavier sur 7 bits, la séquence est :
    <keycap>Ctrl+a</keycap> puis <keycap>f</keycap>.</para>
    </listitem>
    <listitem>
    <para>Avec un codage clavier sur 8 bits, la séquence est :
    <keycap>Alt+f</keycap>.</para>
    </listitem>
  </itemizedlist>

  <variablelist>
    <varlistentry xml:id="break.swicth">
    <term>Initialisation d'un commutateur <trademark>Cisco</trademark> 2950</term>
    <listitem>
    <para>Pour interrompre le chargement du système d'un commutateur de ce
    modèle il faut que la variable d'environnement <envar>ENABLE_BREAK</envar>
    soit préalablement positionnée sur <literal>on</literal>.</para>
<screen width='80'>sw1#sh boot
BOOT path-list:
Config file:          flash:/config.text
Private Config file:  flash:/private-config.text
Enable Break:         ON
Manual Boot:          no
HELPER path-list:
NVRAM/Config file
      buffer size:    32768
</screen>
    <para>Lors du redémarrage de l'équipement il est possible d'utiliser la
    séquence <keycap>Ctrl+a</keycap> puis <keycap>f</keycap> pour envoyer un
    <literal>Break</literal> et interrompre le chargement du système.</para>

    <calloutlist>
      <callout arearefs='break.2950'>
        <para>Résultat de la séquence <literal>Break</literal>.</para>
      </callout>
    </calloutlist>
<screen width='80'>flashfs[0]: Bytes available: 3169792
flashfs[0]: flashfs fsck took 7 seconds.
...done initializing flash.
Boot Sector Filesystem (bs:) installed, fsid: 3
Parameter Block Filesystem (pb:) installed, fsid: 4
Loading "flash:/c2950-i6q4l2-mz.121-22.EA2.bin"...###########################bad
Error loading "flash:/c2950-i6q4l2-mz.121-22.EA2.bin"

Interrupt within 5 seconds to abort boot process.
Boot process failed...

The system is unable to boot automatically.  The BOOT
environment variable needs to be set to a bootable
image.

<co xml:id='break.2950'/>switch:
</screen>
    </listitem>
    </varlistentry>
    <varlistentry xml:id="break.router">
    <term>Initialisation d'un routeur <trademark>Cisco</trademark> 2500</term>
    <listitem>
    <para>Pour interrompre le chargement du système <acronym>IOS</acronym> d'un
    routeur de cette marque, il faut envoyer un <literal>Break</literal>
    pendant les 60 premières secondes après la mise sous tension de
    l'équipement. Comme cet exemple est traité via un portable avec une
    interface graphique, la séquence de touches est :
    <keycap>Alt+f</keycap>.</para>
    <calloutlist>
      <callout arearefs='break.2500'>
        <para>Résultat de la séquence <literal>Break</literal>.</para>
      </callout>
    </calloutlist>
<screen width='80'>System Bootstrap, Version 11.0(10c)XB2, PLATFORM SPECIFIC RELEASE SOFTWARE (fc1)
Copyright (c) 1986-1998 by cisco Systems
2500 processor with 14336 Kbytes of main memory

<co xml:id='break.2500'/>Abort at 0x11198B6 (PC)
>
>o/r 0x2142
>
>b
</screen>
    </listitem>
    </varlistentry>
  </variablelist>
  </sect3>

  <sect3 xml:id='devmgmt.minicom.examples.xmodem'>
    <title>Transfert d'une image système via xmodem</title>

  <para>En reprenant le cas du commutateur <trademark>Cisco</trademark> 2950,
  on peut transférer une image du système d'exploitation via la connexion série
  avec le protocole xmodem. Ce n'est certainement pas la méthode la plus rapide
  mais lorsque toutes les informations de la mémoire
  <wordasword>flash</wordasword> ont été détruite, il ne reste pas beaucoup
  d'autre solution.</para>

  <para>Voici un exemple de «catastrophe provoquée» :</para>
  <orderedlist>
    <listitem>
    <para>On commence par détruire le contenu de la mémoire
    <wordasword>flash</wordasword>.</para>
<screen width='80'>switch: format flash:
Are you sure you want to format "flash:" (all data will be lost) (y/n)?y
flashfs[0]: 0 files, 1 directories
flashfs[0]: 0 orphaned files, 0 orphaned directories
flashfs[0]: Total bytes: 7741440
flashfs[0]: Bytes used: 1024
flashfs[0]: Bytes available: 7740416
flashfs[0]: flashfs fsck took 5 seconds.
Filesystem "flash:" formatted
switch: dir flash:
Directory of flash:/

2    -rwx  285       &lt;date>               env_vars

7739904 bytes available (1536 bytes used)
switch:
</screen>
    </listitem>
    <listitem>
    <para>On prépare le transfert d'image système via xmodem sur le
    commutateur.</para>
<screen width='80'>switch: flash_init
Initializing Flash...
...The flash is already initialized.
switch: load_helper
copy xmodem: flash:c2950-i6q4l2-mz.121-22.EA2.bin
Begin the Xmodem or Xmodem-1K transfer now...
C
</screen>
    </listitem>
    <listitem>
    <para>On lance le transfert à partir de la séquence de touches
    <keycap>Crtl+A</keycap> puis <keycap>s</keycap>.</para>
    <calloutlist>
      <callout arearefs='xmodem.select'>
        <para>Sélection du protocole de transfert.</para>
      </callout>
      <callout arearefs='xmodem.file'>
        <para>Sélection du fichier image système à transférer.</para>
      </callout>
      <callout arearefs='xmodem.transfer'>
        <para>Transfert du fichier image système.</para>
      </callout>
    </calloutlist>
<screen width='80'>         +-[Envoyer]--+
         | zmodem     |
         | ymodem     |
         | xmodem<co xml:id='xmodem.select'/>
         | kermit     |
         | ascii      |
         +------------+
&lt;snip/>

 +-----------[Sélectionner un fichier pour envoyer]------------+
 |Répertoire : /home/etu                                       |
 | [..]                                                        |
 | [ios]                                                       |
 | .bash_history                                               |
 | .bash_profile                                               |
 | .bashrc                                                     |
 | .viminfo                                                    |
 | c2950-i6q4l2-mz.121-22.EA2.bin<co xml:id='xmodem.file'/>
 | c2950-i6q4l2-tar.121-22.EA2.tar                             |
 | minicom.log                                                 |
 |                                                             |
 |                                                             |
 |       (Échap pour sortir, Espace pour marquer)              |
 +-------------------------------------------------------------+

           [Aller] [Préc.] [Voir]  [Marq.] [Dém .]   [OK]
&lt;snip/>

+-----[xmodem envoyer - Appuyez sur CTRL-C pour quitter]------+
|Sending c2950-i6q4l2-mz.121-22.EA2.bin, 24111 blocks: Give yo|
|ur local XMODEM receive command now.                         |
|Xmodem sectors/kbytes sent: 138/17k<co xml:id='xmodem.transfer'/>
|                                                             |
|                                                             |
|                                                             |
|                                                             |
+-------------------------------------------------------------+
</screen>
    </listitem>
  </orderedlist>
  </sect3>
  </sect2>
</sect1>

<?custom-pagebreak?>
<sect1 xml:id='devmgmt.tftp'>
  <title>Echanges avec le protocole TFTP</title>

  <para>Le protocole <acronym>TFTP</acronym> est défini dans le document
  &url.rfc1350;. C'est une méthode simple utilisée pour transférer des
  fichiers. Il s'appuie sur le protocole <acronym>UDP</acronym> au niveau
  transport. Il se limite à l'écriture et à la lecture de fichiers entre deux
  hôtes réseau. Il ne possède pas de fonction d'authentification et il est
  impossible de lister les fichiers à distance.</para>

  <para>L'absence de complexité de ce protocole fait qu'il peut être implanté
  dans un espace mémoire réduit. C'est la raison pour laquelle on le retrouve
  dans la majorité des équipements réseau comme moyen d'échange d'images
  <wordasword>firmware</wordasword> des systèmes d'exploitation (et|ou) de
  fichiers de configuration.</para>

  <para>Dans le contexte de ce document, le poste avec le système GNU/Linux
  doit échanger les fichiers avec l'équipement réseau. Il s'agit donc de
  configurer un service <systemitem class='daemon'>tftpd</systemitem> avec un
  minimum de précautions au niveau sécurité.</para>

  <sect2 xml:id='devmgmt.tftp.install.config'>
    <title>Installation et configuration du service tftpd</title>

  <para>Comme indiqué dans la <xref linkend='meta.software' />, seuls les
  paquets de la distribution <citetitle>Debian GNU/Linux</citetitle> sont
  présentés ici. À l'heure actuelle, la distribution comprend trois paquets
  pour ce service : <systemitem class='daemon'>tftpd</systemitem>,
  <systemitem class='daemon'>atftpd</systemitem> et <systemitem
  class='daemon'>tftpd-hpa</systemitem>. Les principales différences entre ces
  trois paquets se situent au niveau des tailles maximales des fichiers
  transférés et de la gestion des droits sur l'arborescence du service
  <acronym>TFTP</acronym>. Le paquet <application>tftpd-hpa</application> offre
  le plus de possibilités dans ces domaines. Son installation et sa
  configuration sont présentées ici.</para>
  
  <para>L'installation de <application>tftpd-hpa</application> et le contrôle
  de la version installée se résument aux instructions suivantes :</para>

<screen width='80'># apt-get install tftpd-hpa
&lt;snipped/>
# dpkg -l *tftpd* | grep ^ii
ii  tftpd-hpa           5.0-7                   HPA's tftp server
</screen>

  <para>Le paquet propose plusieurs menus de configuration qui couvrent les
  opérations de mise en œuvre d'une arborescence de service, le contrôle
  d'accès et les options spécifiques à ce service telles que la création de
  fichiers depuis l'équipement réseau distant.</para>

  <itemizedlist>
    <listitem>
    <para>Définition de l'utilisateur système propre au service
    <acronym>TFTP</acronym>.</para>
    <mediaobject>
      <imageobject>
        <imagedata fileref='images/tftpd-hpa-1.png' format='PNG'
	contentwidth='9cm' width='9.5cm'/>
      </imageobject>
      <caption>
      <para><link
      xmlns="http://docbook.org/ns/docbook" xlink:href="http://www.inetdoc.net/articles/devmgmt/images/tftpd-hpa-1.png">Menu
      de configuration 1 du paquet tftpd-hpa - vue complète</link></para>
      </caption>
    </mediaobject>
    </listitem>
    <listitem>
    <para>Définition de l'arborescence racine du service
    <acronym>TFTP</acronym>.</para>
    <mediaobject>
      <imageobject>
        <imagedata fileref='images/tftpd-hpa-2.png' format='PNG'
	contentwidth='9cm' width='9.5cm'/>
      </imageobject>
      <caption>
      <para><link
      xmlns="http://docbook.org/ns/docbook" xlink:href="http://www.inetdoc.net/articles/devmgmt/images/tftpd-hpa-2.png">Menu
      de configuration 2 du paquet tftpd-hpa - vue complète</link></para>
      </caption>
    </mediaobject>
    </listitem>
    <listitem>
    <para>Définition de l'adresse <acronym>IP</acronym> sur laquelle le service
    <acronym>TFTP</acronym> est en écoute.</para>
    <mediaobject>
      <imageobject>
        <imagedata fileref='images/tftpd-hpa-3.png' format='PNG'
	contentwidth='9cm' width='9.5cm'/>
      </imageobject>
      <caption>
      <para><link
      xmlns="http://docbook.org/ns/docbook" xlink:href="http://www.inetdoc.net/articles/devmgmt/images/tftpd-hpa-3.png">Menu
      de configuration 3 du paquet tftpd-hpa - vue complète</link></para>
      </caption>
    </mediaobject>
    </listitem>
    <listitem>
    <para>Définition des options spécifiques au service
    <acronym>TFTP</acronym>.</para>
    <mediaobject>
      <imageobject>
        <imagedata fileref='images/tftpd-hpa-4.png' format='PNG'
	contentwidth='9cm' width='9.5cm'/>
      </imageobject>
      <caption>
      <para><link
      xmlns="http://docbook.org/ns/docbook" xlink:href="http://www.inetdoc.net/articles/devmgmt/images/tftpd-hpa-4.png">Menu
      de configuration 4 du paquet tftpd-hpa - vue complète</link></para>
      </caption>
    </mediaobject>
    </listitem>
  </itemizedlist>

  <para>Dans le cas où l'on souhaite configurer manuellement ce service, voici
  les étapes équivalentes à celles présentées dans les copies d'écran
  ci-dessus.</para>

  <variablelist>
    <varlistentry xml:id='devmgmt.tftp.install.config.system-user'>
      <term>Compte utilisateur système et arborescence</term>
      <listitem>
      <para>Cette partie comprend plusieurs étapes dont le but est de mettre en
      place une arborescence dont l'accès est réservé à un utilisateur et un
      groupe système dédié. L'accès à cette arborescence est ensuite
      conditionné à l'appartenance au groupe système en question. On commence
      justement par la création du groupe système baptisé <systemitem
      class='groupname'>tftp</systemitem>.</para>

<screen width='80'># addgroup --system tftp
Ajout du groupe « tftp » (identifiant 130)...
Terminé.</screen>

      <para>On passe ensuite à la création du compte utilisateur système
      proprement dit ; baptisé lui aussi <systemitem
      class='username'>tftp</systemitem>. Ce compte fait partie du groupe créé
      ci-dessus. Il dispose d'une arborescence dont la racine est placée au
      niveau du répertoire <filename
      class='directory'>/var/lib/tftp/</filename> et, comme ce compte est de
      type système, il ne doit être utilisable que par le service
      <acronym>TFTP</acronym>.</para>

<screen width='80'># adduser --system --ingroup tftp \
    --home /var/lib/tftp --disabled-password --disabled-login tftp
Ajout de l'utilisateur système « tftp » (identifiant : 122)...
Ajout du nouvel utilisateur « tftp » (identifiant : 122) avec le
groupe « tftp »...
Création du répertoire personnel « /var/lib/tftp »...</screen>

      <para>On complète le masque des permissions sur la racine de
      l'arborescence en donnant les droits d'écriture aux membres du groupe
      <systemitem class='groupname'>tftp</systemitem>.</para>

<screen width='80'># chmod 2775 /var/lib/tftp</screen>

      <para>On peut contrôler le résultat des opérations précédentes en
      visualisant les droits sur l'arborescence.</para>

<screen width='80'># ls -lAh /var/lib/ |grep tftp
drwxrwsr-x  2 tftp      tftp     4,0K sep 27 11:31 tftp</screen>

      <para>Enfin, on contrôle le contenu du fichier
      <filename>/etc/default/tftpd-hpa</filename> pour vérifier qu'il est en
      conformité avec les opérations réalisées, soit manuellement, soit à
      l'aide des menus de configuration du paquet <systemitem
      class='daemon'>tftpd-hpa</systemitem>.</para>
      
<screen width='80'># /etc/default/tftpd-hpa

## The configuration of this file is managed by debconf as long
## as a line beginning with the '#DEBCONF#' token is included.
##
## Do not edit this file manually, use:
## dpkg-reconfigure tftpd-hpa

#DEBCONF#

TFTP_USERNAME="tftp<co xml:id="in.tftpd.user"/>"
TFTP_DIRECTORY="/var/lib/tftp<co xml:id="in.tftpd.root"/>"
TFTP_ADDRESS="0.0.0.0:69"
TFTP_OPTIONS="--secure<co xml:id="in.tftpd.secure"/> --create<co xml:id="in.tftpd.create"/>"</screen>
      </listitem>
    </varlistentry>
  
    <varlistentry xml:id='devmgmt.tftp.install.config.local-acl'>
      <term>Contrôle d'accès local au service</term>
      <listitem>
      <para>À la suite des opérations décrites ci-dessus, seuls les membres
      du groupe <systemitem class='groupname'>tftp</systemitem>, ont le droit
      d'écrire dans l'arborescence du service <acronym>TFTP</acronym>. Tous les
      utilisateurs du système ont le droit de lire le contenu de cette même
      arborescence. Pour autoriser un utilisateur à écrire dans le répertoire
      <filename class='directory'>/var/lib/tftp/</filename>, il suffit de
      l'ajouter au groupe système dédié. Voici un exemple :</para>

<screen width='80'># adduser etu tftp
Ajout de l'utilisateur « etu » au groupe « tftp »...
Ajout de l'utilisateur etu au groupe tftp
Terminé.</screen>

      <para>Les droits sur le système de fichiers du serveur
      <acronym>TFTP</acronym> attribués de cette façon permettent à un
      utilisateur normal (pas nécessairement le super-utilisateur) de déposer
      des images de systèmes d'exploitation (et|ou) des de fichiers de
      configuration. Attention, ce type de modification des droits d'un compte
      utilisateur n'est active qu'après une déconnexion/reconnexion.</para>
      </listitem>
    </varlistentry>

    <varlistentry xml:id='devmgmt.tftp.install.config.options'>
      <term>Contrôle d'accès réseau au service</term>
      <listitem>
      <para>Les options disponibles pour la configuration du démon sont
      extraites des pages de manuels du service :
      <userinput><prompt>#</prompt> man in.tftpd</userinput>.</para>

      <calloutlist>
	<callout arearefs='in.tftpd.user'>
	<para>L'option <option>--user</option> permet de désigner les
	identifiants (<acronym>IDs</acronym>) de l'utilisateur et du groupe
	propriétaires du processus du service. Comme nous avons créé un
	utilisateur système <systemitem class='username'>tftp</systemitem>
	dédié au service, c'est cet utilisateur qui doit être affecté
	ici.</para>
	</callout>
	<callout arearefs='in.tftpd.root in.tftpd.secure'>
	<para>L'option <option>--secure</option> désigne la racine du service dans
	l'arborescence du système de fichiers du serveur. Cette racine est la
	seule accessible depuis les hôtes distants.</para>
	</callout>
        <callout arearefs='in.tftpd.create'>
	<para>L'option <option>--create</option> autorise la création de
	fichier à partir de l'équipement réseau. Sans cette option, le
	comportement par défaut du service n'autorise pas
	l'<wordasword>upload</wordasword>. Cette option est très utile pour la
	sauvegarde directe des fichiers de configuration des
	équipements.</para>
	</callout>
      </calloutlist>

      <para>Ensuite, on redémarre le service pour valider les paramètres de
      configuration mis en place et on visualise le résultat.</para>

<screen width='80'># /etc/init.d/tftpd-hpa restart
Restarting HPA's tftpd: in.tftpd.

# lsof -i | grep tftp
in.tftpd  16621     root    4u  IPv4 1211314      0t0  UDP *:tftp
</screen>

      <para>Le résultat de la commande <command>lsof</command> montre bien que
      le démon <systemitem class='daemon'>in.tftpd</systemitem> est en écoute sur
      le port 69/udp sans restriction sur les adresses
      <acronym>IP</acronym> avec le caractère <keycap>'*'</keycap>.</para>
      </listitem>
    </varlistentry>
  </variablelist>
  </sect2>

<?custom-pagebreak?>
  <sect2 xml:id='devmgmt.tftp.examples'>
    <title>Exemples d'utilisation du service tftpd</title>

  <sect3 xml:id='devmgmt.tftp-hpa'>
    <title>Mise à jour système d'un routeur Cisco 2851</title>

  <para>Dans ce cas de figure, le transfert se fait du poste GNU/Linux vers
  l'équipement. Il n'y a donc aucun problème lié aux accès sur le système de
  fichiers côté GNU/Linux. Il suffit de placer une copie du fichier à
  transférer dans le répertoire <filename
  class='directory'>/var/lib/tftp/</filename>.</para>

  <para>Cet exemple est particulier puisque la taille du fichier image du
  système d'exploitation est importante. Le service <systemitem
  class='daemon'>tftpd</systemitem> est assuré à partir du paquet
  <application>tftp-hpa</application> qui autorise le transfert de blocs de
  données importants.</para>

<screen width='80'>$ cd /var/lib/tftp
$ ll c2800nm-advipservicesk9-mz.124-11.T1.bin
-rw-r--r-- 1 etu tftp 38M 2007-03-20 21:10 c2800nm-advipservicesk9-mz.124-11.T1.bin</screen>

  <para>Côté routeur, il faut s'assurer que la mémoire flash dispose d'un
  espace libre suffisant pour accueillir la nouvelle image du système
  d'exploitation <acronym>IOS</acronym>. Au besoin, il faut effacer le fichier
  image en cours d'exécution.</para>

<screen width='80'>router#sh flash:
-#- --length-- -----date/time------ path
1         1826 Jul 5 2006 23:53:52 +02:00 sdmconfig-28xx.cfg
2      4734464 Jul 5 2006 23:54:12 +02:00 sdm.tar
3       833024 Jul 5 2006 23:54:26 +02:00 es.tar
4      1052160 Jul 5 2006 23:54:40 +02:00 common.tar
5         1038 Jul 5 2006 23:54:54 +02:00 home.shtml
6       102400 Jul 5 2006 23:55:06 +02:00 home.tar
7       491213 Jul 5 2006 23:55:18 +02:00 128MB.sdf
8      1684577 Jul 5 2006 23:55:38 +02:00 securedesktop-ios-3.1.1.27-k9.pkg
9       398305 Jul 5 2006 23:55:56 +02:00 sslclient-win-1.1.0.154.pkg

54702080 bytes available (9314304 bytes used)</screen>

  <para>On lance le transfert en indiquant le fichier image sur le serveur
  <acronym>TFTP</acronym> comme source et la mémoire flash comme
  destination.</para>

<screen width='80'>router#copy tftp://192.168.2.1/c2800nm-advipservicesk9-mz.124-11.T1.bin flash:
Destination filename [c2800nm-advipservicesk9-mz.124-11.T1.bin]?
Accessing tftp://192.168.2.1/c2800nm-advipservicesk9-mz.124-11.T1.bin...
Loading c2800nm-advipservicesk9-mz.124-11.T1.bin from 192.168.2.1 \
		(via GigabitEthernet0/1): !!!!!!!!!!!!!!!!!!
&lt;snip/>

[OK - 39798360 bytes]

39798360 bytes copied in 580.728 secs (68532 bytes/sec)

router#sh flash:
-#- --length-- -----date/time------ path
1         1826 Jul 5 2006 23:53:52 +02:00 sdmconfig-28xx.cfg
2      4734464 Jul 5 2006 23:54:12 +02:00 sdm.tar
3       833024 Jul 5 2006 23:54:26 +02:00 es.tar
4      1052160 Jul 5 2006 23:54:40 +02:00 common.tar
5         1038 Jul 5 2006 23:54:54 +02:00 home.shtml
6       102400 Jul 5 2006 23:55:06 +02:00 home.tar
7       491213 Jul 5 2006 23:55:18 +02:00 128MB.sdf
8      1684577 Jul 5 2006 23:55:38 +02:00 securedesktop-ios-3.1.1.27-k9.pkg
9       398305 Jul 5 2006 23:55:56 +02:00 sslclient-win-1.1.0.154.pkg
10    39798360 Mar 24 2007 17:04:52 +01:00 c2800nm-advipservicesk9-mz.124-11.T1.bin

14901248 bytes available (49115136 bytes used)</screen>
  </sect3>

  <sect3 xml:id='devmgmt.tftp.examples.2950'>
    <title>Mise à jour système d'un commutateur Cisco 2950</title>

  <para>Comme dans l'exemple précédent, le transfert se fait du poste GNU/Linux
  vers l'équipement et le fichier à transférer est dans le répertoire <filename
  class='directory'>/var/lib/tftp/</filename>.</para>

  <para>Côté équipement, il faut un minimum de configuration réseau
  <acronym>IP</acronym> pour communiquer avec le poste GNU/Linux.</para>

<screen width='80'>sw1#sh run
Building configuration...
&lt;snip/>
!
interface Vlan1
 no ip address
 no ip route-cache
 shutdown
!
interface Vlan2
 ip address 192.168.2.2 255.255.255.0
 no ip route-cache
!
</screen>

  <para>On peut ensuite lancer le transfert à partir de l'interface de commande
  de l'équipement. Voici un exemple de mise à jour via <systemitem
  class='daemon'>tftpd</systemitem> :</para>

<screen width='80'>sw1#archive tar /x tftp://192.168.2.1/c2950-i6q4l2-tar.121-22.EA2.tar flash:
</screen>

  <para>L'accès à l'interface de commande de l'équipement réseau peut être
  obtenu à l'aide de <application>minicom</application> ou de
  <application>telnet</application>.</para>
  </sect3>

  <sect3 xml:id='devmgmt.tftp.examples.backupconfg'>
    <title>Sauvegarde de la configuration d'un équipement</title>

  <para>Ici, le transfert se fait depuis l'équipement réseau vers le poste
  GNU/Linux sur lequel le service <systemitem class='daemon'>tftpd</systemitem>
  est exécuté.</para>

  <para>Avec la configuration mise en place dans la partie <link
  linkend='devmgmt.tftp.install.config.options'><citetitle>Contrôle d'accès
  réseau au service</citetitle></link>, on a autorisé la création de fichiers
  dans l'arborescence sur service <acronym>TFTP</acronym> avec l'option
  <option>-c</option> du démon <systemitem class='daemon'>in.tftpd</systemitem>
  fourni avec le paquet <application>tftpd-hpa</application>.</para>

  <para>En reprenant l'exemple du commutateur 2950, voici l'opération se résume
  au transfert de la configuration active.</para>

<screen width='80'>sw1#copy run tftp://192.168.2.1
Address or name of remote host [192.168.2.1]?
Destination filename [sw1-confg]?
!!
2748 bytes copied in 1.116 secs (2462 bytes/sec)
</screen>

  <para>Dans les faits, il est beaucoup plus fréquent que l'on édite la
  configuration sur le poste GNU/Linux avant de la transférer vers
  l'équipement. Cette méthode permet d'assurer un suivi des évolutions de
  configuration via un système de contrôle de version tel que
  <acronym>CVS</acronym> ou <acronym>SVN</acronym>. On dispose ainsi d'un dépôt
  centralisé des configurations.</para>
  </sect3>

  <sect3 xml:id='devmgmt.tftp.examples.new-confg'>
    <title>Mise à jour de la configuration d'un équipement</title>

  <para>On retrouve dans ce cas un transfert depuis le poste GNU/Linux vers
  l'équipement réseau. C'est le cas le plus simple du point de vue de la
  gestion des droits.</para>

  <para>Une fois la nouvelle configuration éditée, on place le fichier
  correspondant dans le répertoire <filename
  class='directory'>/var/lib/tftp/</filename> et on lance le transfert à partir
  de l'interface en ligne de commande de l'équipement.</para>

<screen width='80'>sw1#copy tftp://192.168.2.1/new-confg run
Destination filename [running-config]?
Accessing tftp://192.168.2.1/new-confg...
Loading new-confg from 192.168.2.1 (via Vlan2): !
[OK - 2756 bytes]

2756 bytes copied in 19.984 secs (138 bytes/sec)
sw1#
2d00h: %SYS-5-CONFIG_I: Configured from tftp://192.168.2.1/new-confg by console
sw1#
&lt;snip/>

sw1#copy run start
Destination filename [startup-config]?
Building configuration...
[OK]
</screen>
  
  <para>Il est préférable de copier la configuration en <acronym>RAM</acronym>
  dans un premier temps. Si la nouvelle configuration provoque un
  dysfonctionnement réseau, on a toujours la possibilité de réinitialiser
  complètement l'équipement. Il reprendra la configuration stockée en
  <acronym>NVRAM</acronym> (la version correcte précédente). Autrement, après
  avoir effectué les tests d'usage, on sauvegarde la nouvelle configuration en
  <acronym>RAM</acronym> dans la <acronym>NVRAM</acronym>.</para>
  </sect3>
  </sect2>

  <sect2 xml:id='devmgmt.tftp.secu'>
    <title>Un soupçon de sécurité</title>

  <para>Comme le service <systemitem class='daemon'>tftpd</systemitem> n'est
  pas un modèle en matière de sécurité, il est souhaitable de bien
  <emphasis>encadrer</emphasis> son utilisation. Généralement, on complète le
  contrôle d'accès (voir <xref linkend='devmgmt.tftp.install.config.options'/>)
  par une règle de filtrage réseau pour chaque équipement.</para>

  <para>Côté équipement on fixe l'adresse IP ou l'interface utilisée pour les
  transactions <acronym>TFTP</acronym> avec des instructions du
  type :</para>

  <itemizedlist>
    <listitem>
    <para>Pour un commutateur :</para>
<screen width='80'>interface Vlan2
  ip address 192.168.2.2 255.255.255.0
  no ip proxy-arp
  no ip route-cache
!
ip tftp source-interface Vlan2
</screen>
    </listitem>
    <listitem>
    <para>Pour un routeur :</para>
<screen width='80'>interface Loopback0
  ip address 192.168.2.2 255.255.255.255
  no ip redirects
  no ip unreachables
  no ip directed-broadcast
  no ip proxy-arp
!
ip tftp source-interface Loopback0
</screen>
    </listitem>
  </itemizedlist>

  <para>Côté service <systemitem class='daemon'>tftpd</systemitem>, on
  n'autorise les accès <acronym>TFTP</acronym> (port 69/udp) qu'à partir des
  adresses IP fixées sur les équipements. Voici un extrait du fichier
  <filename>/var/lib/iptables/active</filename> utilisé par le script
  d'initialisation du paquet <application>iptables</application>.</para>
<screen width='80'>*filter
:INPUT DROP [0:0]
&lt;snip/>
-A INPUT -s 192.168.2.2 -p udp --dport 69 -m conntrack --ctstate NEW -j ACCEPT
&lt;snip/>
</screen>
  <para>Pour un exemple complet, voir <xref linkend='devmgmt.iptables'/>.</para>
  </sect2>
</sect1>

<?custom-pagebreak?>
<sect1 xml:id='devmgmt.log'>
  <title>Collecte des journaux</title>

  <para>Les journaux, ou <wordasword>logs</wordasword> dans le jargon, servent
  à enregistrer tous les évènements qui surviennent sur un système.
  Historiquement, le service <systemitem class='service'>syslog</systemitem> a
  été développé pour la branche Unix des systèmes <acronym>BSD</acronym>.
  Depuis, ce service a été très largement adopté. On le retrouve sur tous les
  systèmes Unix, GNU/Linux et surtout sur les équipements réseau de nombreux
  constructeurs. Le protocole <systemitem class='service'>syslog</systemitem>
  est décrit dans le document &url.rfc3164;.</para>

  <para>Dans le contexte de ce document, les messages <systemitem
  class='service'>syslog</systemitem> émis par les équipements réseau doivent
  être collectés par une machine avec un système GNU/Linux. Ce type de machine
  constitue un dépôt de référence avec horodatage des évènements survenus sur
  le système d'information. Du point de vue sécurité c'est un maillon essentiel
  du contrôle d'intégrité. Dans le cas où des équipements ont été compromis, il
  subsistera toujours des messages permettant de remonter à l'instant d'origine
  de l'attaque.</para>

  <para>Une fois les messages collectés, il faut les traiter. La problématique
  du traitement des journaux est un sujet d'étude à part entière qui sort du
  cadre de ce document. La <xref linkend='devmgmt.log.process'/> donne juste
  quelques pistes.</para>

  <sect2 xml:id='devmgmt.log.install.config'>
    <title>Installation et configuration du service syslog</title>

  <para>Comme indiqué dans la <xref linkend='meta.software' />, seuls les
  paquets de la distribution <citetitle>Debian GNU/Linux</citetitle> sont
  présentés ici. L'installation de <application>sysklogd</application> se
  résume donc à l'instruction suivante :</para>

<screen width='80'># apt-get install sysklogd
</screen>

  <para>Par défaut, la configuration du service ne prévoit pas de recevoir des
  messages via le réseau. Il faut donc éditer le fichier
  <filename>/etc/init.d/sysklogd</filename> pour que le démon <systemitem
  class='daemon'>syslogd</systemitem> accepte les messages sur le port 514/udp.
  Voici une copie des 15 premières lignes du fichier
  <filename>/etc/init.d/sysklogd</filename> :</para>

<screen width='80'>#! /bin/sh
# /etc/init.d/sysklogd: start the system log daemon.

PATH=/bin:/usr/bin:/sbin:/usr/sbin

pidfile=/var/run/syslogd.pid
binpath=/sbin/syslogd

test -x $binpath || exit 0

# Options for start/restart the daemons
#   For remote UDP logging use SYSLOGD="-r"
#
SYSLOGD="-r"
</screen>

  <para>On se retrouve ici dans une situation voisine de celle du service
  <systemitem class='daemon'>tftpd</systemitem> à une différence importante
  près. Il n'est pas possible d'utiliser le <wordasword>tcpwrapper</wordasword>
  du super-démon <systemitem class='daemon'>inetd</systemitem> pour mettre en
  place un contrôle d'accès. Il ne reste que le filtrage pour limiter les accès
  réseau au démon <systemitem class='daemon'>syslogd</systemitem>. Voir <xref
  linkend='devmgmt.log.secu'/>.</para>

  <para>Pour finir de configurer le service, il faut paramétrer la destination
  des messages reçus via le réseau. Cette opération se fait en ajoutant une ou
  plusieurs lignes au fichier <filename>/etc/syslog.conf</filename>. En
  reprenant l'exemple du commutateur 2950, voici un exemple :</para>

<screen width='80'>local6.*                        /var/log/sw1.log
</screen>

  <para>Ici, tous les messages du niveau de gravité 6
  (<wordasword>Informational</wordasword>) seront placés dans le fichier
  <filename>/var/log/sw1.log</filename>. Le codage des niveaux de gravité
  dépend de l'équipement qui émet les messages de journalisation.</para>
  </sect2>

  <sect2 xml:id='devmgmt.log.example'>
    <title>Exemple d'utilisation du service syslog</title>

  <para>Une fois encore, c'est la syntaxe de l'IOS <trademark>Cisco</trademark>
  qui sert d'exemple de configuration. On ne traite qu'un seul exemple sachant
  que les commandes de configuration sont identiques entre routeurs et
  commutateurs. Voici un résumé des commandes permettant d'émettre des messages
  <systemitem class='service'>syslog</systemitem> sur le réseau.</para>

<screen width='80'>logging on
logging buffered 16384
service sequence-numbers
service timestamp log datetime msec localtime show-timezone
!
logging 192.168.2.1
!
logging facility local6
logging trap Informational
!
logging source-interface Vlan2
</screen>

  <para>Une fois cette configuration implantée, le fichier de journalisation
  reçoit les messages émis par l'équipement. Voici un extrait consécutif à un
  chargement de fichier de configuration via le service <systemitem
  class='service'>TFTP</systemitem> :</para>

<screen width='80'>Jan 25 13:18:45 192.168.2.2 146: 000143: 2w0d: %LINEPROTO-5-UPDOWN: \
   Line protocol on Interface FastEthernet0/24, changed state to up
Jan 25 14:06:31 192.168.2.2 156: 000153: Jan 25 14:06:30.534 CET: %SYS-5-CONFIG_I: \
   Configured from tftp://192.168.2.1/sw1-confg by console
</screen>
  </sect2>

  <sect2 xml:id='devmgmt.log.syslog-ng'>
    <title>Utilisation de syslog-ng</title>

  <para>Le service <systemitem class='service'>syslog</systemitem>, tel qu'il a
  été introduit, présente au moins deux défauts : la sécurité et la non
  discrimination des sources.</para>

  <para>Le volet sécurité sort du cadre de ce document. On se contente de donc
  de contrôler simplement les sources de messages : voir <xref
  linkend='devmgmt.log.secu'/>. Ensuite, on donne quelques pistes sur le
  contrôle d'intégrité des messages au point <xref linkend='biblio.syslog'/> de
  la <xref linkend='devmgmt.go'/>.</para>

  <para>La non discrimination des sources d'émission de messages de
  journalisation est beaucoup plus gênante du point de vue exploitation. En
  effet, la configuration présentée ci-dessus (voir <xref
  linkend='devmgmt.log.install.config'/>) a ouvert le port 514/udp en écoute et
  tous les messages reçus par ce canal sont rangés dans le fichier
  <filename>/var/log/sw1.log</filename>. Ce cas de figure convient très bien
  pour un équipement unique. Dans le cas où le nombre d'équipement augmente, ce
  point de stockage unique devient très vite difficile à gérer.</para>

  <para>L'utilisation de <application>syslog-ng</application> permet de traiter
  cette difficulté simplement. Le démon <systemitem
  class='daemon'>syslog-ng</systemitem> se substitue complètement au démon
  <systemitem class='daemon'>syslog</systemitem> précédent. L'installation du
  paquet <citetitle>Debian GNU/Linux</citetitle> n'est pas différente des
  précédentes et le remplacement de <application>syslog</application> est
  automatique :</para>

<screen width='80'># apt-get install syslog-ng
</screen>

  <para>La grande différence se situe au niveau du fichier de configuration du
  service : <filename>/etc/syslog-ng/syslog-ng.conf</filename>. Pour
  chaque catégorie de journalisation, on doit composer avec une définition de
  <emphasis>source</emphasis>, de <emphasis>filtre</emphasis> et de
  <emphasis>destination</emphasis>. Voici un exemple reprenant le cas du
  commutateur :</para>
  
  <variablelist>
    <varlistentry xml:id='syslog-ng.source'>
    <term>Définition d'une source</term>
    <listitem>
<screen width='80'>source net {
# journalisation via eth2 -> commutateur sw1
    udp(ip(192.168.2.1));
    };
</screen>
    </listitem>
    </varlistentry>
    <varlistentry xml:id='syslog-ng.filter'>
    <term>Définition d'un filtre</term>
    <listitem>
<screen width='80'>filter f_sw1 { 
    host(192.168.2.2) and level(info,notice,warn,crit,err);
    };
</screen>
    </listitem>
    </varlistentry>
    <varlistentry xml:id='syslog-ng.destination'>
    <term>Définition d'une destination</term>
    <listitem>
<screen width='80'>destination d_net_devices {
    file("/var/log/$HOST.log" owner("root") group("adm") perm(0640));
    };
</screen>
    </listitem>
    </varlistentry>
    <varlistentry xml:id='syslog-ng.usage'>
    <term>Utilisation des trois définitions</term>
    <listitem>
<screen width='80'>log { 
    source(net);
    filter(f_sw1);
    destination(d_net_devices);
    };
</screen>
    </listitem>
    </varlistentry>
  </variablelist>

  <para>L'application de cette configuration entraîne la création d'un fichier
  <filename>/var/log/192.168.2.2.log</filename> qui reçoit tous les messages du
  commutateur <systemitem class='systemname'>sw1</systemitem> qui a l'adresse
  <acronym>IP</acronym> <systemitem
  class='ipaddress'>192.168.2.2</systemitem>. Le fichier de destination est
  créé avec un nom correspondant à l'adresse <acronym>IP</acronym> de
  l'équipement parce qu'aucun service <systemitem
  class='service'>DNS</systemitem> n'a été configuré. En exploitation réelle,
  on installe généralement un service <systemitem
  class='service'>DNS</systemitem> dédié au périmètre de gestion de
  l'infrastructure. Dans ce cas, les fichiers de journalisation portent le nom
  d'hôte de l'équipement.</para>

  <para>L'ajout de tout nouvel équipement avec un autre nom et une autre
  adresse <acronym>IP</acronym> entraînera le création d'un nouveau fichier de
  journalisation. On pourra alors traiter les alertes séparément pour chaque
  équipement.</para>
  </sect2>

  <sect2 xml:id='devmgmt.log.process'>
    <title>Traitement des journaux</title>

  <para>La problématique du traitement des journaux bute sur «la motivation
  très limitée» des responsables d'exploitation. On entend trop souvent que la
  lecture des journaux est fastidieuse et inutile. Pourtant, on ne compte plus
  les exemples d'intrusions qui auraient pu être évitées facilement si les
  <wordasword>logs</wordasword> avaient été consultés régulièrement.</para>
  
  <para>L'offre des outils de traitement de <wordasword>logs</wordasword> est
  très diverse. Voici deux propositions d'outils choisis avec un parti pris
  évident : imposer la lecture des journaux via le courrier
  électronique.</para>

  <variablelist>
    <varlistentry xml:id='logwatch'>
      <term>&url.logwatch;</term>
      <listitem>
      <para><application>logwatch</application> émet un rapport toutes les 24h
      synthétisant les évènements par service. Dans le contexte de ce document,
      on active un service correspondant à tous les journaux émis par les
      équipements réseau. La grande force de
      <application>logwatch</application>, c'est la sommation des entrées
      répétitives qui optimise la taille du rapport.</para>
      </listitem>
    </varlistentry>
    <varlistentry xml:id='logcheck'>
      <term>&url.logcheck;</term>
      <listitem>
      <para><application>logcheck</application> est un outil conçu à partir des
      paquets <citetitle>Debian GNU/Linux</citetitle>. Il émet un rapport
      toutes les heures en fonction de trois niveaux d'utilisation : poste
      de travail, serveur et «paranoïaque». Plus on avance vers la «paranoïa»,
      plus le nombre de messages retenus est important. Pour chaque niveau
      d'utilisation, la synthèse des évènements comprend trois niveaux de
      priorité de traitement : alerte, sécurité et système. Dans le
      contexte de ce document, on ajoute les fichiers de journalisation des
      équipements réseau à la liste des fichiers traités par
      <application>logcheck</application>. Après la lecture de quelques
      rapports, on est capable d'éditer ses propres règles de sélection en
      s'inspirant des règles existantes pour les autres services du système. La
      grande majorité des opérations de sélection effectuées par
      <application>logcheck</application> sont prédéfinies par des
      utilisateurs très expérimentés : les responsables des paquets.
      C'est un avantage considérable pour les débutants. On gagne ainsi un
      temps très important dans l'apprentissage du travail d'analyse.</para>
      <para>Voici un extrait de rapport relatif à l'utilisation d'une règle de
      filtrage sur un routeur :</para>
<screen width='80'>Security Events
=-=-=-=-=-=-=-=
Jan 24 23:12:06 Router 20656: Jan 25 00:12:05.856 GMT: %SEC-6-IPACCESSLOGP: \
   list inbound denied udp aaa.aaa.aaa.aaa(53) -> ddd.ddd.ddd.ddd(33434), 3 packets
Jan 24 23:15:06 Router 20660: Jan 25 00:15:05.884 GMT: %SEC-6-IPACCESSLOGP: \
   list inbound denied udp bbb.bbb.bbb.bbb(53) -> ddd.ddd.ddd.ddd(33434), 2 packets
Jan 24 23:20:06 Router 20666: Jan 25 00:20:05.932 GMT: %SEC-6-IPACCESSLOGP: \
   list inbound denied udp bbb.bbb.bbb.bbb(53) -> ddd.ddd.ddd.ddd(33434), 1 packet
</screen>
      </listitem>
    </varlistentry>
  </variablelist>
  </sect2>

  <sect2 xml:id='devmgmt.log.secu'>
    <title>Un soupçon de sécurité</title>

  <para>Comme <systemitem class='daemon'>tftpd</systemitem>, le service
  <systemitem class='daemon'>syslogd</systemitem> n'est pas un modèle en
  matière de sécurité. Il est donc souhaitable de bien
  <emphasis>encadrer</emphasis> son utilisation. On configure le contrôle
  d'accès avec une règle de filtrage réseau par équipement.</para>
  
  <para>Voici un extrait du fichier
  <filename>/var/lib/iptables/active</filename> utilisé par le script
  d'initialisation du paquet <application>iptables</application>.</para>

<screen width='80'>*filter
:INPUT DROP [0:0]
&lt;snip/>
-A INPUT -s 192.168.2.2 -p udp --dport 514 -m conntrack --ctstate NEW -j ACCEPT
&lt;snip/>
</screen>
  <para>Pour un exemple complet, voir <xref linkend='devmgmt.iptables'/>.</para>
  </sect2>
</sect1>

<?custom-pagebreak?>
<sect1 xml:id='devmgmt.ntp'>
  <title>Synchronisation des horloges avec le protocole NTP</title>

  <para>La mise en œuvre du protocole <acronym>NTP</acronym> suppose que l'on
  ait besoin d'un horodatage précis des évènements qui surviennent sur les
  équipements réseau. Classiquement, le serveur du périmètre de gestion exécute
  un démon <systemitem class='daemon'>ntpd</systemitem> qui sert de référence à
  tous les équipements. Le protocole <systemitem
  class='service'>ntp</systemitem> est décrit dans le document
  &url.rfc1119;.</para>

  <sect2 xml:id='devmgmt.ntp.install.config'>
    <title>Installation et configuration du service ntp</title>

  <para>Comme indiqué dans la <xref linkend='meta.software' />, seuls les
  paquets de la distribution <citetitle>Debian GNU/Linux</citetitle> sont
  présentés ici. L'installation du paquet <application>ntp</application> se
  résume donc à l'instruction suivante :</para>

<screen width='80'># apt-get install ntp
</screen>

  <para>L'avantage de ce paquet, c'est qu'il ne nécessite aucune
  configuration. On peut donc passer côté équipement. Voici un exemple de
  configuration type commun aux routeurs et aux commutateurs :</para>

<screen width='80'>!
ntp server 192.168.2.1 source Vlan2
clock timezone CET +1
clock summer-time EDT recurring
!
</screen>
  </sect2>

  <sect2 xml:id='devmgmt.ntp.check'>
    <title>Validation de la configuration ntp</title>

  <para>La syntaxe <acronym>IOS</acronym> de contrôle de l'état du service sur
  l'équipement est la suivante :</para>

<screen width='80'>sw1#sh ntp status
Clock is synchronized, stratum 4, reference is 192.168.2.1
nominal freq is 250.0000 Hz, actual freq is 249.9962 Hz, precision is 2**18
reference time is C5A12468.AFE91280 (21:02:48.687 CET Tue Jan 25 2005)
clock offset is 0.0817 msec, root delay is 78.25 msec
root dispersion is 122.21 msec, peer dispersion is 0.03 msec

sw1#sh ntp associations

      address         ref clock     st  when  poll reach  delay  offset    disp
*~192.168.2.1      213.161.8.44      3    33    64  377     2.0    0.08     0.0
* master (synced), # master (unsynced), + selected, - candidate, ~ configured
</screen>

  <para>L'utilitaire <command>ntpq</command> fournit les mêmes information pour
  le système GNU/Linux :</para>

<screen width='80'># ntpq
ntpq> associations

ind assID status  conf reach auth condition  last_event cnt
===========================================================
  1 26588  9614   yes   yes  none  sys.peer   reachable  1
  2 26589  9014   yes   yes  none    reject   reachable  1
ntpq> peer
     remote           refid      st t when poll reach   delay   offset  jitter
==============================================================================
*cpe1-8-44.cable 164.8.100.2      2 u  865 1024  377   79.463  -11.913  33.217
 LOCAL(0)        LOCAL(0)        13 l   39   64  377    0.000    0.000   0.004
</screen>
  </sect2>

  <sect2 xml:id='devmgmt.ntp.secu'>
    <title>Encore un soupçon de sécurité</title>

  <para>Comme <systemitem class='daemon'>tftpd</systemitem> et <systemitem
  class='daemon'>syslogd</systemitem>, le service <systemitem
  class='daemon'>ntpd</systemitem> n'est pas un modèle en matière de sécurité.
  Il est donc souhaitable de bien <emphasis>encadrer</emphasis> son
  utilisation. On configure le contrôle d'accès avec une règle de filtrage
  réseau par équipement.</para>
  
  <para>Voici encore un extrait du fichier
  <filename>/var/lib/iptables/active</filename> utilisé par le script
  d'initialisation du paquet <application>iptables</application>.</para>

<screen width='80'>*filter
:INPUT DROP [0:0]
&lt;snip/>
-A INPUT -s 192.168.2.2 -p udp --dport 123 -m conntrack --ctstate NEW -j ACCEPT
&lt;snip/>
</screen>
  <para>Pour un exemple complet, voir <xref linkend='devmgmt.iptables'/>.</para>
  </sect2>
</sect1>

<?custom-pagebreak?>
<sect1 xml:id='devmgmt.mrtg'>
  <title>Introduction à la métrologie avec mrtg</title>

  <para>Il est impossible de prétendre faire de la gestion d'équipement réseau
  sans parler de métrologie. Qui dit métrologie, dit système de gestion intégré
  ou <wordasword>Network Management System</wordasword>
  (<acronym>NMS</acronym>). Ces systèmes intégrés sont trop souvent des «usines
  à gaz» au coût d'installation et d'administration prohibitif (on n'ose même
  plus parler du coût de licence !). L'optique de ce document étant de
  présenter des services simples à mettre en œuvre,
  <application>mrtg</application> est l'outil GNU/Linux le plus répandu qui
  convient bien à cette présentation.</para>

  <para><application>mrtg</application> s'appuie sur le protocole
  <acronym>SNMP</acronym> (<wordasword>Simple Network Management
  Protocol</wordasword>) dont la première version est décrite dans le document
  &url.rfc1157;. Ce protocole permet à <application>mrtg</application>
  d'interroger la base d'informations (<acronym>MIB</acronym> ou
  <wordasword>Management Information Base</wordasword>) d'un équipement capable
  de traiter les messages <acronym>SNMP</acronym>. À part pour les équipements
  de très bas de gamme, tous les constructeurs d'équipements réseau fournissent
  des bases d'informations <acronym>MIB</acronym> pour leurs lignes de
  produits.</para>

  <para>Le principe de fonctionnement est relativement simple : le
  programme <application>mrtg</application> est exécuté périodiquement pour
  interroger les bases d'informations <acronym>MIB</acronym> des équipements en
  fonction d'un fichier de configuration. Le résultat de ces interrogation sert
  à construire des images qui sont rangées dans un répertoire de page
  Web.</para>

  <sect2 xml:id='devmgmt.mrtg.install.config'>
    <title>Installation et configuration du service mrtg</title>

  <para>Au niveau de chaque équipement, le service <systemitem
  class='service'>snmp</systemitem> doit être activé et la chaîne de caractères
  de définition de communauté paramétrée. Voici un exemple de configuration
  <acronym>IOS</acronym> ; toujours pour un commutateur 2950 :</para>

<screen width='80'>snmp-server trap-source Vlan2<co xml:id='mrtg.ip.source'/>
snmp-server enable traps syslog
no snmp-server community public ro
!
no access-list 51
access-list 51 permit 192.168.2.1<co xml:id='mrtg.ip.ask'/>
snmp-server community m3tr0l0g13 ro 51<co xml:id='mrtg.community'/>
</screen>

  <calloutlist>
    <callout arearefs='mrtg.ip.source'>
      <para>Les messages <acronym>SNMP</acronym> émis par l'équipement ont une
      adresse <acronym>IP</acronym> source unique : celle de l'interface
      Vlan2.</para>
    </callout>
    <callout arearefs='mrtg.ip.ask'>
      <para>La liste de contrôle d'accès numéro 51 n'autorise que l'adresse
      <acronym>IP</acronym> <systemitem
      class='ipaddress'>192.168.2.1</systemitem> à interroger la base
      d'informations <acronym>MIB</acronym>.</para>
    </callout>
    <callout arearefs='mrtg.community'>
      <para>La définition de communauté <literal>m3tr0l0g13</literal> n'a qu'un
      accès en lecture seule.</para>
    </callout>
  </calloutlist>

  <para>Côté système GNU/Linux, on a déjà indiqué dans la <xref
  linkend='meta.software' />, que seuls les paquets de la distribution
  <citetitle>Debian GNU/Linux</citetitle> sont présentés ici. L'installation de
  <application>mrtg</application> et du serveur web de visualisation
  <application>apache</application> se résume donc à l'instruction
  suivante :</para>

<screen width='80'># apt-get install mrtg apache
</screen>

  <para>L'installation des paquets <citetitle>Debian GNU/Linux</citetitle>
  couvre toutes les opérations de configuration de base :</para>

  <itemizedlist>
    <listitem>
    <para>Création du répertoire <filename
    class='directory'>/var/www/mrtg/</filename> et copie des icônes de base des
    pages <acronym>HTML</acronym> produites par
    <application>mrtg</application>.</para>
    </listitem>
    <listitem>
    <para>Planification de l'exécution périodique de la commande
    <command>mrtg</command> via le service <systemitem
    class='service'>cron</systemitem> avec le fichier
    <filename>/etc/cron.d/mrtg</filename>.</para>
    </listitem>
    <listitem>
    <para>L'URL de consultation des résultats est :
    <literal>http://192.168.2.1/mrtg/</literal>.</para>
    </listitem>
  </itemizedlist>
  </sect2>

  <sect2 xml:id='devmgmt.mrtg.example'>
    <title>Exemple d'utilisation sur un commutateur 2950</title>

  <para>Pour chaque équipement supervisé, il faut créer ou compléter un fichier
  de configuration puis construire l'index de page web correspondant.</para>

  <para>La configuration est obtenue à l'aide de la commande
  <command>cfgmaker</command>. Voici l'exemple de la création d'un nouveau
  fichier de configuration pour l'équipement paramétré ci-avant (Voir <xref
  linkend='devmgmt.mrtg.install.config'/>) :</para>

<screen width='80'># cfgmaker m3tr0l0g13@192.168.2.2 >mrtg.cfg
# mv /etc/mrtg.cfg /etc/mrtg.cfg.dpkg-dist
# cp mrtg.cfg /etc
</screen>
  
  <para>Une fois le fichier de configuration créé, il est possible de l'éditer
  pour l'adapter à ses propres besoins. La modification la plus classique
  consiste à renommer et|ou renuméroter les interfaces.</para>

  <para>La construction de l'index se fait à l'aide de la commande
  <command>indexmaker</command>. Voici la suite du traitement de l'exemple du
  commutateur 2950 :</para>

<screen width='80'># indexmaker --output /var/www/mrtg/index.html /etc/mrtg.cfg
</screen>
  
  <para>Il est aussi possible d'éditer ce fichier d'index pour l'adapter à ses
  besoins. Il est cependant préférable de faire appel aux options de la
  commande <command>indexmaker</command>. Ces options sont fournies dans les
  pages de manuels : <userinput>man indexmaker</userinput>.</para>

  <para>Le résultat obtenu est de la forme suivante pour la page d'index
  principale :</para>

<informalfigure>
  <mediaobject>
    <imageobject>
    <imagedata fileref='images/index.mrtg.png' format='PNG' contentwidth='9cm'
    width='9.5cm'/>
    </imageobject>
    <caption>
    <para><link
    xmlns="http://docbook.org/ns/docbook" xlink:href="http://www.inetdoc.net/articles/devmgmt/images/index.mrtg.png">Index
    mrtg - vue complète</link></para>
    </caption>
  </mediaobject>
</informalfigure>

  <para>Pour une interface, le résultat se présente sous la forme
  suivante :</para>

<informalfigure>
  <mediaobject>
    <imageobject>
    <imagedata fileref='images/interface.mrtg.png' format='PNG'
    contentwidth='9cm' width='9.5cm'/>
    </imageobject>
    <caption>
    <para><link
    xmlns="http://docbook.org/ns/docbook" xlink:href="http://www.inetdoc.net/articles/devmgmt/images/interface.mrtg.png">Interface
    mrtg - vue complète</link></para>
    </caption>
  </mediaobject>
</informalfigure>
  </sect2>

  <sect2 xml:id='devmgmt.mrtg.secu'>
    <title>Encore un soupçon de sécurité</title>

  <para>Comme tous les autres services présentés ci-avant, le protocole
  <acronym>SNMP</acronym> ne fait pas exception. Ce n'est pas un modèle en
  matière de sécurité. Il existe plusieurs versions de ce protocole :
  <acronym>SNMPv1</acronym> de 1990, <acronym>SNMPv2c</acronym> de 1996 a 2002
  et <acronym>SNMPv3</acronym> à partir de 2000. Plus ces versions ont évolué,
  plus les fonctions de sécurité se sont étoffées. Les équipements réseau
  actuels intègrent le plus souvent la version <acronym>SNMPv2c</acronym> qui
  est très limitée.</para>

  <para>On se retrouve donc dans une situation identique à celle des autres
  services présentés. Il est souhaitable de bien <emphasis>encadrer</emphasis>
  l'utilisation du protocole. On configure le contrôle d'accès avec une règle
  de filtrage réseau par équipement.</para>
  
  <para>Voici un extrait du fichier
  <filename>/var/lib/iptables/active</filename> utilisé par le script
  d'initialisation du paquet <application>iptables</application>.</para>

<screen width='80'>*filter
:INPUT DROP [0:0]
&lt;snip/>
-A INPUT -s 192.168.2.2 -p udp --dport 162 -m conntrack --ctstate NEW -j ACCEPT
&lt;snip/>
</screen>
  <para>Pour un exemple complet, voir <xref linkend='devmgmt.iptables'/>.</para>
  </sect2>
</sect1>

<?custom-pagebreak?>
<sect1 xml:id='devmgmt.go'>
  <title>Pour aller plus loin !</title>

  <para>Les outils GNU/Linux permettent de structurer la centralisation de la
  gestion des équipements réseau. La force du logiciel libre c'est la capacité
  à adapter son infrastructure au plus près de ses besoins. Cette «capacité
  d'adaptation» a un coût non négligeable.</para>

  <para>En phase de conception ou d'évolution d'un système d'information, il
  faut étudier attentivement le rapport contraintes d'exploitation sur coût
  d'acquisition.</para>

  <para>Il est fréquent de constater qu'au delà du coût d'acquisition d'une
  solution propriétaire, les fonctionnalités offertes sont très|trop nombreuses
  et ne répondent pas nécessairement aux besoins. À l'inverse, la mise en
  œuvre des fonctionnalités décrites dans ce document permet d'atteindre
  rapidement et simplement des résultats faciles à exploiter.</para>

  <para>Pour étudier plus en détails les modalités d'exploitation des
  équipements réseau voici quelques références documentaires :</para>

  <variablelist>
    <title>Guides de la NSA</title>
    <para>De plus en plus souvent, les conseils sur les «bonnes pratiques» de
    gestion des équipements sont inclues dans les document relatifs à la
    sécurité. Les guides de la <acronym>NSA</acronym> sont les exemples
    emblématiques de cette tendance. Même si ces guides ne traitent que des
    équipements <trademark>Cisco</trademark>, il ne devrait pas être trop
    difficile de les adapter aux interfaces|langages de configuration des
    autres marques.</para>

    <varlistentry xml:id='nsa.switch'>
    <term><citetitle>Cisco IOS Switch Security Configuration
    Guide</citetitle></term>
    <listitem>
    <para>Le guide &url.nsa.switch.guide; est dédié aux commutateurs. Il
    présente bien sûr beaucoup plus de fonctions que ce document.</para>
    </listitem>
    </varlistentry>
    <varlistentry xml:id='nsa.router'>
    <term><citetitle>Router Security Configuration Guide</citetitle></term>
    <listitem>
    <para>Le guide &url.nsa.router.guide; est une excellente référence sur la
    sécurisation d'une architecture d'interconnexion réseau. Il va bien au delà
    de la configuration des équipements.</para>
    </listitem>
    </varlistentry>
    <varlistentry xml:id='nsa.summary'>
    <term><citetitle>Executive Summary</citetitle></term>
    <listitem>
    <para>La feuille &url.nsa.summary; est une
    <wordasword>checklist</wordasword> définitivement indispensable pour
    configurer les équipements.</para>
    </listitem>
    </varlistentry>
  </variablelist>

  <variablelist xml:id='biblio.syslog'>
    <title>Journalisation système</title>
    <para>On reproche beaucoup au service <systemitem
    class='service'>syslog</systemitem> son manque de sécurité intrinsèque.
    C'est oublier un peu vite que pour que ce type de service soit largement
    adopté, il doit être «léger» et facile à implanter dans un espace mémoire
    réduit. La sécurisation des échanges de messages <systemitem
    class='service'>syslog</systemitem> est relativement facile à obtenir en
    «canalisant» ces messages hors de la bande passante utilisateur dans des
    VLANs ou des réseaux privés virtuels spécifiques.</para>

    <para>Voici quelques références permettant d'argumenter sur cette
    question :</para>
    
    <varlistentry xml:id='syslog.ietf'>
    <term>Groupe de travail Syslog de l'IETF</term>
    <listitem>
    <para>Page Web du groupe de travail : &url.ietf.syslog;.</para>
    </listitem>
    </varlistentry>
    <varlistentry xml:id='syslog.hsc'>
    <term>Présentation HSC</term>
    <listitem>
    <para>Si cette présentation sur &url.hsc.syslog; ne traite pas directement
    de la journalisation, elle met en évidence son importance en tant qu'outil
    d'audit et de veille.</para>
    </listitem>
    </varlistentry>
  </variablelist>

  <para>Voilà ! On dispose maintenant d'une batterie de fonctions et d'outils
  de gestion des équipements réseau. Il ne reste plus qu'à composer son système
  de gestion personnel. Si vous avez déjà eu à administrer un système lourd et
  coûteux vous réaliserez plus facilement et plus vite combien cette facilité
  d'adaptation est avantageuse.</para>
</sect1>

<?custom-pagebreak?>
<appendix xml:id='devmgmt.iptables'>
  <title>Configuration type du filtrage réseau</title>

  <para>Après avoir donné plusieurs exemples de règles de filtrage pour les
  services de gestion d'équipements réseau présentés, voici un fichier
  <filename>/var/lib/iptables/active/</filename> complet. Même si le filtrage
  réseau sort du cadre de ce document, cette configuration essaie de respecter
  au mieux la règle d'or : <emphasis>décrire le plus précisement possible
  le premier paquet d'une nouvelle communication et faire confiance au suivi
  d'état ensuite</emphasis>.</para>

  <warning>
    <title>Attention !</title>

    <para>Le fichier ci-dessous est fourni à titre d'exemple sans aucune
    garantie de quelque nature que ce soit.</para>
  </warning>

  <para>Pour activer l'ensemble des règles il faut saisir une commande du
  type :
  <userinput>iptables-restore &lt;/var/lib/iptables/active</userinput>.</para>

<screen width='80'>&iptables.active;
</screen>

  <para>Il est possible de simplifier la syntaxe de filtrage des communications
  par équipement en groupant les services ouverts. En prenant l'exemple
  ci-dessous on perd en lisibilité puisque le compteur d'utilisation de la règle
  ne permet pas de distinguer le service utilisé dans la liste.</para>

<screen width='80'>-A INPUT -i eth2 -s 192.168.2.2 -p udp -m multiport --dports 69,123,162,514 \
        -m conntrack --ctstate NEW -j ACCEPT
</screen>

  <para>Dans le but de mieux respecter la règle d'or du filtrage, il est
  possible de tester les adresses <acronym>MAC</acronym> source des équipements
  gérés. De cette façon, on limite les possibilités de
  <wordasword>spoofing</wordasword>.</para>
</appendix>
</article>
