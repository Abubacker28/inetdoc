<?xml version='1.0'?>
<!DOCTYPE article PUBLIC "-//OASIS//DTD DocBook XML V5.0//EN"
        "/usr/share/xml/docbook/schema/dtd/5.0/docbook.dtd" [

<!ENTITY author         SYSTEM "author.xml">
<!ENTITY legal          SYSTEM "legal.xml">

<!ENTITY r1-zebra       SYSTEM "files/r1-zebra.conf">
<!ENTITY r1-ospfd       SYSTEM "files/r1-ospfd.conf">
<!ENTITY r2-zebra       SYSTEM "files/r2-zebra.conf">
<!ENTITY r2-ospfd       SYSTEM "files/r2-ospfd.conf">
<!ENTITY r3-zebra       SYSTEM "files/r3-zebra.conf">
<!ENTITY r3-ospfd       SYSTEM "files/r3-ospfd.conf">

<!ENTITY % inetdoc_urls SYSTEM 'inetdoc.urls.xml'>
%inetdoc_urls;
]>

<article xml:lang='fr' xml:id='ospf-triangle-multiple-default'>
<info>
  <title>Aire OSPF et passerelles multiples</title>

  &author;
  <abstract>
  <para>Cet article est une illustration des fonctions de routage avancées sur
  les systèmes GNU/Linux. À partir d'une topologie de travaux pratiques
  comprenant trois routeurs en «triangle» dans une aire <acronym>OSPF</acronym>
  et un quatrième routeur représentant un hypothétique opérateur, il couvre les
  notions de répartition de trafic (<wordasword>load balancing</wordasword>) et
  de tolérance aux pannes réseau (<wordasword>failover</wordasword>).</para>
  </abstract>
  <keywordset>
    <keyword>connmark</keyword>
    <keyword>failover</keyword>
    <keyword>inetdoc</keyword>
    <keyword>iproute</keyword>
    <keyword>iptables</keyword>
    <keyword>Linux</keyword>
    <keyword>load balancing</keyword>
    <keyword>mangle</keyword>
    <keyword>ospf</keyword>
    <keyword>quagga</keyword>
    <keyword>wireshark</keyword>
  </keywordset>
</info>

<section xml:id='ospf-triangle-multiple-default.legal.meta'>
  &legal;
  <section xml:id='ospf-triangle-multiple-default.meta'>
    <title>Méta-information</title>

  <para>Cet article est écrit avec <link
  xlink:href="http://www.docbook.org"><citetitle>DocBook</citetitle></link> XML
  sur un système <link xlink:href="http://www.debian.org"><citetitle>Debian
  GNU/Linux</citetitle></link>. Il est disponible en version imprimable au
  format PDF : <link
  xlink:href="http://www.inetdoc.net/pdf/__printbasename__"><literal>__printbasename__</literal></link>.</para>
  </section>

  <section xml:id='ospf-triangle-multiple-default.convtypo'>
    <title>Conventions typographiques</title>

  <para>Tous les exemples d'exécution des commandes sont précédés d'une invite
  utilisateur ou <wordasword>prompt</wordasword> spécifique au niveau des
  droits utilisateurs nécessaires sur le système.</para>

  <itemizedlist>
    <listitem>
    <para>Toute commande précédée de l'invite <prompt>$</prompt> ne nécessite
    aucun privilège particulier et peut être utilisée au niveau utilisateur
    simple.</para>
    </listitem>
    <listitem>
    <para>Toute commande précédée de l'invite <prompt>#</prompt> nécessite les
    privilèges du super-utilisateur.</para>
    </listitem>
  </itemizedlist>
  </section>
</section>

<?custom-pagebreak?>
<section xml:id='ospf-triangle-multiple-default.presentation'>
  <title>Présentation de la topologie réseau étudiée</title>

  <para>En fait, cet article fait suite à la rédaction du support
  &url.interco.cs; dans lequel on constitue une agrégation de topologies
  <wordasword>Hub and Spoke</wordasword> avec les douze postes d'une salle de
  travaux pratiques. Chacun des <wordasword>Hubs</wordasword> est interconnecté
  avec deux autres routeurs dans une aire <acronym>OSPF</acronym>. Cet ensemble
  de routeurs dispose de deux liens montant vers l'Internet.</para>

  <para>Vu de l'aire <acronym>OSPF</acronym>, la diffusion d'une route par
  défaut via le protocole de routage dynamique se fait à l'aide de
  l'instruction <userinput>default-information originate</userinput>. Cette
  instruction est présentée à la page <link
  xlink:href='&url.interco.ospf.default;'>Publication d'une route par défaut
  via OSPF</link> du support <link
  xlink:href='&url.interco.ospf.answers;'><citetitle>Routage dynamique avec
  OSPF</citetitle></link>.</para>

  <para>La situation devient un peu plus <emphasis>intéressante</emphasis>
  lorsque cette aire <acronym>OSPF</acronym> dispose de plusieurs portes de
  sortie vers les autres réseaux. En vis-à-vis de ces routeurs de bordure le
  routeur du niveau supérieur doit être capable d'acheminer correctement les
  flux sortant et entrant de l'aire. Voici une représentation de la topologie
  logique en question.</para>

  <mediaobject xml:id='ospf-triangle-multiple-default.presentation.topology'>
    <imageobject role='fo'>
    <imagedata format='PNG' fileref='images/interco.ospf.multiple-gw.png' width='12cm' scalefit='1' />
    </imageobject>
    <imageobject role='html'>
    <imagedata format='PNG' fileref='images/interco.ospf.multiple-gw.png' width='640px' scalefit='1' />
    </imageobject>
    <textobject>
    <phrase>Topologie logique avec deux routeurs OSPF de bordure.</phrase>
    </textobject>
  </mediaobject>

  <para>Cette topologie reprend très exactement la disposition en triangle
  présentée dans le support <link
  xlink:href='&url.interco.ospf.answers;'><citetitle>Routage dynamique avec
  OSPF</citetitle></link>. L'utilisation du routage inter-VLAN sert à mettre en
  évidence la dissociation entre une topologie physique en étoile issue des
  définitions de la technologie Ethernet et une topologie logique en triangle
  dans laquelle chaque routeur doit apprendre au moins un réseau via ses
  voisins.</para>

  <para>À la topologie initiale de travaux pratiques, on a adjoint un réseau
  local supplémentaire dans lequel on trouve un hôte baptisé (avec beaucoup
  d'originalité) <citetitle>host</citetitle> ainsi que le fameux routeur de
  niveau supérieur baptisé <systemitem class='systemname'>ISP</systemitem> pour
  <wordasword>Internet Service Provider</wordasword>. Dans tous les tests
  l'hôte <citetitle>host</citetitle> est la source et la destination du trafic
  routé. La configuration du routeur <systemitem
  class='systemname'>ISP</systemitem> fait l'objet de toute l'attention de cet
  article.</para>

  <para>Avant d'étudier le routage dans l'aire <acronym>OSPF</acronym> et les
  conditions à satisfaire pour la répartition du trafic entre les deux liens de
  raccordement de l'aire au routeur <systemitem
  class='systemname'>ISP</systemitem> ainsi que la tolérance aux pannes sur ces
  mêmes liens, il est important de préciser que toutes les connexions sont
  homogènes. On considère que toutes les interfaces des routeurs et du poste de
  travail <citetitle>host</citetitle> sont connectées sur des ports de
  commutateur Ethernet gigabit.</para>
</section>

<?custom-pagebreak?>
<section xml:id='ospf-triangle-multiple-default.ospf'>
  <title>Routage au sein de l'aire OSPF</title>

  <para>Sur <systemitem class='systemname'>R2</systemitem>, la table de routage
  vue du système est donnée ci-dessous. Cette visualisation au «niveau du
  noyau» est la synthèse de toutes les routes apprises par les différents
  canaux d'information : routes statiques et protocoles de routage dynamique.
  Dans le cas du routeur <systemitem class='systemname'>R2</systemitem>, les
  deux canaux d'information sont les connexions directes et le protocole
  <acronym>OSPF</acronym>.</para> 

  <itemizedlist>
    <listitem>
    <para>Toutes les entrées avec l'indication <literal>proto kernel</literal>
    correpondent aux connexions directes héritées de la configuration des
    interfaces réseau du routeur.</para>
    </listitem>
    <listitem>
    <para>Toutes les entrées avec l'indication <literal>proto zebra</literal>
    correspondent aux routes apprises via un démon actif du paquet
    <systemitem>quagga</systemitem>. Ici, le démon <systemitem
    class='daemon'>ospfd</systemitem> est la seule source d'information.</para>
    </listitem>
  </itemizedlist>

<screen width='80'><prompt>$</prompt> ip route ls
default  proto zebra  metric 10 
        nexthop via 10.1.23.3  dev eth0.23 weight 1
        nexthop via 10.1.12.1  dev eth0.12 weight 1
10.1.12.0/26 dev eth0.12  proto kernel  scope link  src 10.1.12.2 
10.1.13.0/26  proto zebra  metric 2 
        nexthop via 10.1.12.1  dev eth0.12 weight 1
        nexthop via 10.1.23.3  dev eth0.23 weight 1
10.1.20.0/26 dev eth0  proto kernel  scope link  src 10.1.20.1 
10.1.23.0/26 dev eth0.23  proto kernel  scope link  src 10.1.23.2</screen>

  <para>La même table de routage vue du démon <systemitem
  class='daemon'>zebra</systemitem> est donnée ci-dessous. Relativement à la
  vue synthétique précédente, on obtient davantage d'informations sur les
  mécanismes d'apprentissage et de décision.</para>

  <itemizedlist>
    <listitem>
    <para>Toutes les lignes débutant par le caractère <keycap>C</keycap>
    correspondent au connexions directes.</para>
    </listitem>
    <listitem>
    <para>Toutes les lignes débutant par le caractère <keycap>O</keycap>
    correspondent aux routes apprises à l'aide du démon <systemitem
    class='daemon'>ospfd</systemitem>.</para>
    </listitem>
    <listitem>
    <para>Toutes les entrées marquées par le caractère <keycap>*</keycap>
    correspondent aux routes retenues pour l'acheminement des paquets. Toutes
    les routes listées sont présentes dans la <wordasword>Routing Information
    Base</wordasword> (<acronym>RIB</acronym>) au niveau <wordasword>Control
    Plane</wordasword> et celles qui sont marquées sont mémorisées dans la
    <wordasword>Forwarding Information Base</wordasword>
    (<acronym>FIB</acronym>) au niveau <wordasword>Data
    Plane</wordasword>.</para>

    <para>Avant stockage dans la <acronym>FIB</acronym>, les routes retenues
    sont transformées (table de <wordasword>hash</wordasword>) pour assurer la
    fonction de commutation de paquets. Cette fonction est plus ou moins
    optimisée suivant les composants électroniques présents sur le routeur.
    Dans le cas de cette maquette de travaux pratiques, les machines virtuelles
    utilisent la mémoire vive pour stocker les tables de
    <wordasword>hash</wordasword>.</para>
    </listitem>
  </itemizedlist>

<screen width='80'><prompt>R2-Zebra#</prompt> sh ip route 
Codes: K - kernel route, C - connected, S - static, R - RIP, O - OSPF,
       I - ISIS, B - BGP, > - selected route, * - FIB route

O>* 0.0.0.0/0 [110/10] via 10.1.23.3, eth0.23, 1d10h31m
  *                    via 10.1.12.1, eth0.12, 1d10h31m
O   10.1.12.0/26 [110/1] is directly connected, eth0.12, 5d00h09m
C>* 10.1.12.0/26 is directly connected, eth0.12
O>* 10.1.13.0/26 [110/2] via 10.1.12.1, eth0.12, 5d00h09m
  *                      via 10.1.23.3, eth0.23, 5d00h09m
O   10.1.20.0/26 [110/1] is directly connected, eth0, 5d00h09m
C>* 10.1.20.0/26 is directly connected, eth0
O   10.1.23.0/26 [110/1] is directly connected, eth0.23, 5d00h09m
C>* 10.1.23.0/26 is directly connected, eth0.23
C>* 127.0.0.0/8 is directly connected, lo</screen>

  <para>La base des routes du démon <systemitem
  class='daemon'>ospfd</systemitem> est donnée ci-dessous. On ne retrouve ici
  que les routes présentes dans la configuration du démon local et celles
  apprises via les échanges avec les démons <acronym>OSPF</acronym>
  voisins.</para>

  <itemizedlist>
    <listitem>
    <para>Les réseaux correspondant aux connexions directes du routeur
    apparaissent avec la mention <userinput>directly
    attached</userinput>.</para>
    </listitem>
    <listitem>
    <para>Les autres réseaux apparaissent avec l'adresse <acronym>IP</acronym>
    du ou des routeurs voisins. Ainsi, depuis le routeur <systemitem
    class='systemname'>R2</systemitem> le réseau <systemitem
    class='ipaddress'>10.1.13.0/26</systemitem> est appris via les deux
    routeurs <systemitem class='systemname'>R1</systemitem> (<systemitem
    class='ipaddress'>10.1.12.1</systemitem>) et <systemitem
    class='systemname'>R3</systemitem> (<systemitem
    class='ipaddress'>10.1.23.3</systemitem>).</para>
    </listitem>
  </itemizedlist>

<screen width='80'><prompt>R2-ospfd#</prompt> sh ip ospf route 
============ OSPF network routing table ============
N    10.1.12.0/26          [1] area: 0.0.0.0
                           directly attached to eth0.12
N    10.1.13.0/26          [2] area: 0.0.0.0
                           via 10.1.12.1, eth0.12
                           via 10.1.23.3, eth0.23
N    10.1.20.0/26          [1] area: 0.0.0.0
                           directly attached to eth0
N    10.1.23.0/26          [1] area: 0.0.0.0
                           directly attached to eth0.23

============ OSPF router routing table =============
R    0.0.0.1               [1] area: 0.0.0.0, ASBR
                           via 10.1.12.1, eth0.12
R    0.0.0.3               [1] area: 0.0.0.0, ASBR
                           via 10.1.23.3, eth0.23

============ OSPF external routing table ===========
N E2 0.0.0.0/0             [1/10] tag: 0
                           via 10.1.23.3, eth0.23
                           via 10.1.12.1, eth0.12</screen>

  <para>Comme indiqué dans le support de travaux pratiques sur le <link
  xlink:href='&url.interco.ospf.answers;'>Routage dynamique avec OSPF</link>,
  l'utilisation de l'instruction <userinput>default-information
  originate</userinput> sur les routeurs <systemitem
  class='systemname'>R1</systemitem> et <systemitem
  class='systemname'>R3</systemitem> change les rôles de ces deux routeurs. Ils
  deviennent routeurs de bordure ou <wordasword>Autonomous System Boundary
  Router</wordasword>. Ils sont situés à la frontière entre l'aire
  <acronym>OSPF</acronym> et un autre système autonome qui peut utiliser un
  autre type de routage.</para>

  <para>Dans notre cas, les routeurs <systemitem
  class='systemname'>R1</systemitem> et <systemitem
  class='systemname'>R3</systemitem> possèdent une route statique définie au
  niveau système vers <systemitem class='systemname'>ISP</systemitem>.
  L'instruction donnée ci-dessus assure la redistribution des routes statiques
  vers <systemitem class='systemname'>R2</systemitem>. Ces routes apparaissent
  comme des entrées de type <option>E2</option> dans la table de <systemitem
  class='systemname'>R2</systemitem>.</para>

  <para>L'indicateur <option>E2</option> correspond au type par défaut des
  routes apprises par le biais de la redistribution. La métrique est un point
  important à considérer avec les routes de ce type. Elles ne présentent que le
  coût du chemin allant du routeur <acronym>ASBR</acronym> vers le réseau de
  destination (<option>10</option> dans notre exemple) ; ce qui ne correspond
  pas au coût réel du chemin entre <systemitem
  class='systemname'>R2</systemitem> et <systemitem
  class='systemname'>ISP</systemitem>. Sachant que tous les liens de la
  topologie étudiée sont identiques et ont le même coût, on se contente
  d'utiliser ces entrées de type <option>E2</option> en l'état.</para>
</section>

<section xml:id='ospf-triangle-multiple-default.load-balancing'>
  <title>Répartition de trafic - <wordasword>load balancing</wordasword></title>

  <para>Dans la configuration de l'aire <acronym>OSPF</acronym> présentée dans
  la section précédente, les routeurs et les hôtes réseau en général disposent
  de deux liens vers le routeur de niveau supérieur <systemitem
  class='systemname'>ISP</systemitem>. Si les passerelles par défaut des deux
  routeurs de bordure <systemitem class='systemname'>R1</systemitem> et
  <systemitem class='systemname'>R3</systemitem> sont publiées via le protocole
  de routage dynamique à destination de tous les routeurs de l'aire, le routeur
  <systemitem class='systemname'>ISP</systemitem> ne dispose pas de cette
  information.</para>

  <para>Sans configuration particulière, le routage se fait uniquement sur la
  base des adresses <acronym>IP</acronym> destination et le trafic sortant peut
  transiter aussi bien par <systemitem class='systemname'>R1</systemitem> que
  par <systemitem class='systemname'>R3</systemitem>. Le trafic retour ou
  entrant transite exclusivement par <systemitem
  class='systemname'>ISP</systemitem> et il est nécessaire de renseigner les
  réseaux appartenant à l'aire <acronym>OSPF</acronym> dans sa table de
  routage. La technique usuelle dans le contexte de la topologie étudiée
  consiste à implanter une route de synthèse qui englobe la totalité des
  réseaux situés aux niveaux inférieurs.</para>

  <para>Pour déterminer l'adresse réseau qui englobe les réseau de l'aire, on
  dispose de l'outil <command>aggregate</command> fourni avec le paquet du même
  nom. Voici deux exemples d'exécution sur le routeur <systemitem
  class='systemname'>R2</systemitem> après affichage de la table de
  routage.</para>

<screen width='80'><prompt>#</prompt> ip route ls
default  proto zebra  metric 10 
        nexthop via 10.1.23.3  dev eth0.23 weight 1
        nexthop via 10.1.12.1  dev eth0.12 weight 1
10.1.12.0/26 dev eth0.12  proto kernel  scope link  src 10.1.12.2 
10.1.13.0/26  proto zebra  metric 2 
        nexthop via 10.1.12.1  dev eth0.12 weight 1
        nexthop via 10.1.23.3  dev eth0.23 weight 1
10.1.20.0/26 dev eth0  proto kernel  scope link  src 10.1.20.1 
10.1.23.0/26 dev eth0.23  proto kernel  scope link  src 10.1.23.2</screen>

  <para>Dans le premier exemple ci-dessous, l'adresse <systemitem
  class='ipaddress'>10.1.0.0/20</systemitem> n'englobe que les réseaux
  <systemitem class='ipaddress'>10.1.12.0/26</systemitem> et <systemitem
  class='ipaddress'>10.1.13.0/26</systemitem> marqués avec le signe
  <keycap>-</keycap>. Le masque réseau <option>/20</option> est donc
  insuffisant pour couvrir la liste complète des réseaux de niveau
  inférieur.</para>

<screen width='80'><prompt>#</prompt> (echo '10.1.0.0/20' ;\
ip route ls | grep -Eo '^([0-9]{1,3}\.){3}[0-9]{1,3}/[0-9]{2}') |\
aggregate -v
aggregate: maximum prefix length permitted will be 32
[    1]   10.1.0.0/20
[    2] - 10.1.12.0/26
[    3] - 10.1.13.0/26
[    4]   10.1.20.0/26
[    5]   10.1.23.0/26</screen>

  <para>Dans le second exemple ci-dessous, l'adresse <systemitem
  class='ipaddress'>10.1.0.0/19</systemitem> englobe bien tous les réseaux de
  l'aire <acronym>OSPF</acronym>.</para>

<screen width='80'><prompt>#</prompt> (echo '10.1.0.0/19' ;\
ip route ls | grep -Eo '^([0-9]{1,3}\.){3}[0-9]{1,3}/[0-9]{2}') |\
aggregate -v
aggregate: maximum prefix length permitted will be 32
[    1]   10.1.0.0/19
[    2] - 10.1.12.0/26
[    3] - 10.1.13.0/26
[    4] - 10.1.20.0/26
[    5] - 10.1.23.0/26</screen>

  <para>On peut donc implanter sur le routeur <systemitem
  class='systemname'>ISP</systemitem> une route statique de synthèse ou
  <wordasword>static summary route</wordasword> désignant les deux passerelles
  de l'aire <acronym>OSPF</acronym>.</para>

<screen width='80'><prompt>#</prompt> ip route add 10.1.0.0/19 nexthop via 10.1.30.1 nexthop via 10.1.30.9</screen>

  <para>Une fois cette commande exécutée, la table de routage du routeur
  <systemitem class='systemname'>ISP</systemitem> est la suivante.</para>

<screen width='80'><prompt>#</prompt> ip route ls
default via 192.200.0.1 dev eth0 
10.1.0.0/19 
        nexthop via 10.1.30.1  dev eth1.101 weight 1
        nexthop via 10.1.30.9  dev eth1.103 weight 1
10.1.30.0/29 dev eth1.101  proto kernel  scope link  src 10.1.30.2 
10.1.30.8/29 dev eth1.103  proto kernel  scope link  src 10.1.30.10 
192.200.0.0/27 dev eth0  proto kernel  scope link  src 192.200.0.3</screen>

   <para>C'est le mot clé <option>nexthop</option> qui sert à définir plusieurs
   passerelles pour un même réseau de destination.</para>

   <para>Maintenant que la capacité à exploiter les deux liens est implantée à
   chaque extrémité, il ne reste qu'à valider le fonctionnement à partir du
   trafic émis et reçu l'hôte <systemitem class='systemname'>host</systemitem>
   transitant par <systemitem class='systemname'>ISP</systemitem>. C'est sur ce
   routeur que l'on procède à l'analyse du trafic avec l'outil
   <command>tshark</command> qui permet la capture de trafic en mode console.
   Le système du routeur <systemitem class='systemname'>ISP</systemitem> a en
   plus été configuré pour pouvoir effectuer les captures au niveau utilisateur
   normal en appliquant les instructions données dans l'article
   &url.wireshark-as-user;.</para>

   <para>Voici une séquence typique de capture sur le routeur <systemitem
   class='systemname'>ISP</systemitem> pendant le chargement d'une page
   <wordasword>Web</wordasword> sur <systemitem
   class='systemname'>host</systemitem>.</para>

<screen width='80'><prompt>etu@isp:~$</prompt> screen tshark -i eth1 ! port 22  -w /var/tmp/multipath-host.pcap
[detached from 13986.pts-0.isp]
<prompt>etu@isp:~$</prompt> ssh 10.1.20.2
Linux host 3.1.0-1-amd64 #1 SMP Mon Nov 14 08:02:25 UTC 2011 x86_64
&lt;snipped/>
<prompt>etu@host:~$</prompt> lynx www.iana.org
Recherche  'www.iana.org' premier
<prompt>etu@host:~$</prompt> logout
Connection to 10.1.20.2 closed.
<prompt>etu@isp:~$</prompt> screen -r
[screen is terminating]
<prompt>etu@isp:~$</prompt> ls -lh /var/tmp/multipath-host.pcap 
-rw------- 1 etu etu 12K déc.  11 23:25 /var/tmp/multipath-host.pcap</screen>
</section>

<section xml:id='ospf-triangle-multiple-default.conclusion'>
  <title>Pour conclure</title>

  <para>Voilà comment on illustre quelques notions de routage avancé avec
  quatre instances de machines virtuelles.</para>
</section>

<appendix xml:id='ospf-triangle-multiple-default.vde'>
  <title>Configuration de la commutation</title>

  <para>Les interfaces réseau des instances de systèmes virtualisés sont un
  brassées sur une instance de commutateur, virtuel lui aussi,
  <citetitle>vde</citetitle>. Ce commutateur est fourni par le paquet
  <systemitem>vde2</systemitem> et il est lancé lors de l'initialisation de
  l'interface <option>tap0</option> sur le système hôte. Voici un extrait du
  fichier <filename>/etc/network/interfaces</filename>.</para>

<screen width='80'>auto tap0
iface tap0 inet static
        address 192.200.0.1
        netmask 255.255.255.192
        network 192.200.0.0
        broadcast 192.200.0.63
        vde2-switch -</screen>

  <para>Le brassage correspondant à la vue <link
  linkend='ospf-triangle-multiple-default.presentation.topology'>topologie
  logique</link> est donné dans le tableau ci-dessous.</para> 

  <table frame='all'>
    <title>Brassage commutateur virtuel</title>
  <tgroup cols='4' align='left' colsep='1' rowsep='1'>
  <colspec colname='c1'/>
  <colspec colname='c2'/>
  <colspec colname='c3'/>
  <colspec colname='c4'/>
  <thead>
    <row>
      <entry align='center'>Port VDE</entry>
      <entry align='center'>Hôte</entry>
      <entry align='center'>Interface(s)</entry>
      <entry align='center'>Liaison</entry>
    </row>
  </thead>
  <tbody>
    <row>
      <entry>1</entry>
      <entry>Système hôte</entry>
      <entry>tap0</entry>
      <entry>commutateur vde</entry>
    </row>
    <row>
      <entry>2</entry>
      <entry>ISP</entry>
      <entry>eth0</entry>
      <entry>système hôte | Internet</entry>
    </row>
    <row>
      <entry morerows='1'>3</entry>
      <entry morerows='1'>ISP</entry>
      <entry>eth1.101</entry>
      <entry>downlink1</entry>
    </row>
    <row>
      <entry>eth1.103</entry>
      <entry>downlink2</entry>
    </row>
    <row>
      <entry morerows='2'>4</entry>
      <entry morerows='2'>R1</entry>
      <entry>eth0.101</entry>
      <entry>downlink1</entry>
    </row>
    <row>
      <entry>eth0.13</entry>
      <entry>trunk R1 + R3</entry>
    </row>
    <row>
      <entry>eth0.12</entry>
      <entry>trunk R1 + R2</entry>
    </row>
    <row>
      <entry morerows='2'>5</entry>
      <entry morerows='2'>R2</entry>
      <entry>eth0</entry>
      <entry>host</entry>
    </row>
    <row>
      <entry>eth0.12</entry>
      <entry>trunk R2 + R1</entry>
    </row>
    <row>
      <entry>eth0.23</entry>
      <entry>trunk R2 + R3</entry>
    </row>
    <row>
      <entry morerows='2'>6</entry>
      <entry morerows='2'>R3</entry>
      <entry>eth0.103</entry>
      <entry>downlink2</entry>
    </row>
    <row>
      <entry>eth0.13</entry>
      <entry>trunk R3 + R1</entry>
    </row>
    <row>
      <entry>eth0.23</entry>
      <entry>trunk R3 + R2</entry>
    </row>
    <row>
      <entry>7</entry>
      <entry>host</entry>
      <entry>eth0</entry>
      <entry>R2</entry>
    </row>
  </tbody>
  </tgroup>
  </table>
</appendix>

<appendix xml:id='ospf-triangle-multiple-default.quagga'>
  <title>Configuration du routage statique et dynamique</title>

  <para>Les configurations des démons <systemitem
  class='daemon'>zebra</systemitem> des trois routeurs sont données ci-dessous.
  La seule particularité de ces configurations tient à la définition des bandes
  passantes sur chaque interface. Ces bandes passantes sont utilisées par les
  démons <systemitem class='daemon'>ospfd</systemitem> pour calculer les
  métriques de chacun des liens.</para>

  <informaltable frame='none'>
    <tgroup cols='3'>
    <colspec colwidth='1*'/>
    <colspec colwidth='1*'/>
    <colspec colwidth='1*'/>
    <tbody>
    <row>
    <entry valign='top'><screen>&r1-zebra;</screen></entry>
    <entry valign='top'><screen>&r2-zebra;</screen></entry>
    <entry valign='top'><screen>&r3-zebra;</screen></entry>
    </row>
    </tbody>
    </tgroup>
  </informaltable>

  <para>Les configurations des démons <systemitem
  class='daemon'>ospfd</systemitem> des trois routeurs sont données ci-dessous.
  Les deux routeurs de bordure <systemitem class='systemname'>R1</systemitem>
  et <systemitem class='systemname'>R3</systemitem> publient une route par
  défaut à l'aide de l'instruction <userinput>default-information
  originate</userinput>.</para>

  <informaltable frame='none'>
    <tgroup cols='3'>
    <colspec colwidth='1*'/>
    <colspec colwidth='1*'/>
    <colspec colwidth='1*'/>
    <tbody>
    <row>
    <entry valign='top'><screen>&r1-ospfd;</screen></entry>
    <entry valign='top'><screen>&r2-ospfd;</screen></entry>
    <entry valign='top'><screen>&r3-ospfd;</screen></entry>
    </row>
    </tbody>
    </tgroup>
  </informaltable>
</appendix>
</article>
