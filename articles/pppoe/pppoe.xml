<?xml version='1.0'?>
<!DOCTYPE article PUBLIC "-//OASIS//DTD DocBook XML V5.0//EN"
        "/usr/share/xml/docbook/schema/dtd/5.0/docbook.dtd" [

<!ENTITY author					SYSTEM "author.xml">
<!ENTITY legal					SYSTEM "legal.xml">

<!ENTITY tap-create				SYSTEM "scripts/tap-create.sh">
<!ENTITY pppoe-startup			SYSTEM "scripts/pppoe-startup.sh">
<!ENTITY hub-interfaces			SYSTEM "scripts/hub-interfaces">
<!ENTITY pppoe-server-options	SYSTEM "scripts/pppoe-server-options">
<!ENTITY spoke-interfaces		SYSTEM "scripts/spoke-interfaces">
<!ENTITY spoke-dsl-provider		SYSTEM "scripts/spoke-dsl-provider">
<!ENTITY hub-rules.v4			SYSTEM "scripts/hub-rules.v4">
<!ENTITY hub-radvd.conf			SYSTEM "scripts/hub-radvd.conf">
<!ENTITY hub-rules.v6			SYSTEM "scripts/hub-rules.v6">

<!-- urls -->
<!ENTITY % inetdoc_urls			SYSTEM 'inetdoc.urls.xml'>
%inetdoc_urls;

<!-- openvswitch -->
<!ENTITY url.ovs
  "<link xmlns='http://docbook.org/ns/docbook'
  xlink:href='http://openvswitch.org'>Open vSwitch</link>">

<!-- PPP -->
<!ENTITY url.ppp
  "<link xmlns='http://docbook.org/ns/docbook'
  xlink:href='http://en.wikipedia.org/wiki/Point-to-Point_Protocol'>PPP</link>">

<!-- PPPoE -->
<!ENTITY url.pppoe
  "<link xmlns='http://docbook.org/ns/docbook'
  xlink:href='http://en.wikipedia.org/wiki/Point-to-Point_Protocol_over_Ethernet'>PPPoE</link>">

<!ENTITY url.pppoe-debian-wiki
  "<link xmlns='http://docbook.org/ns/docbook'
  xlink:href='https://wiki.debian.org/fr/PPPoE'>PPPoE</link>">

<!ENTITY url.mtu
  "<link xmlns='http://docbook.org/ns/docbook'
  xlink:href='https://en.wikipedia.org/wiki/Maximum_transmission_unit'>Maximum
  transmission unit</link>">

<!ENTITY url.mss
  "<link xmlns='http://docbook.org/ns/docbook'
  xlink:href='https://en.wikipedia.org/wiki/Maximum_segment_size'>Maximum
  segment size</link>">

<!-- DSLAM -->
<!ENTITY url.dslam
  "<link xmlns='http://docbook.org/ns/docbook'
  xlink:href='http://en.wikipedia.org/wiki/Digital_Subscriber_Line_Access_Multiplexer'>Digital
  subscriber line access multiplexer</link>">

<!ENTITY url.bras
  "<link xmlns='http://docbook.org/ns/docbook'
  xlink:href='https://upload.wikimedia.org/wikipedia/commons/d/d5/XDSL_Connectivity_Diagram_en.svg'>architecture
  des connexions xDSL</link>">

<!-- IPv6 -->
<!ENTITY url.ipv6-ula
  "<link xmlns='http://docbook.org/ns/docbook'
  xlink:href='https://en.wikipedia.org/wiki/Unique_local_address'>Unique local
  address</link>">
]>

<article xml:lang='fr' xml:id='pppoe'>
<info>
  <title>Modélisation d'un lien WAN avec PPPoE</title>

  &author;
  <abstract>
  <para>Cet article est un exemple de modélisation d'un lien de réseau étendu
  (<acronym>WAN</acronym>) utilisant le protocole <acronym>PPP</acronym>. La
  modélisation s'appuie sur deux instances de systèmes virtualisés qui ne
  disposent que d'interfaces Ethernet. On présente donc une implémentation
  particulière du protocole <acronym>PPP</acronym> sur Ethernet :
  <acronym>PPPoE</acronym>.</para>
  </abstract>
  <keywordset>
    <keyword>inetdoc</keyword>
    <keyword>Linux</keyword>
    <keyword>openvswitch</keyword>
    <keyword>KVM</keyword>
    <keyword>pppoe</keyword>
    <keyword>qemu</keyword>
  </keywordset>
</info>

<section xml:id='pppoe.legal.meta'>
  &legal;
  <section xml:id='pppoe.meta'>
    <title>Méta-information</title>

  <para>Cet article est écrit avec <link
  xlink:href="http://www.docbook.org"><citetitle>DocBook</citetitle></link> XML
  sur un système <link xlink:href="https://www.debian.org"><citetitle>Debian
  GNU/Linux</citetitle></link>. Il est disponible en version imprimable au
  format PDF : <link
  xlink:href="https://www.inetdoc.net/pdf/__printbasename__"><literal>__printbasename__</literal></link>.</para>
  </section>
</section>

<?custom-pagebreak?>
<section xml:id='pppoe.context'>
  <title>Le contexte</title>

  <para>Dans la série de travaux pratiques sur le thème de l'&url.interco;,
  plusieurs supports utilisent des liaisons de réseaux étendus
  (<acronym>WAN</acronym>) avec le protocole <acronym>PPP</acronym>. Ces sujets
  de travaux pratiques méritent d'être revus plusieurs fois et les équipements
  matériels dédiés ne sont pas toujours disponibles. L'objectif de cet article
  est donc de proposer une modélisation de topologie type mettant œuvre le
  protocole <acronym>PPP</acronym>.</para>

  <mediaobject>
  <imageobject>
    <imagedata fileref='images/pppoe-context.png' format='PNG' contentwidth='14cm' width='15cm'/>
  </imageobject>
  <textobject>
    <phrase>Topologie WAN avec PPP</phrase>
  </textobject>
  <caption>
    <para><link xlink:href='images/pppoe-context.png'>Topologie WAN avec PPP</link></para>
  </caption>
  </mediaobject>

  <para>La virtualisation de la topologie proposée ci-dessus sur un unique
  système hôte peut poser quelques soucis. Fort heureusement, il existe une
  parade ! On peut très bien utiliser le protocole &url.pppoe; sur un domaine
  de diffusion un peu particulier pour reproduire les caractéristiques d'une
  liaison <acronym>WAN</acronym>. Relativement aux connexions physiques
  réelles, cette parade présente des avantages et des inconvénients que l'on
  peut énoncer comme suit.</para>

  <formalpara>
  <title>Les avantages</title>
  <para>Toutes les caractéristiques du protocole &url.ppp; sont effectivement
  exploitées. On illustre le volet négociation des paramètres d'une connexion
  et l'authentification entre deux extrémités avec les fonctions de la
  sous-couche <wordasword>Link Control Protocol</wordasword>
  (<acronym>LCP</acronym>). Une fois le «lien» établi, ce sont les fonctions de
  la sous-couche <wordasword>Network Control Protocol</wordasword>
  (<acronym>NCP</acronym>) qui permettent l'échange des adresses
  <acronym>IP</acronym> entre l'extrémité qui joue le rôle
  <wordasword>Hub</wordasword> (celle qui a la maîtrise du plan d'adressage) et
  celle qui joue le rôle <wordasword>Spoke</wordasword> (celle qui
  s'authentifie auprès du site central).</para>
  </formalpara>

  <formalpara>
  <title>Les inconvénients</title>
  <para>Le recours au format de trame Ethernet est certainement le problème
  pédagogique le plus sensible. Si l'étude des liaisons <acronym>WAN</acronym>
  a encore un sens aujourd'hui, c'est justement de montrer qu'un autre format
  de trame existe : le format <link
  xlink:href='http://en.wikipedia.org/wiki/HDLC'>HDLC</link>. Souvent, les
  étudiants qui débutent dans le domaine des réseaux, n'envisagent pas qu'un
  réseau puisse s'appuyer sur un autre format de trame qu'Ethernet. Dans leur
  environnement immédiat, les réseaux filaires des campus universitaires sont
  tout Ethernet, les réseaux Wifi publics ou domestiques utilisent aussi des
  trames Ethernet, etc. L'utilisation du protocole <acronym>PPPoE</acronym>
  présente donc un inconvénient puisque l'on retombe dans l'utilisation du
  fameux format de trame Ethernet dont tous les champs sont prédéfinis et non
  paramétrables.</para>
  </formalpara>

  <para>L'autre contrainte est liée à la solution de virtualisation. Dans le
  but d'illustrer un maximum de possibilités d'interconnexion réseau, on
  s'appuie sur le guide &url.vm;. Dans la section suivante, on présente donc la
  mise en œuvre de la topologie avec l'hyperviseur <acronym>KVM</acronym>
  associé au commutateur &url.ovs;.</para>
</section>

<?custom-pagebreak?>
<section xml:id='pppoe.topology'>
  <title>La topologie virtualisée</title>

  <para>Suite à la définition de topologie type donnée dans la section
  précédente, voici un schéma représentant la virtualisation de cette
  topologie. Il fait apparaître deux instances de machines virtuelles nommées
  <citetitle>Hub</citetitle> et <citetitle>Spoke</citetitle> ainsi que les
  commutateurs virtuels utilisés pour l'interconnexion entre réseaux.</para>

  <mediaobject>
  <imageobject>
    <imagedata fileref='images/pppoe-virtualized.png' format='PNG' contentwidth='14cm' width='15cm'/>
  </imageobject>
  <textobject>
    <phrase>Topologie de virtualisation d'un lien WAN</phrase>
  </textobject>
  <caption>
    <para><link xlink:href='images/pppoe-virtualized.png'>Topologie de
    virtualisation d'un lien WAN</link></para>
  </caption>
  </mediaobject>

  <para>Le routeur <citetitle>Hub</citetitle> joue le rôle de concentrateur des
  demandes d'accès émises par les routeurs distants : les
  <citetitle>Spokes</citetitle>. Dans la maquette présentée ci-dessus, on
  n'utilise qu'un seul routeur <citetitle>Spoke</citetitle> pour illustrer le
  dialogue <acronym>PPP</acronym> sur un seul lien <acronym>WAN</acronym>. En
  ajoutant, d'autres instances de machines virtuelles, il serait possible de
  multiplier les routeurs <citetitle>Spokes</citetitle>.</para>

  <note>
  <para>Dans l'&url.bras; le routeur <citetitle>Hub</citetitle> est aussi
  appelé <wordasword>Broadband Remote Access Server</wordasword> ou
  <acronym>BRAS</acronym>.</para>
  </note>

  <bridgehead xml:id="packages" renderas='sect3'>Paquets et droits d'accès</bridgehead>

  <para>Avant de passer à la configuration de l'interconnexion, il faut
  préparer le système hôte : installer les paquets nécessaires à la
  virtualisation système et ouvrir les permissions d'accès.</para>

  <itemizedlist>
    <listitem>
    <para>On commence par l'installation des paquets utiles après avoir vérifié
    que le processeur du système hôte dispose bien des fonctions de
    virtualisation.</para>

<screen><prompt>#</prompt> egrep '(vmx|svm)' /proc/cpuinfo</screen>

<screen><prompt>#</prompt> aptitude install qemu-system-x86 openvswitch-switch</screen>
    </listitem>
    <listitem>
    <para>On s'assure ensuite que l'utilisateur normal est bien membre des
    groupes système associés à la virtualisation. Dans notre cas, on se
    contente des groupes <option>sudo</option> et <option>kvm</option>. L'ajout
    d'un utilisateur à un groupe système se fait à l'aide de la commande
    suivante.</para>
    
<screen><prompt>#</prompt> adduser etu kvm</screen>
    </listitem>
  </itemizedlist>

  <bridgehead xml:id="interconnection" renderas='sect3'>Commutateurs et cordons de brassage</bridgehead>

  <para>Sur le schéma ci-dessus, on compte 4 cordons de brassage. À
  chacun de ces cordons correspond une interface de type <option>tap</option>.
  Voici une copie du script de création de ces cordons de brassage
  virtuels.</para>

<screen>&tap-create;</screen>

  <para>Voici la syntaxe de création du commutateur
  <option>wan-sw</option>. La création du commutateur <option>dsw-host</option>
  utiliserait la même syntaxe. Ce dernier commutateur fait partie de la
  configuration permanente du système hôte puisqu'il est utilisé pour raccorder
  celui-ci à l'Internet.</para>

<screen><prompt>$</prompt> sudo ovs-vsctl add-br wan-sw</screen>

  <para>On passe maintenant au brassage des cordons sur les commutateurs.</para>

  <itemizedlist>
  <listitem>
  <para>Commutateur <option>dsw-host</option></para>

<screen><prompt>$</prompt> sudo ovs-vsctl add-port <emphasis>dsw-host tap0</emphasis> -- set port tap0 vlan_mode=access
<prompt>$</prompt> sudo ovs-vsctl add-port <emphasis>dsw-host tap2</emphasis> -- set port tap2 vlan_mode=access</screen>
  </listitem>
  <listitem>
  <para>Commutateur <option>wan-sw</option></para>

<screen><prompt>$</prompt> sudo ovs-vsctl add-port <emphasis>wan-sw tap1</emphasis> -- set port tap1 vlan_mode=access
<prompt>$</prompt> sudo ovs-vsctl add-port <emphasis>wan-sw tap3</emphasis> -- set port tap3 vlan_mode=access</screen>
  </listitem>
  </itemizedlist>

  <bridgehead xml:id="vm-instances" renderas='sect3'>Instances de systèmes virtuels</bridgehead>

  <para>Le guide &url.vm; fournit le &url.vm.ovs-mode-startup.sh; qui sert au
  lancement des instances de systèmes virtuels. Ce script ne décrit qu'une
  interface réseau pour une instance de système virtuel. Il est donc nécessaire
  de le compléter avec la description des interfaces supplémentaires.</para>

<screen>&pppoe-startup;</screen>

  <para>Il faut noter que sur la schéma proposé ci-dessus, l'interface
  <option>eth0</option> du routeur <citetitle>Spoke</citetitle>, raccordée via
  le cordon <option>tap2</option> devient inutile dès que la configuration du
  lien <acronym>WAN</acronym> est en place. Cette interface est cependant
  nécessaire pour accéder à la console du routeur <citetitle>Spoke</citetitle>
  et installer les paquets manquants.</para>
</section>

<?custom-pagebreak?>
<section xml:id='pppoe.config'>
  <title>La configuration PPPoE</title>

  <para>Les deux protocoles &url.ppp; et <acronym>PPPoe</acronym> se
  distinguent par le fait qu'une session <acronym>PPPoe</acronym> doit être
  établie avant que les échanges <acronym>PPP</acronym> ne débutent.</para>

  <para>Le caractère asymétrique du dialogue <acronym>PPPoE</acronym> a une
  influence importante sur la configuration des deux (systèmes|routeurs)
  virtuels. Le routeur <systemitem>Hub</systemitem> doit exécuter un processus
  spécifique <systemitem>pppoe-server</systemitem> qui lui permet d'attendre
  les requêtes du routeur <systemitem>Spoke</systemitem>. La configuration de
  ce routeur <systemitem>Spoke</systemitem> est très voisine de celle de
  n'importe quel client <acronym>PPP</acronym>. Il suffit juste de spécifier
  l'utilisation du greffon <systemitem>pppoe</systemitem> dans la
  configuration.</para>

  <section xml:id='pppoe.config.hub'>
    <title>Le routeur Hub</title>

  <para>Par définition, un système <wordasword>Broadband Remote Access
  Server</wordasword> assure les fonctions suivantes :</para>

  <itemizedlist>
    <listitem>
    <para>Agréger le trafic en provenance des équipements &url.dslam;
    (<acronym>DSLAM</acronym>). Sur la maquette, nous utilisons le commutateur
    <option>wan-sw</option> en lieu et place du
    <acronym>DSLAM</acronym>.</para>
    </listitem>
    <listitem>
    <para>Fournir une connectivité de niveau 2 à travers des réseaux Ethernet ou ATM
    sur lesquels les sessions <acronym>PPP</acronym> sont établies. Cette
    fonction est bien assurée par l'interface <option>eth1</option> du routeur
    <systemitem>Hub</systemitem>.</para>
    </listitem>
    <listitem>
    <para>Faire respecter les politiques de qualité de service
    (<acronym>QoS</acronym>). Cette fonction n'est pas traitée ici.</para>
    </listitem>
    <listitem>
    <para>Fournir une connectivité de niveau 3 et un routage des paquets
    <acronym>IP</acronym> vers le fournisseur d'accès (et|ou)
    l'Internet. Cette fonction est aussi assurée par le routeur
    <systemitem>Hub</systemitem>.</para>
    </listitem>
  </itemizedlist>

  <para>Comme cette liste correspond bien au rôle assigné au routeur
  <systemitem>Hub</systemitem> on peut passer à la configuration de la
  nouvelle interface <acronym>WAN</acronym>. On commence par s'intéresser à la
  liste des paquets Debian utiles. On détaille ensuite les fichiers de
  configuration correspondants.</para>

<screen><prompt>$</prompt> aptitude search ~ippp
i A ppp         - Point-to-Point Protocol (PPP) - daemon
i   pppoe	- PPP over Ethernet driver</screen>

  <para>Le paquet <systemitem>pppoe</systemitem> contient l'outil
  <application>pppoe-server</application> qui permet de gérer le dialogue de
  gestion de session du protocole. Les outils fournis avec ce paquet sont une
  implémentation complète du protocole <acronym>PPPoE</acronym> dans l'espace
  utilisateur.</para>

<screen><prompt>$</prompt> dpkg -S `which pppoe-server`
pppoe: /usr/sbin/pppoe-server</screen>

  <para>Il est tout à fait possible d'utiliser cet outil directement à partir
  de la ligne de commande. Dans le cas présent, on souhaite retrouver la
  configuration d'une exécution à l'autre des instances de machines virtuelles.
  On essaie donc de paramétrer le serveur <acronym>PPPoE</acronym> dans les
  fichiers de configuration usuels de la distribution. Voici une liste des
  fichiers de configuration qui permettent de lancer le service.</para>

  <itemizedlist>
    <listitem>
    <para>Le fichier <filename>/etc/network/interfaces</filename> :</para>

<screen>&hub-interfaces;</screen>

    <para>La méthode de configuration de l'interface <option>eth1</option> est
    dite manuelle. Avec cette méthode aucun paramètre n'est requis. On donne
    deux instructions. On active l'interface au niveau liaison (couche 2) et on
    lance l'outil <application>pppoe-server</application> avec cette même
    interface comme paramètre.</para>
    </listitem>
    <listitem>
    <para>Le fichier <filename>/etc/ppp/pppoe-server-options</filename> :</para>

<screen>&pppoe-server-options;</screen>

    <para>La présence de ce fichier est obligatoire pour le fonctionnement de
    l'outil <application>pppoe-server</application>. Dans le cas présent, on se
    utilise le jeu d'options suivant extrait des pages de manuels du démon
    <systemitem>pppd</systemitem>.</para>

    <itemizedlist>
    <listitem>
    <para><option>debug</option> : affichage des étapes d'établissement de
    session dans les journaux système.</para>
    </listitem>
    <listitem>
    <para><option>login</option> : référence de compte utilisateur à utiliser
    lors de l'authentification du routeur <systemitem>spoke</systemitem>. Cette
    option implique que le compte utilisateur existe sur le système et qu'il
    soit présent dans le fichier
    <filename>/etc/ppp/chap-secrets</filename>.</para>
    </listitem>
    <listitem>
    <para><option>require-chap</option> : impose au routeur
    <systemitem>spoke</systemitem> une authentification via le protocole
    <acronym>CHAP</acronym> (<wordasword>Challenge Handshake Authentication
    Protocol</wordasword>).</para>
    </listitem>
    <listitem>
    <para><option>nodefaultroute</option> : préserve la route par défaut (accès
    Internet) du routeur <systemitem>hub</systemitem>.</para>
    </listitem>
	<listitem>
	<para><option>ms-dns</option> : publie l'adresse <acronym>IPv4</acronym> du
	serveur <acronym>DNS</acronym> à utiliser.</para>
	</listitem>
    <listitem>
    <para><option>+ipv6</option> : active les protocoles
    <acronym>IPv6CP</acronym> et <acronym>IPv6</acronym>.</para>
    </listitem>
    </itemizedlist>
    </listitem>
    <listitem>
    <para>Le fichier <filename>/etc/ppp/chap-secrets</filename> :</para>

<screen># Secrets for authentication using CHAP
# client        server  secret                  IP addresses
"hub"           *       "5up3r53cr3t"           *
"spoke"         *       "5up3r53cr3t"           *</screen>

    <para>Comme l'option <option>login</option> impose l'existence d'un compte
    utilisateur pour référencer la ligne du fichier
    <filename>chap-secrets</filename>, le moyen le plus simple est de créer un
    compte local sur le routeur <systemitem>hub</systemitem>.</para>

<screen><prompt>#</prompt> adduser --disabled-login spoke</screen>
	</listitem>
	<listitem>
	<para>Le fichier <filename>/etc/ppp/ip-range</filename> :</para>

<screen>203.0.113.10-100</screen>

	<para>Ce fichier définit la liste des adresses <acronym>IPv4</acronym> que
	le démon peut délivrer en fonction des demandes de connexion
	<acronym>PPP</acronym>.</para>
	</listitem>
  </itemizedlist>

  <para>Une fois la session <acronym>PPPoE</acronym> établie, le seul travail
  effectué par l'outil <application>pppoe-server</application> consiste à
  lancer le démon <application>pppd</application> qui se charge de gérer ses
  propres transactions aux deux niveaux <acronym>LCP</acronym> et
  <acronym>NCP</acronym>.</para>
  </section>

  <section xml:id='pppoe.config.spoke'>
    <title>Le routeur d'accès Spoke</title>

  <para>La configuration côté routeur d'accès ne présente qu'une seule
  spécificité : l'appel au greffon <function>pppoe</function>. Comme dans
  le cas précédent, on commence par le contrôle du paquet
  <systemitem>ppp</systemitem> et on poursuit avec les fichiers de
  configuration.</para>

<screen><prompt>$</prompt> aptitude search ~ippp
i   ppp       - protocole point à point (PPP) - démon</screen>

  <para>Le paquet <systemitem>ppp</systemitem>, en plus du code nécessaire à la
  gestion du dialogue <acronym>PPP</acronym>, contient un greffon
  <function>pppoe</function>. Ce greffon permet l'utilisation du code
  <acronym>PPPoE</acronym> fourni avec le noyau Linux.</para>

  <para>Comme avec l'autre routeur, il est possible d'exécuter le démon
  <acronym>PPP</acronym> avec l'ensemble de ses paramètres directement à la
  ligne de commande. On suit ici le même principe que pour le routeur
  <systemitem>Hub</systemitem> : une configuration sauvegardée dans les
  fichiers de configuration du système.</para>

  <itemizedlist>
    <listitem>
    <para>Le fichier <filename>/etc/network/interfaces</filename> :</para>

<screen>&spoke-interfaces;</screen>

    <para>La définition de l'interface <option>ppp0</option> utilise la méthode
    <option>ppp</option>. Avec cette méthode, on peut utiliser la directive
    <option>provider</option> qui permet d'automatiser le lancement du démon
    <acronym>PPP</acronym> avec les paramètres spécifiés dans le fichier
    <filename>dsl-provider</filename>. Comme avec l'autre routeur, on fait
    précéder le lancement du démon par l'activation de l'interface au niveau
    liaison (couche 2).</para>

    <para>Le fichier présenté est directement inspiré de la page du wiki
    <citetitle>Debian</citetitle> &url.pppoe-debian-wiki;</para>
    </listitem>
    <listitem>
    <para>Le fichier <filename>/etc/ppp/peers/dsl-provider</filename> :</para>

<screen>&spoke-dsl-provider;</screen>

    <para>C'est à ce niveau que l'on trouve l'appel au greffon
    <acronym>PPPoE</acronym>. Sa fonction est essentiellement l'utilisation de
    l'interface Ethernet <option>eth1</option> en lieu et place d'une interface
    «série» classique. Le fichier présenté est directement inspiré du modèle
    fourni avec la documentation du paquet <systemitem>ppp</systemitem> :
    <filename>/usr/share/doc/ppp/examples/peers-pppoe</filename>.</para>

    <para>Les options ajoutées : <option>debug</option> et
    <option>+ipv6</option>, sont relatives au niveau des détails présents dans
    les journaux systèmes et l'activation des protocoles associés à
    <acronym>IPv6</acronym>.</para>
    </listitem>
  </itemizedlist>
  </section>
</section>

<section xml:id='pppoe.tests'>
  <title>La séquence de tests</title>

  <para>Une fois que les configurations sont en place à chaque extrémité, il ne
  reste plus qu'à tester cette nouvelle liaison <acronym>WAN</acronym>
  virtuelle. Comme toute séquence de tests qui se respecte, on remonte les
  couches de la modélisation une à une.</para>

  <variablelist>
    <varlistentry>
    <term>Au niveau commutation de trame</term>
    <listitem>
    <para>On affiche la table des adresses <acronym>MAC</acronym> connues du
    commutateur <systemitem>wan-sw</systemitem> à partir de la console du
    système hôte.</para>

<screen><prompt>$</prompt> sudo ovs-appctl fdb/show wan-sw
 port  VLAN  MAC                Age
    1     0  de:ad:be:ef:00:01    9
    2     0  de:ad:be:ef:00:03    9</screen>
    
    <para>On retrouve bien les adresses <acronym>MAC</acronym> «fantaisistes»
    attribuées aux deux routeurs lors du lancement des machines
    virtuelles. Voir <xref linkend='vm-instances' />.</para>
    </listitem>
    </varlistentry>
    <varlistentry>
    <term>Au niveau du routeur Hub</term>
    <listitem>
    <itemizedlist>
    <listitem>
    <para>Les journaux système révèlent l'établissement de la session
    <acronym>PPPoE</acronym> suivie du lancement du démon
    <acronym>PPP</acronym> et des transactions <acronym>LCP</acronym> et
    <acronym>NCP</acronym> pour les deux protocoles de couche réseau
    <acronym>IPv4</acronym> et <acronym>IPv6</acronym>.</para>

<screen><?dbfo keep-together="auto" ?>hub pppoe-server[106]: Session 1 created for client de:ad:be:ef:00:03 (203.0.113.10) on eth1 using Service-Name ''
hub pppd[106]: pppd 2.4.6 started by etu, uid 0
hub pppd[106]: using channel 4
hub pppd[106]: Using interface ppp0
hub pppd[106]: Connect: ppp0 &lt;--> /dev/pts/1
hub pppd[106]: sent [LCP ConfReq id=0x1 &lt;auth chap MD5> &lt;magic 0xcd537d21>]
hub pppd[106]: rcvd [LCP ConfAck id=0x1 &lt;auth chap MD5> &lt;magic 0xcd537d21>]
hub pppd[106]: rcvd [LCP ConfReq id=0x1 &lt;mru 1492> &lt;magic 0xf9d3d6a1>]
hub pppd[106]: sent [LCP ConfAck id=0x1 &lt;mru 1492> &lt;magic 0xf9d3d6a1>]
hub pppd[106]: sent [LCP EchoReq id=0x0 magic=0xcd537d21]
hub pppd[106]: sent [CHAP Challenge id=0xad &lt;d3ea7672130fd1d22b91cfbe6e1355da>, name = "hub"]
hub pppd[106]: rcvd [LCP EchoReq id=0x0 magic=0xf9d3d6a1]
hub pppd[106]: sent [LCP EchoRep id=0x0 magic=0xcd537d21]
hub pppd[106]: rcvd [LCP EchoRep id=0x0 magic=0xf9d3d6a1]
hub pppd[106]: rcvd [CHAP Response id=0xad &lt;d66b72abdc872fdba648a68009be6514>, name = "spoke"]
hub pppd[106]: sent [CHAP Success id=0xad "Access granted"]
hub pppd[106]: Initializing PAM (2) for user spoke
hub pppd[106]: ---> PAM INIT Result = 0
hub pppd[106]: Attempting PAM account checks
hub pppd[106]: PAM Account OK for spoke
hub pppd[106]: PAM Session opened for user spoke
hub pppd[106]: user spoke logged in on tty  intf ppp0
hub pppd[106]: local  LL address fe80::5c3a:77a1:aad1:a619
hub pppd[106]: remote LL address fe80::b474:5671:fc2c:ddd8
hub pppd[106]: local  IP address 203.0.113.1
hub pppd[106]: remote IP address 203.0.113.10</screen>
    </listitem>
    <listitem>
    <para>Une entrée de la table de routage a bien été définie en fonction des
    éléments donnés ci-dessus.</para>

<screen><prompt>#</prompt> ip route ls
default via 192.0.2.1 dev eth0 
192.0.2.0/26 dev eth0  proto kernel  scope link  src 192.0.2.10 
203.0.113.10 <emphasis>dev ppp0</emphasis>  proto kernel  scope link  src 203.0.113.1</screen>

	<para>Côté <acronym>IPv6</acronym>, l'activation de l'interface
	<option>ppp0</option> a bien été prise en compte.</para>

<screen><prompt>#</prompt> ip -6 route ls dev ppp0
fe80::/10  metric 1  pref medium
fe80::/10  proto kernel  metric 256  pref medium</screen>
    </listitem>
    <listitem>
    <para>Pour identifier la liste des processus associés au démon
    <systemitem>pppoe-server</systemitem>, on peut utiliser une commande du
    type suivant.</para>

<screen><prompt>#</prompt> pstree -p $(pidof pppoe-server)
pppoe-server(10628)───pppd(10692)───sh(10693)───pppoe(10695)</screen>
    
	<para>Un autre affichage donne la liste des arguments associés aux
	démons. Le lancement du démon <systemitem>pppd</systemitem> via
	<systemitem>pppoe-server</systemitem> impose une liste de paramètres autres
	que ceux définis dans le fichier
	<filename>/etc/ppp/pppoe-server-options</filename>.</para>

<screen><prompt>#</prompt> ps -fwwp $(pgrep -d, ppp)
UID        PID  PPID  C STIME TTY          TIME CMD
root     10628     1  0 oct.10 ?       00:00:00 pppoe-server -I eth1 -C BRAS -L 203.0.113.1 -p /etc/ppp/ip-range
root     10692 10628  0 oct.10 ?       00:00:00 pppd pty /usr/sbin/pppoe -n -I eth1 -e 1:de:ad:be:ef:00:03 -S '' \
	file /etc/ppp/pppoe-server-options \
	203.0.113.1:203.0.113.10 \
	nodetach \
	noaccomp \
	nobsdcomp \
	nodeflate \
	nopcomp \
	novj \
	novjccomp \
	default-asyncmap
nobody   10695 10693  0 oct.10 ?       00:00:00 /usr/sbin/pppoe -n -I eth1 -e 1:de:ad:be:ef:00:03 -S</screen>
    </listitem>
    </itemizedlist>
    </listitem>
    </varlistentry>
    <varlistentry>
    <term>Au niveau du routeur Spoke</term>
    <listitem>
    <itemizedlist>
    <listitem>
    <para>Comme avec l'autre extrémité du lien point à point, les journaux
    système montrent les phases de l'établissement de la session
    <acronym>PPPoE</acronym> avant le dialogue <acronym>PPP</acronym>. En
    revanche, c'est le code fourni par le noyau Linux
    (<wordasword>kernel</wordasword>) qui est utilisé cette fois-ci.</para>

<screen><?dbfo keep-together="auto" ?>spoke pppd[2211]: Plugin rp-pppoe.so loaded.
spoke pppd[2218]: pppd 2.4.6 started by etu, uid 0
spoke pppd[2218]: Failed to disconnect PPPoE socket: 114 Operation already in progress
spoke pppd[2218]: Send PPPOE Discovery V1T1 PADI session 0x0 length 12
spoke pppd[2218]:  dst ff:ff:ff:ff:ff:ff  src de:ad:be:ef:00:03
spoke pppd[2218]:  [service-name] [host-uniq  aa 08 00 00]
spoke pppd[2218]: Recv PPPOE Discovery V1T1 PADO session 0x0 length 44
spoke pppd[2218]:  dst de:ad:be:ef:00:03  src de:ad:be:ef:00:01
spoke pppd[2218]:  [AC-name BRAS] [service-name] [AC-cookie  4a f2 52 4d 60 60 27 c6 00 63 97 78 35 3b 93 03 1f 1f 00 00] [host-uniq  aa 08 00 00]
spoke pppd[2218]: Send PPPOE Discovery V1T1 PADR session 0x0 length 36
spoke pppd[2218]:  dst de:ad:be:ef:00:01  src de:ad:be:ef:00:03
spoke pppd[2218]:  [service-name] [host-uniq  aa 08 00 00] [AC-cookie  4a f2 52 4d 60 60 27 c6 00 63 97 78 35 3b 93 03 1f 1f 00 00]
spoke pppd[2218]: Recv PPPOE Discovery V1T1 PADS session 0x4 length 12
spoke pppd[2218]:  dst de:ad:be:ef:00:03  src de:ad:be:ef:00:01
spoke pppd[2218]:  [service-name] [host-uniq  aa 08 00 00]
spoke pppd[2218]: PADS: Service-Name: ''
spoke pppd[2218]: PPP session is 4
spoke pppd[2218]: Connected to de:ad:be:ef:00:01 via interface eth1
spoke pppd[2218]: using channel 4
spoke pppd[2218]: Using interface ppp0
spoke pppd[2218]: Connect: ppp0 &lt;--> eth1
spoke pppd[2218]: sent [LCP ConfReq id=0x4 &lt;mru 1492> &lt;magic 0xf4de2406>]
spoke pppd[5046]: rcvd [LCP ConfAck id=0x1 &lt;mru 1492> &lt;magic 0xf9d3d6a1>]
spoke pppd[5046]: sent [LCP EchoReq id=0x0 magic=0xf9d3d6a1]
spoke pppd[5046]: rcvd [LCP EchoReq id=0x0 magic=0xcd537d21]
spoke pppd[5046]: sent [LCP EchoRep id=0x0 magic=0xf9d3d6a1]
spoke pppd[5046]: rcvd [CHAP Challenge id=0xad &lt;d3ea7672130fd1d22b91cfbe6e1355da>, name = "hub"]
spoke pppd[5046]: sent [CHAP Response id=0xad &lt;d66b72abdc872fdba648a68009be6514>, name = "spoke"]
spoke pppd[5046]: rcvd [LCP EchoRep id=0x0 magic=0xcd537d21]
spoke pppd[5046]: rcvd [CHAP Success id=0xad "Access granted"]
spoke pppd[5046]: CHAP authentication succeeded: Access granted
spoke pppd[5046]: CHAP authentication succeeded
spoke pppd[5046]: peer from calling number DE:AD:BE:EF:00:01 authorized
spoke pppd[5046]: sent [IPCP ConfReq id=0x1 &lt;addr 0.0.0.0> &lt;ms-dns1 0.0.0.0> &lt;ms-dns2 0.0.0.0>]
spoke pppd[5046]: sent [IPV6CP ConfReq id=0x1 &lt;addr fe80::b474:5671:fc2c:ddd8>]
spoke pppd[5046]: rcvd [IPCP ConfReq id=0x1 &lt;addr 203.0.113.1>]
spoke pppd[5046]: sent [IPCP ConfAck id=0x1 &lt;addr 203.0.113.1>]
spoke pppd[5046]: rcvd [IPV6CP ConfReq id=0x1 &lt;addr fe80::5c3a:77a1:aad1:a619>]
spoke pppd[5046]: sent [IPV6CP ConfAck id=0x1 &lt;addr fe80::5c3a:77a1:aad1:a619>]
spoke pppd[5046]: rcvd [IPCP ConfRej id=0x1 &lt;ms-dns1 0.0.0.0> &lt;ms-dns2 0.0.0.0>]
spoke pppd[5046]: sent [IPCP ConfReq id=0x2 &lt;addr 0.0.0.0>]
spoke pppd[5046]: rcvd [IPV6CP ConfAck id=0x1 &lt;addr fe80::b474:5671:fc2c:ddd8>]
spoke pppd[5046]: local  LL address fe80::b474:5671:fc2c:ddd8
spoke pppd[5046]: remote LL address fe80::5c3a:77a1:aad1:a619
spoke pppd[5046]: Script /etc/ppp/ipv6-up started (pid 5112)
spoke pppd[5046]: rcvd [IPCP ConfNak id=0x2 &lt;addr 203.0.113.10>]
spoke pppd[5046]: sent [IPCP ConfReq id=0x3 &lt;addr 203.0.113.10>]
spoke pppd[5046]: rcvd [IPCP ConfAck id=0x3 &lt;addr 203.0.113.10>]
spoke pppd[5046]: <emphasis>not replacing default route to eth0 [192.0.2.1]</emphasis>
spoke pppd[5046]: local  IP address 203.0.113.10
spoke pppd[5046]: remote IP address 203.0.113.1
spoke pppd[5046]: Script /etc/ppp/ip-up started (pid 5114)
spoke pppd[5046]: Script /etc/ppp/ipv6-up finished (pid 5112), status = 0x0
spoke pppd[5046]: Script /etc/ppp/ip-up finished (pid 5114), status = 0x0</screen>
    </listitem>
    <listitem>
	<para>On retrouve une entrée symétrique dans la table de routage. Il faut
	cependant noter que la route par défaut <acronym>IPv4</acronym> n'a pas été
	remplacée par l'activation du lien <acronym>WAN</acronym>. C'est un
	problème sur lequel il faut revenir par la suite.</para>

<screen><prompt>#</prompt> ip route ls
default via 192.0.2.1 dev eth0 
192.0.2.0/26 dev eth0  proto kernel  scope link  src 192.0.2.11 
203.0.113.1 <emphasis>dev ppp0</emphasis>  proto kernel  scope link  src 203.0.113.10</screen>

	<para>Côté <acronym>IPv6</acronym>, l'activation de l'interface
	<option>ppp0</option> a bien été prise en compte.</para>

<screen><prompt>#</prompt> ip -6 route ls dev ppp0
fe80::/10  metric 1  pref medium
fe80::/10  proto kernel  metric 256  pref medium</screen>
    </listitem>
    <listitem>
    <para>Comme le noyau fournit l'essentiel du code, un seul processus est
    présent en espace utilisateur.</para>

<screen><prompt>#</prompt> ps -fwwp $(pgrep -d, ppp)
UID        PID  PPID  C STIME TTY          TIME CMD
root      5046     1  0 oct.10 ?       00:00:00 /usr/sbin/pppd call dsl-provider</screen>
    </listitem>
    </itemizedlist>
    </listitem>
    </varlistentry>
    <varlistentry>
    <term>Au niveau réseau</term>
    <listitem>
	<para>Les tests traditionnels <acronym>ICMP</acronym> et
	<acronym>ICMP6</acronym> confirment que les deux routeurs peuvent échanger
	des paquets. Depuis le routeur <systemitem>spoke</systemitem>, on lance les
	commandes suivantes.</para>

<screen><prompt>$</prompt> ping -c2 203.0.113.1
PING 203.0.113.1 (203.0.113.1) 56(84) bytes of data.
64 bytes from 203.0.113.1: icmp_seq=1 ttl=64 time=1.12 ms
64 bytes from 203.0.113.1: icmp_seq=2 ttl=64 time=0.845 ms

--- 203.0.113.1 ping statistics ---
2 packets transmitted, 2 received, 0% packet loss, time 1001ms
rtt min/avg/max/mdev = 0.845/0.987/1.129/0.142 ms</screen>

<screen><prompt>$</prompt> ping6 -c2 fe80::5c3a:77a1:aad1:a619%ppp0
PING fe80::5c3a:77a1:aad1:a619%ppp0(fe80::5c3a:77a1:aad1:a619) 56 data bytes
64 bytes from fe80::5c3a:77a1:aad1:a619: icmp_seq=1 ttl=64 time=1.28 ms
64 bytes from fe80::5c3a:77a1:aad1:a619: icmp_seq=2 ttl=64 time=0.808 ms

--- fe80::5c3a:77a1:aad1:a619%ppp0 ping statistics ---
2 packets transmitted, 2 received, 0% packet loss, time 1001ms
rtt min/avg/max/mdev = 0.808/1.044/1.281/0.238 ms</screen>
    </listitem>
    </varlistentry>
  </variablelist>
</section>

<section xml:id='pppoe.routing'>
	<title>Routage via le lien WAN</title>

	<para>Après avoir testé les échanges de paquets sur le lien
	<acronym>WAN</acronym> dans la section précédente, on se préoccupe maintenant
	du routage depuis et vers le routeur <systemitem>spoke</systemitem> via ce
	même lien.</para>

	<bridgehead xml:id='pppoe.routing.disable-spoke-lan-autconfig'
	renderas='sect3'>Désactivation de la configuration de l'interface LAN du
	routeur Spoke</bridgehead>

	<para>Dans les sections précédentes, l'interface <option>eth0</option> du
	routeur <systemitem>spoke</systemitem> a servi à communiquer avec
	l'Internet. On doit donc désactiver la configuration automatique de cette
	interface aussi bien en <acronym>IPv4</acronym> qu'en
	<acronym>IPv6</acronym>.</para>

	<para>Voici un extrait du fichier
	<filename>/etc/network/interfaces</filename> du routeur
	<systemitem>spoke</systemitem> pour l'interface <option>eth0</option> sans
	configuration automatique.</para>

<screen>allow-hotplug eth0
iface eth0 inet manual
	up echo 0 > /proc/sys/net/ipv6/conf/$IFACE/forwarding
	up echo 0 > /proc/sys/net/ipv6/conf/$IFACE/accept_ra
	up ip link set dev $IFACE up
	down ip link set dev $IFACE down</screen>

	<para>Cette solution permet de conserver un accès depuis le système hôte
	via l'adresse <acronym>IPv6</acronym> de lien local.</para>

	<para>Pour forcer l'application de la route par défaut via le protocole
	<acronym>PPP</acronym>, on utilise les scripts système de manipulation des
	interfaces.</para>

<screen><prompt>#</prompt> ifdown dsl-provider
<prompt>#</prompt> ifup dsl-provider</screen>

	<para>La table de routage <acronym>IPv4</acronym> devient :</para>

<screen><prompt>#</prompt> ip route ls
default dev ppp0  scope link
203.0.113.1 dev ppp0  proto kernel  scope link  src 203.0.113.11</screen>

	<para>La table de routage <acronym>IPv6</acronym> reste inchangée tant que
	le routeur <systemitem>hub</systemitem> ne dispose pas d'outil d'annonce
	<acronym>SLAAC</acronym>.</para>

	<bridgehead xml:id='pppoe.routing.enable-hub-routing'
	renderas='sect3'>Activation du routage IPv4 &amp; IPv6 sur le routeur
	Hub</bridgehead>

	<para>Si on respecte la règle de configuration adoptée dans les sections
	précédentes, on utilise les fichiers système pour configurer le routage.
	Ici, c'est le fichier <filename>/etc/sysctl.conf</filename> qui nous
	intéresse. Voici la liste des options de configuration utilisées. Dans la
	copie d'écran ci-dessous, on a supprimé les commentaires et les lignes
	vides.</para>

<screen><prompt>#</prompt> egrep -v '(^#|^$)' /etc/sysctl.conf
net.ipv4.conf.default.rp_filter=1
net.ipv4.conf.all.rp_filter=1
net.ipv4.ip_forward=1
net.ipv6.conf.all.forwarding=1
net.ipv4.conf.all.accept_redirects = 0
net.ipv6.conf.all.accept_redirects = 0
net.ipv4.conf.all.log_martians = 1</screen>

	<para>Ces options sont appliquées à l'aide de la commande
	<userinput><prompt>#</prompt> <command>sysctl</command>
	-p</userinput>.</para>

	<bridgehead xml:id='pppoe.routing.enable-hub-ipv4-snat'
	renderas='sect3'>Traduction d'adresses IPv4 sur le routeur Hub</bridgehead>

	<para>Le démon <systemitem>pppd</systemitem> du routeur
	<systemitem>hub</systemitem> délivre des adresses <acronym>IPv4</acronym>
	appartenant au préfixe <systemitem
	class='ipaddress'>203.0.113.0/24</systemitem>. Ce préfixe de la famille
	TESTNET est non routable sur l'Internet. On a donc recours à la traduction
	d'adresses sources pour que le trafic du routeur
	<systemitem>spoke</systemitem> soit correctement routé.</para>

	<para>On utilise le paquet <application>ipatbles-persistent</application>
	pour préserver les règles de traduction d'adresses d'un redémarrage système
	à l'autre. Le fichier de sauvegarde est :
	<filename>/etc/iptables/rules.v4</filename>.</para>

<screen>&hub-rules.v4;</screen>

	<para>Il suffit de consulter les compteurs associés aux règles de filtrage
	pour valider leur fonctionnement.</para> 

<screen><prompt>#</prompt> iptables -t nat -vL  POSTROUTING
Chain POSTROUTING (policy ACCEPT 0 packets, 0 bytes)
 pkts bytes target     prot opt in     out     source     destination         
   <emphasis>30  1800</emphasis> TCPMSS     tcp  --  any    eth0    anywhere   anywhere  tcp flags:FIN,SYN,RST,ACK/SYN tcpmss match 1400:1536 TCPMSS clamp to PMTU
  <emphasis>256 26578</emphasis> MASQUERADE all  --  any    eth0    anywhere   anywhere</screen>

	<note xml:id='pppoe.routing.enable-hub-ipv4-snat.tcpmss'>
	<para>L'utilisation du module <option>TCPMSS</option> joue un rôle
	important dans la gestion de l'encapsulation entre les couches transport,
	réseau et liaison. En effet, le dialogue <acronym>PPPoE</acronym> consomme
	8 octets de chaque trame. La quantité maximale d'octets qu'une trame peut
	encapsuler passe de 1500 à 1492. Voir la page &url.mtu;.</para>

	<para>Le protocole <acronym>TCP</acronym> de la couche transport négocie,
	lors de l'établissement d'une connexion, la quantité maximale d'octets que
	peut contenir un segment. Comme la couche transport ne sait rien de
	l'encapsulation en couche liaison, la règle de filtrage qui fait appel au
	module <option>TCPMSS</option> est là pour forcer l'adaptation au contexte
	<acronym>PPPoE</acronym> du paramètre &url.mss; lors de l'établissement des
	connexions <acronym>TCP</acronym>.</para>
	</note>

	<bridgehead xml:id='pppoe.routing.ipv6-addressing'
	renderas='sect3'>Adresses IPv6 ULA</bridgehead>

	<para>Avec <acronym>IPv6</acronym>, les adresses dites &url.ipv6-ula; sont
	l'équivalent des adresses privées <acronym>IPv4</acronym>. Ce document
	constitue une bonne occasion d'illustrer leur utilisation.</para>

	<para>Par définition, le préfixe réseau à utiliser est le : <systemitem
	class='ipaddress'>fd00::/8</systemitem>. À ce préfixe il faut adjoindre 40
	bits aléatoires pour obtenir un préfixe <systemitem
	class='ipaddress'>/48</systemitem> qui constitue la base du plan
	d'adressage.</para>

	<para>On commence donc par générer une chaine de 40 bits aléatoires notée
	en hexadécimal.</para>

<screen><prompt>$</prompt> openssl rand -hex 5
271684e79b</screen>

	<para>Le préfixe réseau obtenu est le : <systemitem
	class='ipaddress'>fd27:1684:e79b::/48</systemitem>. Pour adresser les
	différents routeurs <systemitem>spoke</systemitem> potentiels, l'espace
	d'adressage est ainsi de 2^16 liens <acronym>WAN</acronym> possibles. Les
	16 bits réseau sont obtenus en faisant la différence entre 64 (le nombre de
	bits de la partie hôte) et 48 (le nombre de bits de la partie
	réseau). Puisque la maquette utilisée ne comprend qu'un seul lien
	<acronym>WAN</acronym>, on utilise le premier préfixe réseau disponible
	pour la suite des manipulations : <systemitem
	class='ipaddress'>fd27:1684:e79b::/64</systemitem>.</para>

	<para>Une fois le plan d'adressage défini, on passe à la configuration du
	routeur <systemitem>hub</systemitem>.</para>

	<itemizedlist>
	<listitem>
		<para>Affectation d'une adresse <acronym>IPv6</acronym> à l'interface
		<option>ppp0</option>.</para>

<screen><prompt>#</prompt> ip -6 addr add fd27:1684:e79b::1/64 dev ppp0</screen>
	</listitem>
	<listitem>
		<para>Configuration du démon <application>radvd</application> pour
		annoncer le préfixe réseau ainsi que le
		<wordasword>resolver</wordasword> <acronym>DNS</acronym> en direction
		du routeur <systemitem>spoke</systemitem>.</para>

<screen>&hub-radvd.conf;</screen>
	</listitem>
	</itemizedlist>

	<para>Ces deux étapes de configuration doivent normalement être réalisées
	lors de l'établissement du lien <acronym>WAN</acronym> via le démon
	<application>pppd</application>. On peut donc placer deux scripts dans le
	répertoire <filename class='directory'>/etc/ppp/ipv6-up.d/</filename>.
	Ainsi, dès que l'interface <option>pppX</option> est activée, on effectue
	automatiquement les opérations de configuration spécifiques à IPv6.</para>

	<itemizedlist>
	<listitem>
		<para>Ajout automatique de l'adresse <acronym>IPv6</acronym> de la
		famille &url.ipv6-ula; à l'interface <acronym>PPP</acronym>. Voici le
		script <filename>/etc/ppp/ipv6-up.d/ipv6-ula-address</filename></para>

		<programlisting><?dbfo keep-together="auto" ?><xi:include
		href='scripts/hub-ipv6-ula-address' parse='text'
		xmlns:xi='http://www.w3.org/2001/XInclude'/></programlisting>
	</listitem>
	<listitem>
		<para>Le démon <application>radvd</application> est conçu pour réagir
		dynamiquement aux activations/désactivations d'interfaces et au
		modifications de son fichier de configuration :
		<filename>/etc/radvd.conf</filename>. Voici le script qui permet de
		compléter dynamiquement la configuration en fonction de l'activation
		d'une interface <acronym>PPP</acronym> :
		<filename>/etc/ppp/ipv6-up.d/radvd-conf-update</filename>.</para>

		<programlisting><?dbfo keep-together="auto" ?><xi:include
		href='scripts/hub-radvd-conf-update' parse='text'
		xmlns:xi='http://www.w3.org/2001/XInclude'/></programlisting>
	</listitem>
	</itemizedlist>

	<bridgehead xml:id='pppoe.routing.enable-hub-ipv6-snat'
	renderas='sect3'>Traduction d'adresses IPv6 sur le routeur Hub</bridgehead>

	<para>On reprend ici la même démarche que pour le protocole
	<acronym>IPv4</acronym> avec l'utilisation du paquet
	<application>ipatbles-persistent</application> et la sauvegarde des règles
	de filtrage dans le fichier
	<filename>/etc/iptables/rules.v6</filename>.</para>

<screen>&hub-rules.v6;</screen>

	<para>Comme avec le routage des paquets <acronym>IPv4</acronym>, les
	compteurs servent à qualifier l'utilisation des règles de filtrage.</para>

	<itemizedlist>
	<listitem>
		<para>Sur le routeur <systemitem>spoke</systemitem>, on lance le
		chargement d'une page web.</para>

<screen><prompt>$</prompt> wget -q -6 -O /dev/null http://inetdoc.net</screen>
	</listitem>
	<listitem>
		<para>Sur le routeur <systemitem>hub</systemitem>, on relève les
		compteurs des règles de la table <option>nat</option>.</para>

<screen><prompt>#</prompt> ip6tables -t nat -vnL POSTROUTING
Chain POSTROUTING (policy ACCEPT 13 packets, 2149 bytes)
 pkts bytes target     prot opt in     out     source    destination
    <emphasis>8   640</emphasis> TCPMSS     tcp      *      eth0    ::/0      ::/0     tcp flags:0x17/0x02 tcpmss match 1400:1536 TCPMSS clamp to PMTU
   <emphasis>14  1312</emphasis> SNAT       all      *      eth0    fd00::/8  ::/0     to:2001:db8:fe00:8175:b8ad:ff:feca:fe00</screen>
	</listitem>
	</itemizedlist>

	<note>
	<para>Avec le protocole <acronym>IPv6</acronym>, l'emploi du module
	<option>TCPMSS</option> est aussi utile. Voir la <xref
	linkend='pppoe.routing.enable-hub-ipv4-snat.tcpmss' /> sur les règles de
	filtrage <acronym>IPv4</acronym>.</para>
	</note>
</section>

<section xml:id='pppoe.conclusion'>
	<title>Pour conclure</title>

	<para>Voilà ! On dispose maintenant d'un modèle de liaison
	<acronym>WAN</acronym> point à point. Il ne reste plus qu'à l'exploiter avec
	les supports de travaux pratiques tels que la mise en œuvre de la
	&url.interco.ppp;, le &url.interco.netfilter; ou l'&url.interco.cs;.</para>
</section>
</article>
