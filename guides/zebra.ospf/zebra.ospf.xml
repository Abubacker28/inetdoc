<?xml version='1.0'?>
<!DOCTYPE article PUBLIC "-//OASIS//DTD DocBook XML V5.0//EN"
        "/usr/share/xml/docbook/schema/dtd/5.0/docbook.dtd" [

<!ENTITY url.zebra
  '<link xmlns="http://docbook.org/ns/docbook" xlink:href="http://www.zebra.org/">
  <citetitle>Zebra</citetitle></link>'>

<!ENTITY url.quagga
  '<link xmlns="http://docbook.org/ns/docbook" xlink:href="http://www.quagga.net/">
  <citetitle>Quagga</citetitle></link>'>

<!ENTITY url.linuxmag
  '<link xmlns="http://docbook.org/ns/docbook" xlink:href="http://www.linuxmag-france.org/">
  <citetitle>Linux Magazine</citetitle></link>'>

<!ENTITY url.misc
  '<link xmlns="http://docbook.org/ns/docbook" xlink:href="http://www.miscmag.com/">
  <citetitle>Multi-system &amp; Internet Security
  Cookbook</citetitle> (<acronym>MISC</acronym>)</link>'>

<!ENTITY url.pmassol
  '<link xmlns="http://docbook.org/ns/docbook" xlink:href="http://www.pmassol.net/">
  <citetitle>Pacôme Massol</citetitle></link>'>

<!ENTITY url.pmassol.ospf
  '<link xmlns="http://docbook.org/ns/docbook" xlink:href="http://pmassol.net/lm/ospf.html">
  <citetitle>Zebra et OSPF</citetitle></link>'>

<!ENTITY url.pmassol.zebra
  '<link xmlns="http://docbook.org/ns/docbook" xlink:href="http://pmassol.net/zebra.html">
  <citetitle>GNU Zebra</citetitle></link>'>

<!ENTITY url.zebra.statique
  '<link xmlns="http://docbook.org/ns/docbook" xlink:href="http://www.linux-france.org/prj/inetdoc/guides/zebra.statique/">
  <citetitle>1ère partie, routage statique</citetitle></link>'>

<!ENTITY url.zebra.rip
  '<link xmlns="http://docbook.org/ns/docbook" xlink:href="http://www.linux-france.org/prj/inetdoc/guides/zebra.rip/">
  <citetitle>2ème partie, routage RIP</citetitle></link>'>

<!ENTITY url.ietf
  '<link xmlns="http://docbook.org/ns/docbook" xlink:href="http://ietf.org/">
  <citetitle>The Internet Engineering Task Force</citetitle></link>'>

<!ENTITY url.rfc2328
  '<link xmlns="http://docbook.org/ns/docbook" xlink:href="http://www.faqs.org/rfcs/rfc2328.html">
  <acronym>RFC2328</acronym></link>'>

<!ENTITY url.ospf.rfclist
  '<link xmlns="http://docbook.org/ns/docbook" xlink:href="http://tools.ietf.org/wg/ospf/">
  <citetitle>ospf RFC List</citetitle></link>'>

]>

<article xml:id="zebra.ospf" xml:lang="fr">
<info>
  <title>Initiation au routage, 3ème partie</title>

  <abstract>
    <para>Cet article est le troisième d'une série rédigée par Pacôme Massol
    sur l'utilisation d'un système GNU/Linux comme routeur. L'article a été
    publié dans le numéro 51 de <citetitle>Linux Magazine</citetitle> en Juin
    2003. La version publiée ici ne contient que quelques différences mineures
    sur la présentation et la configuration du logiciel.</para>
  </abstract>

  <authorgroup>
    <author>
      <personname>
      <firstname>Pacôme</firstname><surname>Massol</surname>
      </personname>
      <personblurb>
	<para>Article publié dans le n°51 de &url.linuxmag; - Juin
	2003</para>
      </personblurb>
      <affiliation>
        <address><email>pacome.massol(at)laposte.net</email></address>
      </affiliation>
    </author>
    <editor>
      <personname>
      <firstname>Philippe</firstname><surname>Latu</surname>
      </personname>
      <personblurb>
	<para>Responsable de la publication de cet article sur le site Linux
	France.</para>
      </personblurb>
      <affiliation>
        <orgname>Linux France</orgname>
        <address><email>philippe.latu(at)inetdoc.net</email></address>
      </affiliation>
    </editor>
  </authorgroup>

  <keywordset>
    <keyword>massol</keyword>
    <keyword>pacome</keyword>
    <keyword>reseau</keyword>
    <keyword>zebra</keyword>
    <keyword>cisco</keyword>
    <keyword>route</keyword>
    <keyword>router</keyword>
    <keyword>routeur</keyword>
    <keyword>routage</keyword>
    <keyword>ip</keyword>
    <keyword>ipv4</keyword>
    <keyword>ipv6</keyword>
    <keyword>rip</keyword>
    <keyword>ripd</keyword>
    <keyword>ospf</keyword>
    <keyword>ospfd</keyword>
    <keyword>bgp</keyword>
    <keyword>bgpd</keyword>
    <keyword>linux</keyword>
    <keyword>quagga</keyword>
  </keywordset>
</info>

<?custom-pagebreak?>
<sect1 xml:id="zebra.ospf.legal.meta">
  <title>Copyright et Licence</title>

  <literallayout class='monospaced'>
  Copyright (c) 2002-2005 Pacôme Massol
  Permission is granted to copy, distribute and/or modify this document
  under the terms of the GNU Free Documentation License, Version 1.2
  or any later version published by the Free Software Foundation;
  with no Invariant Sections, no Front-Cover Texts, and no Back-Cover
  Texts.  A copy of the license is included in the sect2 entitled "GNU
  Free Documentation License".
  </literallayout>

  <literallayout class='monospaced'>
  Copyright (c) 2002-2005 Pacôme Massol
  Permission est accordée de copier, distribuer et/ou modifier ce
  document selon les termes de la Licence de Documentation Libre GNU
  (GNU Free Documentation License), version 1.1 ou toute version
  ultérieure publiée par la Free Software Foundation ; sans
  Sections Invariables ; sans Texte de Première de Couverture, et
  sans Texte de Quatrième de Couverture. Une copie de
  la présente Licence est incluse dans la sect2 intitulée
  « Licence de Documentation Libre GNU ».
  </literallayout>

  <sect2>
    <title>Meta-information</title>
    <para>Cet article est écrit avec <link xlink:href="http://www.docbook.org">
    <citetitle>DocBook</citetitle></link> XML sur un système
    <link xlink:href="http://www.debian.org">
    <citetitle>Debian GNU/Linux</citetitle></link>.
    Il est disponible en version imprimable au format PDF :
    <link xlink:href="http://www.inetdoc.net/pdf/__printbasename__.pdf">
    <literal>__printbasename__</literal></link>.</para>

    <para>Toutes les commandes utilisées dans ce document ne sont pas
    spécifiques à une version particulière des systèmes UNIX ou GNU/Linux.
    Comme la distribution <citetitle>Debian GNU/Linux</citetitle> est
    utilisée pour l'ensemble des supports du projet
    <citetitle>inetdoc.LiNUX</citetitle>, voici une liste des paquets
    contenant les commandes nécessaires :</para>
    <itemizedlist>
      <listitem>
      <para><application>net-tools</application> - The NET-3 networking
      toolkit</para>
      </listitem>
      <listitem>
      <para><application>quagga</application> - Unofficial successor of the
      Zebra BGP/OSPF/RIP routing daemon</para>
      </listitem>
      <listitem>
      <para><application>quagga-doc</application> - info files for
      quagga</para>
      </listitem>
      <listitem>
      <para><application>zebra</application> &amp;
      <application>zebra-doc</application> - anciens paquets non mis à jour
      depuis 2003.</para> 
      </listitem>
    </itemizedlist>

    <para>Les copies d'écran présentées ici correspondent à la publication
    initiale. Depuis, les versions de <application>Zebra</application> puis de
    <application>Quagga</application> ont évolué et l'affichage des
    informations de routage a été modifié. Cependant, ces modifications ne
    devraient pas gêner les lecteurs.</para>
  </sect2>
</sect1>

<sect1 xml:id='zebra.ospf.avant-propos'>
  <title>Avant-propos</title>

  <para>Ce document est la suite de deux articles publiés respectivement dans
  &url.linuxmag; numéros 42 de septembre et 43 d'octobre 2002. Étant donné que
  cela remonte déjà à quelques temps, un rapide résumé est peut-être nécessaire
  avant de passer au vif du sujet : le protocole de routage dynamique
  <acronym>OSPF</acronym> et sa mise en œuvre avec
  <application>Zebra</application>.</para>

  <sect2>
    <title>Résumé des épisodes précédents</title>

  <para>Le routeur est un élément essentiel dans l'aiguillage des paquets de
  données dans un inter-réseau. Pour chaque paquet reçu, il extrait le préfixe
  réseau de l'adresse IP de destination du paquet et le recherche dans une
  table qu'il possède en mémoire. Cette table de routage contient
  essentiellement une liste d'adresses réseau et, pour chacune, le moyen de
  l'atteindre, à savoir l'adresse d'un routeur immédiatement voisin et situé
  sur la route vers la destination. Si le routeur trouve dans cette table le
  préfixe réseau, il transmet le paquet sur le réseau du routeur voisin
  concerné. Ce processus sera renouvelé par le routeur voisin et ainsi de
  suite, de proche en proche le paquet sera orienté vers sa destination.</para>

  <para>Seulement voilà, il faut saisir les tables de routage ! Travail
  fastidieux pour les petits doigts agiles de l'administrateur lorsque les
  réseaux sont de grande taille. De plus, compte tenu de l'évolution du nombre
  de réseaux à interconnecter dans le cas d'internet, il est de toute façon
  devenu impossible de se cantonner au routage statique (souvenez-vous, dans le
  document &url.zebra.statique; nous nous sommes adonnés aux joies de la saisie
  de routes statiques avec <application>Zebra</application>).</para>

  <para>C'est pourquoi, le routage dynamique a été imaginé afin d'alléger la
  charge d'administration mais aussi pour réaliser des réseaux tolérants aux
  pannes d'un routeur ou d'une liaison. <acronym>RIP</acronym> est un bon
  exemple de protocole de routage dynamique (reportez-vous au document
  &url.zebra.rip; pour découvrir tous ses secrets). Les routeurs supportant
  <acronym>RIP</acronym> s'échangent périodiquement des informations sur les
  routes qu'ils possèdent (les fameux «vecteurs de distance»). Si une panne se
  produit, les routeurs immédiatement voisins notent que certaines routes sont
  devenues inaccessibles et propagent l'information aux autres. Mais hélas,
  <acronym>RIP</acronym> souffre de certaines limitations qui ont poussé l'IETF
  (&url.ietf;) à plancher sur un protocole plus robuste, plus efficace, plus
  paramétrable et supportant des réseaux de grande taille. Cette merveille
  s'appelle <acronym>OSPF</acronym> (<citetitle>Open Shortest Path
  First</citetitle>).</para>

  <para>Le fonctionnement de ce protocole est défini dans le document
  &url.rfc2328;. Les logiciels de <application>Zebra</application> et de son
  successeur <application>Quagga</application> supportent cette définition du
  protocole <acronym>OSPF</acronym>.</para>
  </sect2>
</sect1>

<sect1 xml:id='zebra.ospf.concepts'>
  <title>Les grands principes d'OSPF</title>

  <para><acronym>OSPF</acronym> est un protocole de routage dynamique défini
  par l'<acronym>IETF</acronym> à la fin des années 80. Il a fait l'objet d'un
  historique relativement complexe de RFCs (Voir &url.ospf.rfclist;). Ce
  protocole a deux caractéristiques essentielles :</para>

  <itemizedlist>
    <listitem>
    <para>Il est ouvert : c'est le sens du terme
    <wordasword>Open</wordasword> de <acronym>OSPF</acronym>. Son
    fonctionnement est connu de tous.</para>
    </listitem>
    <listitem>
    <para>Il utilise l'algorithme <acronym>SPF</acronym> pour
    <wordasword>Shortest Path First</wordasword>, plus connu sous le nom
    d'algorithme de Dijkstra, afin d'élire la meilleure route vers une
    destination donnée.</para>
    </listitem>
  </itemizedlist>

  <para>Examinons une topologie qui nous servira de support pour les
  explications :</para>

  <figure xml:id='spf1'>
    <title>Exemple de topologie</title>

  <mediaobject>
  <imageobject>
    <imagedata fileref='images/spf1.png' format='PNG' contentwidth='12cm'
    width='12.5cm'/>
  </imageobject>
  <caption>
    <para>Exemple de topologie</para>
  </caption>
  </mediaobject>
  </figure>

  <sect2 xml:id='zebra.ospf.concepts.cost'>
    <title>La notion de coût</title>

  <para>Supposons que du routeur R1 on cherche à atteindre le réseau
  192.168.1.0. Dans une telle situation, Le protocole <acronym>RIP</acronym>
  aurait élu la route passant par R5 puisque c'est la plus courte en termes de
  saut. Cependant, imaginez que les liens représentés sous forme d'éclairs
  soient «rapides» (de type FastEthernet à 100 Mbps par exemple) et que les
  liens représentés sous formes de segments droits soient «lents» (de type
  Ethernet à 10 Mbps par exemple). Le choix du protocole RIP n'est plus du tout
  pertinent !</para>

  <para>Le protocole <acronym>OSPF</acronym> fonctionne différemment. Il
  attribue un coût à chaque liaison (appelée <emphasis>lien</emphasis> dans le
  jargon <acronym>OSPF</acronym>) afin de privilégier l'élection de certaines
  routes. Plus le coût est faible, plus le lien est intéressant. Par défaut, les
  coûts suivants sont utilisés en fonction de la bande passante du
  lien :</para>

  <informaltable>
    <tgroup cols='2'>
    <colspec colwidth='2.5*'/>
    <colspec colwidth='1*'/>
    <thead>
      <row>
        <entry>Type de réseau</entry><entry>Coût par défaut</entry>
      </row>
    </thead>
    <tbody>
      <row>
        <entry>FDDI, FastEthernet</entry><entry>1</entry>
      </row>
      <row>
        <entry>Ethernet 10 Mbps</entry><entry>10</entry>
      </row>
      <row>
        <entry>E1 (2,048 Mbps)</entry><entry>48</entry>
      </row>
      <row>
        <entry>T1 (1,544 Mbps)</entry><entry>65</entry>
      </row>
      <row>
        <entry>64 Kbps</entry><entry>1562</entry>
      </row>
      <row>
        <entry>56 Kbps</entry><entry>1758</entry>
      </row>
      <row>
        <entry>19.2 Kbps</entry><entry>5208</entry>
      </row>
    </tbody>
    </tgroup>
  </informaltable>

  <para>La formule de calcul est simplissime :</para>
  
<screen width='80'>                      10^8
  coût =  -------------------------------
           bande passante du lien en bps
</screen>

  <para>La référence <literal>10^8</literal> correspond à un débit maximum de
  100Mbps. Dans le cas où l'on utilise des interfaces avec un débit supérieur,
  il est possible de redéfinir la référence avec une commande du type
  <userinput>auto-cost reference-bandwidth 1000</userinput> pour la valeur
  <literal>10^9</literal>.</para>

  <para>Le protocole <acronym>OSPF</acronym> privilégie les routes qui ont un
  coût faible, donc celles qui sont supposées rapides en terme de débit
  théorique.</para>
  </sect2>

  <sect2 xml:id='zebra.ospf.concepts.database'>
    <title>La base de données topologique</title>

  <para>Avec le protocole <acronym>OSPF</acronym>, tous les routeurs d'un même
  réseau (on parle de «zone» dans le vocabulaire <acronym>OSPF</acronym>, ceci vous sera expliqué
  avant la mise en pratique) travaillent sur une base de données topologique
  identique qui décrit le réseau. Cette base a été constituée pendant une
  première phase de découverte qui vous sera expliquée un peu plus loin.
  Examinons la base de données suivante qui décrit la topologie de la <xref
  linkend='spf1'/> :</para>

  <informaltable>
    <tgroup cols='2'>
    <thead>
      <row>
        <entry>Arc</entry>
	<entry>Coût</entry>
      </row>
    </thead>
    <tbody>
      <row>
        <entry>R1, R2</entry><entry align='right'>1</entry>
      </row>
      <row>
        <entry>R1, R5</entry><entry align='right'>10</entry>
      </row>
      <row>
        <entry>R2, R3</entry><entry align='right'>1</entry>
      </row>
      <row>
        <entry>R3, R4</entry><entry align='right'>10</entry>
      </row>
      <row>
        <entry>R3, R5</entry><entry align='right'>1</entry>
      </row>
      <row>
        <entry>R4, R5</entry><entry align='right'>10</entry>
      </row>
      <row>
        <entry>R4, 192.168.1.0</entry><entry align='right'>10</entry>
      </row>
    </tbody>
    </tgroup>
  </informaltable>
  </sect2>

  <sect2 xml:id='zebra.ospf.concepts.spf'>
    <title>L'élection des meilleures routes</title>

  <para>L'algorithme SPF de Dijsktra va traiter cette base de données afin de
  déterminer les routes les moins coûteuses. Une fois le traitement réalisé,
  chaque routeur se voit comme la racine d'un arbre contenant les meilleures
  routes. Par exemple :</para>

  <informaltable frame='none' colsep='0'>
    <tgroup cols='2'>
    <tbody>
      <row>
        <entry>
	  <mediaobject xml:id='spf2'>
	    <imageobject>
	    <imagedata fileref='images/spf2.png' format='PNG' align='left'
	    contentwidth='3.5cm' width='4.5cm'/>
	    </imageobject>
	    <caption>
	    <para>Topologie vue de R1</para>
	    </caption>
	  </mediaobject>
	</entry>
	<entry>
	  <mediaobject xml:id='spf3'>
	    <imageobject>
	    <imagedata fileref='images/spf3.png' format='PNG' align='right'
	    contentwidth='3.5cm' width='4.5cm'/>
	    </imageobject>
	    <caption>
	    <para>Topologie vue de R5</para>
	    </caption>
	  </mediaobject>
	</entry>
      </row>
    </tbody>
    </tgroup>
  </informaltable>

  <para>Dans l'exemple, entre R1 et 192.168.1.0, la meilleure route passe par
  R2, R3 et R4 pour un coût total de 1 + 1 + 10 + 10 soit 22.</para>
  </sect2>

  <sect2 xml:id='zebra.ospf.concepts.table'>
    <title>La détermination d'une table de routage</title>

  <para>La base de données topologique décrit le réseau mais ne sert pas
  directement au routage. La table de routage est déterminée par l'application
  de l'algorithme du SPF sur la base topologique. Sur R1, voici un extrait de
  la table de routage calculée par SPF au sujet du réseau
  192.168.1.0 :</para>

  <informaltable>
    <tgroup cols='3'>
    <thead>
      <row>
        <entry>Réseau de destination</entry>
	<entry>Moyen de l'atteindre</entry>
	<entry>Coût</entry>
      </row>
    </thead>
    <tbody>
      <row>
        <entry>192.168.1.0</entry>
        <entry>R2</entry>
        <entry>22</entry>
      </row>
    </tbody>
    </tgroup>
  </informaltable>

  <para>Sur R5, on aura l'extrait suivant :</para>
  
  <informaltable>
    <tgroup cols='3'>
    <thead>
      <row>
        <entry>Réseau de destination</entry>
	<entry>Moyen de l'atteindre</entry>
	<entry>Coût</entry>
      </row>
    </thead>
    <tbody>
      <row>
        <entry>192.168.1.0</entry>
        <entry>R4</entry>
        <entry>20</entry>
      </row>
    </tbody>
    </tgroup>
  </informaltable>
  </sect2>
</sect1>

<sect1 xml:id='zebra.ospf.details'>
  <title>Le fonctionnement d'OSPF un peu plus en détail</title>

  <para>Pour administrer un réseau <acronym>OSPF</acronym> correctement, il est indispensable de
  comprendre le fonctionnement interne du protocole.</para>

  <para>à l'intérieur d'une même zone, les routeurs fonctionnant sous <acronym>OSPF</acronym>
  doivent préalablement remplir les tâches suivantes avant de pouvoir effectuer
  leur travail de routage :</para>

  <orderedlist>
    <listitem>
    <para><xref linkend='zebra.ospf.details.hello'/>,</para>
    </listitem>
    <listitem>
    <para><xref linkend='zebra.ospf.details.dr'/>,</para>
    </listitem>
    <listitem>
    <para><xref linkend='zebra.ospf.details.routes'/>,</para>
    </listitem>
    <listitem>
    <para><xref linkend='zebra.ospf.details.routes.election'/>,</para>
    </listitem>
    <listitem>
    <para><xref linkend='zebra.ospf.details.maintain'/>.</para>
    </listitem>
  </orderedlist>

  <sect2 xml:id='zebra.ospf.details.initial'>
    <title>État initial</title>

  <para>Le processus de routage <acronym>OSPF</acronym> est inactif sur tous les routeurs de la
  <xref linkend='spf1'/>.</para>
  </sect2>

  <sect2 xml:id='zebra.ospf.details.hello'>
    <title>Établir la liste des routeurs voisins : <wordasword>Hello, my
    name is R1 and I'm an OSPF router.</wordasword></title>

  <para>Les routeurs <acronym>OSPF</acronym> sont bien élevés. Dès qu'ils sont
  activés, ils n'ont qu'une hâte : se présenter et faire connaissance avec
  leurs voisins. En effet, lorsque le processus de routage est lancé sur R1
  (commande <userinput>router ospf</userinput>), des paquets de données
  (appelés paquets <literal>HELLO</literal>) sont envoyés sur chaque interface
  où le routage dynamique a été activé (commande
  <userinput>network</userinput>).</para>

  <para>L'adresse <emphasis>multicast</emphasis> 224.0.0.5 est utilisée, tout
  routeur <acronym>OSPF</acronym> se considère comme destinataire. Ces paquets
  ont pour but de s'annoncer auprès de ses voisins. Deux routeurs sont dits
  voisins s'ils ont au moins un lien en commun. Par exemple, sur la <xref
  linkend='spf1'/>, R1 et R2 sont voisins mais pas R1 et R3.</para>

  <para>Lorsque le processus de routage <acronym>OSPF</acronym> est lancé sur R2, celui-ci
  récupère les paquets <literal>HELLO</literal> émis par R1 toutes les 10
  secondes (valeur par défaut du temporisateur appelé <wordasword>hello
  interval</wordasword>). R2 intègre l'adresse IP de R1 dans une base de
  données appelée «base d'adjacences» (<wordasword>adjacencies
  database</wordasword>). Cette base contient les adresses des routeurs
  voisins. Vous pourrez visionner son contenu grâce à la commande
  <userinput>show ip ospf neighbor</userinput>. R2 répond à R1 par un paquet IP
  <emphasis>unicast</emphasis>. R1 intègre l'adresse IP de R2 dans sa propre
  base d'adjacences. Ensuite, généralisez ce processus à l'ensemble des
  routeurs de la zone.</para>

  <para>Cette phase de découverte des voisins est fondamentale puisque
  <acronym>OSPF</acronym> est un protocole à état de liens. Il lui faut
  connaître ses voisins pour déterminer s'ils sont toujours joignables et donc
  déterminer l'état du lien qui les relie.</para>
  </sect2>

  <sect2 xml:id='zebra.ospf.details.dr'>
    <title>Élire le routeur désigné et le routeur désigné de secours</title>

  <para>Dans une zone <acronym>OSPF</acronym> composée de réseaux de diffusion
  (<wordasword>broadcast networks</wordasword>) ou de réseaux à accès multiples
  sans diffusion (<acronym>NBMA</acronym> ou <wordasword>non broadcast multiple
  access networks</wordasword>), pour chacun de ces deux types de réseau, un
  routeur doit être élu «routeur désigné» (<acronym>DR</acronym> ou
  <wordasword>Designated Router</wordasword>) et un autre «routeur désigné de
  secours» (<acronym>BDR</acronym> ou <wordasword>Backup Designated
  Router</wordasword>). Le «routeur désigné» (<acronym>DR</acronym>) est un
  routeur particulier qui sert de référent pour la base de données topologique
  représentant le réseau.</para>

  <para>Pourquoi élire un routeur désigné ? Cela répond à trois
  objectifs :</para>

  <itemizedlist>
    <listitem>
    <para>réduire le trafic lié à l'échange d'informations sur l'état des liens
    (car il n'y a pas d'échange entre tous les routeurs mais entre chaque
    routeur et le DR),</para>
    </listitem>
    <listitem>
    <para>améliorer l'intégrité de la base de données topologique (car cette
    base de données doit être unique),</para>
    </listitem>
    <listitem>
    <para>accélérer la convergence (souvenez-vous, c'était le talon d'Achille
    de <acronym>RIP</acronym>).</para>
    </listitem>
  </itemizedlist>

  <para>Comment élire le DR ? Autrement dit, qui va se taper la corvée
  d'expliquer à ses petits camarades la topologie du réseau ? On ne
  demande pas qui sait parler anglais ou couper les cheveux comme au temps de
  la conscription. Mais comme il faut bien un critère, le routeur élu est celui
  qui a la plus grande priorité (<wordasword>Router ID</wordasword> ou
  <acronym>RID</acronym>). La priorité est un nombre sur 8 bits fixé par
  défaut à 1 sur tous les routeurs. Pour départager les routeurs ayant la même
  priorité, celui qui est élu a la plus grande adresse IP sur une interface de
  boucle locale (<wordasword>loopback interface</wordasword>) ou sur un autre
  type d'interface active. Le <acronym>BDR</acronym> sera le routeur avec la
  deuxième plus grande priorité.</para>

  <para>Afin de s'assurer que votre routeur préféré sera élu
  <acronym>DR</acronym>, il suffit de lui affecter une priorité supérieure à 1
  avec la commande <userinput>ospf priority</userinput>. Vous devrez faire ceci
  avant d'activer le processus de routage sur les routeurs car, une fois élu,
  le DR n'est jamais remis en cause même si un routeur avec une priorité plus
  grande apparaît dans la zone.</para>
  </sect2>

  <sect2 xml:id='zebra.ospf.details.routes'>
    <title>Découvrir les routes</title>

  <para>Il faut maintenant constituer la base de données topologique. Les
  routeurs communiquent automatiquement les routes pour les réseaux qui
  participent au routage dynamique (ceux déclarés avec la commande
  <userinput>network</userinput>). <application>Zebra</application> et son
  successeur <application>Quagga</application> étant multiprotocoles, ils
  peuvent également diffuser des routes provenant d'autres sources que
  <acronym>OSPF</acronym>, grâce à la commande
  <userinput>redistribute</userinput>.</para>

  <para>Chaque routeur (non <acronym>DR</acronym> ou <acronym>BDR</acronym>)
  établit une relation maître/esclave avec le <acronym>DR</acronym>. Le
  <acronym>DR</acronym> initie l'échange en transmettant au routeur un résumé
  de sa base de données topologique via des paquets de données appelés
  <acronym>LSA</acronym> (<wordasword>Link State
  Advertisement</wordasword>).</para>
  
  <para>Ces paquets comprennent essentiellement l'adresse du routeur, le coût
  du lien et un numéro de séquence. Ce numéro est un moyen pour déterminer
  l'ancienneté des informations reçues. Si les <acronym>LSA</acronym> reçus
  sont plus récents que ceux dans sa base topologique, le routeur demande une
  information plus complète par un paquet <acronym>LSR</acronym>
  (<wordasword>Link State Request</wordasword>). Le <acronym>DR</acronym>
  répond par des paquets <acronym>LSU</acronym> (<wordasword>Link State
  Update</wordasword>) contenant l'intégralité de l'information demandée.
  Ensuite, le routeur (non <acronym>DR</acronym> ou <acronym>BDR</acronym>)
  transmet les routes meilleures ou inconnues du <acronym>DR</acronym>.</para>

  <para>L'administrateur peut consulter la base de données topologique grâce à
  la commande <userinput>show ip ospf database</userinput>.</para>
  </sect2>

  <sect2 xml:id='zebra.ospf.details.routes.election'>
    <title>Élire les routes à utiliser</title>

  <para>Lorsque le routeur est en possession de la base de données topologique,
  il est en mesure de créer la table de routage. L'algorithme du
  <acronym>SPF</acronym> est appliqué sur la base topologique. Il en ressort
  une table de routage contenant les routes les moins coûteuses.</para>

  <para>Il faut noter que sur une base de données topologique importante, le
  calcul consomme pas mal de ressources CPU car l'algorithme est relativement
  complexe.</para>
  </sect2>

  <sect2 xml:id='zebra.ospf.details.maintain'>
    <title>Maintenir la base topologique</title>

  <para>Lorsqu'un routeur détecte un changement de l'état d'un lien (cette
  détection se fait grâce aux paquets HELLO adressés périodiquement par le
  routeur à ses voisins), celui-ci émet un paquet <acronym>LSU</acronym> sur
  l'adresse <emphasis>multicast</emphasis> 224.0.0.6 : le
  <acronym>DR</acronym> et le <acronym>BDR</acronym> de la zone se considèrent
  comme destinataires.</para>
  
  <para>Le <acronym>DR</acronym> et le <acronym>BDR</acronym> intègrent cette
  information à leur base topologique. Le <acronym>DR</acronym> et diffuse
  l'information sur l'adresse 224.0.0.5 (tous les routeurs
  <acronym>OSPF</acronym> sans distinction). C'est le protocole d'inondation.
  Toute modification de la topologie déclenche une nouvelle exécution de
  l'algorithme du SPF et une nouvelle table de routage est constituée.</para>
  </sect2>

  <sect2 xml:id='zebra.ospf.details.conclusion'>
    <title>Conclusion partielle</title>

  <para>Voilà pour les principes fondamentaux d'<acronym>OSPF</acronym> mais
  des notions importantes restent à évoquer si vous souhaitez déployer
  <acronym>OSPF</acronym> sur de grands réseaux (en particulier sur le
  fonctionnement d'<acronym>OSPF</acronym> sur un réseau point à point et sur
  l'agrégation de routes). Si vous voulez approfondir, reportez-vous au livre
  de <link linkend='huitema'>C. Huitema cité en bibliographie</link> qui, bien
  qu'un peu ancien est très complet sur la question. Bien sûr, vous pouvez
  toujours vous plonger dans les différentes RFC qui constituent
  <acronym>OSPF</acronym> (la &url.rfc2328; en particulier) et dont la lecture
  est toujours aussi agréable et passionnante ! (je plaisante, bien
  sûr).</para>

  <para>Avant d'attaquer la pratique, un dernier concept : les zones
  <acronym>OSPF</acronym>.</para>
  </sect2>
</sect1>

<sect1 xml:id='zebra.ospf.area'>
  <title>Le concept de zone (<wordasword>area</wordasword>)</title>

  <para>Contrairement à <acronym>RIP</acronym>, <acronym>OSPF</acronym> a été
  pensé pour supporter de très grands réseaux. Mais, qui dit grand réseau, dit
  nombreuses routes. Donc, afin d'éviter que la bande passante ne soit
  engloutie dans la diffusion des routes, <acronym>OSPF</acronym> introduit le
  concept de zone (<wordasword>area</wordasword>). Le réseau est divisé en
  plusieurs zones de routage qui contiennent des routeurs et des hôtes.</para>

  <para>Chaque zone, identifiée par un numéro, possède sa propre topologie et
  ne connaît pas la topologie des autres zones. Chaque routeur d'une zone
  donnée ne connaît que les routeurs de sa propre zone ainsi que la façon
  d'atteindre une zone particulière, la zone numéro 0. Toutes les zones doivent
  être connectées physiquement à la zone 0 (appelée
  <wordasword>backbone</wordasword> ou réseau fédérateur). Elle est constituée
  de plusieurs routeurs interconnectés. Le <wordasword>backbone</wordasword>
  est chargé de diffuser les informations de routage qu'il reçoit d'une zone
  aux autres zones. Tout routage basé sur <acronym>OSPF</acronym> doit posséder
  une zone 0.</para>

  <figure xml:id='spf4'>
    <title>Réseau découpé en trois zones</title>

  <mediaobject>
  <imageobject>
    <imagedata fileref='images/spf4.png' format='PNG' contentwidth='12cm'
    width='12.5cm'/>
  </imageobject>
  <caption>
    <para>Réseau découpé en trois zones</para>
  </caption>
  </mediaobject>
  </figure>

  <para>Sur la <xref linkend='spf4'/>, le réseau est découpé en trois zones
  dont le <wordasword>backbone</wordasword>. Les routeurs de la zone 1, par
  exemple, ne connaissent pas les routeurs de la zone 2 et encore moins la
  topologie de la zone 2. L'intérêt de définir des zones est de limiter le
  trafic de routage, de réduire la fréquence des calculs du plus court chemin
  par l'algorithme SPF ainsi que d'avoir une table de routage plus petite (ce
  qui accélère la convergence). Les routeurs R1 et R4 sont particuliers
  puisqu'ils sont «à cheval» entre plusieurs zones (on les appelle
  <acronym>ABR</acronym> pour <wordasword>Area Border Router</wordasword> ou
  routeur de bordure de zone). Ces routeurs maintiennent une base de données
  topologique pour chaque zone à laquelle il sont connectés. Les
  <acronym>ABR</acronym> sont des points de sortie pour les zones ce qui
  signifie que les informations de routage destinées aux autres zones doivent
  passer par l'<acronym>ABR</acronym> local à la zone. L'<acronym>ABR</acronym>
  se charge alors de retransmettre les informations de routage au
  <wordasword>backbone</wordasword>.</para>

  <para>Les <acronym>ABRs</acronym> du <wordasword>backbone</wordasword>
  ensuite redistribueront ces informations aux autres zones auxquelles ils sont
  connectés.</para>
</sect1>

<?custom-pagebreak?>
<sect1 xml:id='zebra.ospf.lab'>
  <title>Place à la pratique</title>

  <para>Nous allons travailler avec le réseau suivant :</para>

  <figure xml:id='spf5'>
    <title>La topologie de travail</title>

  <mediaobject>
  <imageobject>
    <imagedata fileref='images/spf5.png' format='PNG' contentwidth='12cm'
    width='12.5cm'/>
  </imageobject>
  <caption>
    <para>Topologie de travail</para>
  </caption>
  </mediaobject>
  </figure>

  <para>Le réseau a été découpé en trois zones. Vous remarquez que la zone 0
  permet de fédérer l'ensemble du réseau. Il s'agit du
  <wordasword>backbone</wordasword> dont nous avons déjà discuté. Le découpage
  de ce réseau en trois zones est un cas d'école dont le but est d'examiner la
  configuration d'OSPF dans un contexte multi-zone.</para>

  <para>Généralement, on considère qu'une zone peut accueillir plusieurs
  dizaines de routeurs.</para>
  
  <para>Pour ne pas surcharger ces lignes inutilement, nous nous en tiendrons
  ici à la configuration de R1, R2 et R3. Vous verrez que la configuration
  n'est pas très complexe. Par symétrie, il est facile de l'adapter aux autres
  routeurs.</para>
  
  <para>Pour votre service, chers lecteurs, j'ai mis en ligne une carte
  cliquable (&url.pmassol.ospf;) qui vous permettra de consulter l'état, la
  configuration complète et la table de routage des six routeurs.</para>
  
  <para>Enfin, avant de commencer, vous trouverez une traduction partielle de
  la documentation de <application>Zebra</application> à la page :
  &url.pmassol.zebra;.</para>

<?custom-pagebreak?>
  <sect2 xml:id='zebra.ospf.lab.start'>
    <title>Situation de départ</title>

  <para>Vous devez créer des fichiers de configuration rudimentaires sur chaque
  routeur pour les services <application>Zebra</application>ou
  <application>Quagga</application> :</para>

  <itemizedlist>
    <listitem>
    <para>Fichier <filename>/etc/zebra/zebra.conf</filename> ou
    <filename>/etc/quagga/zebra.conf</filename> pour le démon principal.</para>
    <para>Exemple pour R1 :</para>
<screen width='80'>hostname R1(ZEBRA)
password foo
</screen>
    </listitem>
    <listitem>
    <para>Fichier <filename>/etc/zebra/ospfd.conf</filename> ou
    <filename>/etc/quagga/ospfd.conf</filename> pour le démon <systemitem
    role='daemon'>ospfd</systemitem></para>
    <para>Exemple pour R1 :</para>
<screen width='80'>hostname R1(OSPF)
password foo
</screen>
    </listitem>
  </itemizedlist>
  
  <para>Vous devez ensuite démarrer (ou redémarrer) les deux démons zebra et
  ospfd sur chaque routeur.</para>

  <note>
    <title>Précaution avec une configuration manuelle</title>
    <para>Veillez bien à respecter l'ordre d'exécution des services :
    d'abord <userinput>zebra -d</userinput> puis <userinput>ospfd</userinput>
    ensuite.</para>
  </note>

  <para>Enfin, sur R1 entrez dans le terminal de configuration de <systemitem
  role='daemon'>ospfd</systemitem> via <command>telnet</command> sur le port
  2604 :</para>

<screen width='80'>Linux# telnet localhost ospfd

Hello, this is zebra (version 0.91a).
Copyright 1996-2001 Kunihiro Ishiguro.

User Access Verification
Password:
R1(OSPF)&gt; enable
R1(OSPF)#
</screen>

  <para>Si vous avez envie de suivre précisément les échanges de messages entre
  routeurs, <application>Zebra</application> propose un puissant mécanisme de
  débogage grâce à la commande <command>debug</command> (je vous laisse
  découvrir tous ses paramètres). Supposons que je veuille garder une trace de
  tous les messages HELLO émis par R1 :</para>

<screen width='80'>R1(OSPF)# conf t
R1(OSPF)(config)# log file /var/log/zebra/ospfd.log
R1(OSPF)(config)# debug ospf packet hello send detail
</screen>

  <para>Il faut que le répertoire <filename
  class='directory'>/var/log/zebra</filename> existe.</para>
  </sect2>

  <sect2 xml:id='zebra.ospf.lab.ospf'>
    <title>Activation du processus de routage</title>

  <para>Dans le mode <option>config</option>, nous allons activer le processus
  <acronym>OSPF</acronym> :</para>

<screen width='80'>R1(OSPF)(config)# router ospf
R1(OSPF)(config-router)#
</screen>
  </sect2>

  <sect2 xml:id='zebra.ospf.lab.routing'>
    <title>Activation des annonces de routes</title>

  <para>Le processus de routage <acronym>OSPF</acronym> est activé mais rien ne
  se passe. Comme pour <acronym>RIP</acronym>, il faut indiquer sur quel(s)
  réseau(x) on souhaite que le routage dynamique soit opérationnel. Ceci se
  fait par la commande <userinput>network</userinput>. Mais, nouveauté par
  rapport à RIP qui n'intègre pas le concept de zone, il faut indiquer à quelle
  zone sera rattaché le réseau. Sur la <xref linkend='spf5'/>, on voit que R1
  est relié à deux réseaux. Le réseau 30.0.0.0/8 est attaché à la zone 0 et le
  réseau 11.0.0.0/8 à la zone 1. La configuration se fait donc de cette
  manière :</para>

<screen width='80'>R1(OSPF)(config-router)# network 30.0.0.0/8 area 0
R1(OSPF)(config-router)# network 11.0.0.0/8 area 1
</screen>

  <para>Que se passe-t-il sur le réseau ? R1 envoie des paquets HELLO sur
  les interfaces pour lesquelles la commande <userinput>network</userinput> a
  été saisie. Mais personne n'est là pour les écouter. Activez le routage sur
  R2 en adaptant les commandes aux spécificités du routeur. Je vous aide un
  peu. Sur R2, vous réaliserez les configurations suivantes :</para>

<screen width='80'>R2(OSPF)(config-router)# network 11.0.0.0/8 area 1
R2(OSPF)(config-router)# network 12.0.0.0/8 area 1
</screen>

  <para>Enfin, sur R3, vous réaliserez les configurations
  suivantes :</para>

<screen width='80'>R3(OSPF)(config-router)# network 12.0.0.0/8 area 1
R3(OSPF)(config-router)# network 192.168.3.0/24 area 1
</screen>

  <para>Mais sur R3, il y a une particularité. Le réseau 192.168.3.0/24
  contient des ordinateurs mais aucun routeur. La commande
  <userinput>network</userinput> va diffuser sur ce réseau des annonces de
  routes ce qui consomme inutilement de la bande passante. Par conséquent, nous
  allons désactiver cette diffusion :</para>

<screen width='80'>R3(OSPF)(config-router)# passive-interface eth1
</screen>

  <para>Ainsi, aucune route n'est diffusée sur cette interface. De même, aucune
  annonce de route ne sera prise en compte. Le réseau sera considéré comme
  étant d'extrémité (<wordasword>stub</wordasword>).</para>
  </sect2>

  <sect2 xml:id='zebra.ospf.lab.display'>
    <title>Affichage de la configuration</title>
    
  <para>Affichons la configuration complète de R1 :</para>

<screen width='80'>R1(OSPF)(config-router)# end
R1(OSPF)# show running-config

Current configuration:
!
hostname R1(OSPF)
password foo
!
!
!
interface lo
!
interface eth0
!
interface eth1
!
router ospf
network 11.0.0.0/8 area 1
network 30.0.0.0/8 area 0
!
line vty
!
end
</screen>

  <para>Affichons la configuration complète de R3 :</para>

<screen width='80'>R3(OSPF)# show running-config

Current configuration:
!
hostname R3(OSPF)
password foo
!
!
!
interface lo
!
interface eth0
!
interface eth1
!
router ospf
passive-interface eth1
network 12.0.0.0/8 area 1
network 192.168.3.0/24 area 1
!
line vty
!
end
</screen>

  <para>J'espère que vous avez la même configuration. Si ce n'est pas le cas,
  vous pouvez annuler une ligne contenant une erreur en vous remettant au même
  endroit où vous avez saisi la commande et en saisissant à nouveau la
  commande, mais en la faisant précéder de <option>no</option>.</para>

  <para>Pour enregistrer la configuration, je vous rappelle que l'on
  saisit :</para>

<screen width='80'>R1(OSPF)# copy running-config startup-config
</screen>

  <para>Reproduisez maintenant ces manipulations sur l'ensemble des routeurs du
  réseau.</para>
  </sect2>

  <sect2 xml:id='zebra.ospf.lab.state'>
    <title>État des routeurs</title>

  <para>Nos petits routeurs ont, en principe, bien travaillé. Dans chaque zone,
  ils ont élu leur chef, le routeur désigné (<acronym>DR</acronym>), ils ont
  échangé leurs connaissances et calculé une magnifique table de routage,
  ultra-optimale. En résumé, les deux stations d'extrémité de la figure doivent
  pouvoir s'atteindre avec une commande <command>ping</command>. Si jamais ce
  n'est pas le cas, c'est que probablement vous vous êtes trompé dans une
  configuration. Dans ce cas, reprenez la configuration de chaque appareil.
  Utilisez les outils <command>ping</command>, <command>tcpdump</command> et
  <command>traceroute</command> pour contrôler votre configuration et suivre
  les paquets. Et n'oubliez pas que dans un <command>ping</command>, il y a un
  aller mais aussi un retour !</para>

  <para>Afin d'illustrer ce dont nous avons discuté dans la toute première
  partie de cet article, examinons l'état du routeur R1. Nous pouvons faire un
  diagnostic très complet de l'appareil en utilisant les nombreuses
  sous-commandes de <userinput>show ip ospf</userinput>. Vous constaterez que
  les informations fournies par <systemitem role='daemon'>ospfd</systemitem>
  sur son état sont beaucoup plus conséquentes que celles que l'on pouvait
  extirper de <systemitem role='daemon'>ripd</systemitem>.</para>

  <para>Dans un premier temps, je vous propose d'examiner l'état de santé
  général du routeur R3 :</para>

<screen width='80'>R3(OSPF)# show ip ospf
 OSPF Routing Process, Router ID: 192.168.3.254
 Supports only single TOS (TOS0) routes
 This implementation conforms to RFC2328
 RFC1583Compatibility flag is disabled
 SPF schedule delay 5 secs, Hold time between two SPFs 10 secs
 Refresh timer 10 secs
 Number of external LSA 0
 Number of areas attached to this router: 1

 Area ID: 0.0.0.1
   Shortcutting mode: Default, S-bit consensus: no
   Number of interfaces in this area: Total: 2, Active: 2
   Number of fully adjacent neighbors in this area: 1
   Area has no authentication
   Number of full virtual adjacencies going through this area: 0
   SPF algorithm executed 13 times
   Number of LSA 9
</screen>

  <para>Le premier bloc décrit le fonctionnement général du routeur : l'ID
  du routeur (égale à sa plus grande adresse IP), conformité aux RFC, valeurs
  des temporisateurs. Une seule zone est attachée à ce routeur. C'est la zone 1
  (exprimée en notation décimale pointée). Notre routeur a deux interfaces dans
  la zone, il n'a qu'un seul voisin. L'algorithme du SPF a été exécuté 13 fois.
  La base de données topologique contient neuf états de liens
  (<acronym>LSA</acronym>). Si notre routeur était attaché à plusieurs zones,
  le deuxième bloc serait répété autant de fois que de zones. Vous pourrez le
  constater sur R1.</para>

  <para>Maintenant, listons nos informations sur les routeurs
  voisins :</para>

<screen width='80'>R3(OSPF)# show ip ospf neighbor

Neighbor ID  Pri  State       Dead Time Address   Interface  RXmtL  RqstL  DBsmL
12.0.0.1     1    Full/Backup 00:00:34  12.0.0.1  eth0       0      0      0
</screen>

  <para>Déchiffrons ces informations. La différence entre la colonne ID et la
  colonne <emphasis>Address</emphasis>, c'est que l'ID identifie l'appareil
  dans le réseau alors que l'adresse correspond à l'interface à laquelle nous
  sommes relié avec ce routeur. La colonne <emphasis>State</emphasis> nous
  apprend deux choses : il est synchronisé avec le routeur désigné
  (<acronym>DR</acronym>) grâce à la mention <emphasis>Full</emphasis>, c'est
  le routeur désigné de secours (<acronym>BDR</acronym>) de la zone grâce à
  l'indicateur <emphasis>Backup</emphasis>. Ce routeur sera déclaré comme
  inactif si nous ne recevons pas de message HELLO d'ici 34 secondes
  (<emphasis>Dead Time</emphasis>).</para>

  <para>Voyons le contenu de la base de données topologique de R3 :</para>

<screen width='80'>R3(OSPF)# show ip ospf database
       OSPF Router with ID (192.168.3.254)
                Router Link States (Area 0.0.0.1)

Link ID         ADV Router      Age   Seq#       CkSum   Link count
12.0.0.1        12.0.0.1        981   0x80000006 0xf9e2  2
30.0.0.1        30.0.0.1        952   0x80000003 0xb13e  1
192.168.3.254   192.168.3.254   1063  0x80000005 0x15b7  2

       Net Link States (Area 0.0.0.1)

Link ID         ADV Router      Age   Seq#       CkSum
11.0.0.2        12.0.0.1        981   0x80000001 0xda39
12.0.0.2        192.168.3.254   1063  0x80000001 0x5d0b

       Summary Link States (Area 0.0.0.1)

Link ID         ADV Router      Age   Seq#       CkSum   Route
21.0.0.0        30.0.0.1        837   0x80000001 0x0d08  21.0.0.0/8
22.0.0.0        30.0.0.1        702   0x80000001 0x64a5  22.0.0.0/8
30.0.0.0        30.0.0.1        976   0x80000001 0x33e2  30.0.0.0/8
172.18.0.0      30.0.0.1        599   0x80000001 0x4a0d  172.18.0.0/24
</screen>

  <para>Ces trois tableaux présentent de façon synthétique l'ensemble des
  <acronym>LSA</acronym> stockés dans la base topologique.</para>
  
  <itemizedlist>
    <listitem>
    <para>Le premier tableau contient des <acronym>LSA</acronym> diffusés par
    chaque routeur. Ils décrivent l'état des interfaces de chaque
    routeur.</para>
    </listitem>
    <listitem>
    <para>Le deuxième tableau contient des <acronym>LSA</acronym> diffusés par
    le routeur désigné (<acronym>DR</acronym>). Ils décrivent la liste des
    routeurs présents dans chaque réseau.</para>
    </listitem>
    <listitem>
    <para>Le dernier tableau contient un résumé des routes diffusées par le
    routeur de bordure de zone (<acronym>ABR</acronym>). Ce sont des routes
    qu'il a reçu via le réseau fédérateur (<wordasword>backbone</wordasword>)
    par les routeurs des autres zones.</para>
    </listitem>
  </itemizedlist>
  
  <para>L'âge et le numéro de séquence sont utilisés pour mettre à jour la base
  lorsque des <acronym>LSA</acronym> sont reçus. La somme de contrôle
  (<wordasword>checksum</wordasword> noté <acronym>CkSum</acronym> est utilisée
  pour contrôler l'intégrité des LSA.</para>

  <para>Pour obtenir des informations détaillées sur chaque
  <acronym>LSA</acronym>, vous pouvez compléter la commande <userinput>show ip
  ospf database</userinput> par les options suivantes :
  <userinput>router</userinput>, <userinput>network</userinput> ou
  <userinput>summary</userinput>. Par exemple : <userinput>show ip ospf
  database router 192.168.3.254</userinput> (qui correspond à la troisième
  ligne du premier tableau) vous apprendra que ce router est relié à deux
  réseaux : un de transit (12.0.0.0/8) et un d'extrémité
  (<wordasword>stub</wordasword>) 192.168.3.0/24.</para>

  <para>Enfin, si vous voulez consulter la table de routage obtenue après
  traitement par SPF des différents <acronym>LSA</acronym>, vous n'aurez qu'à
  saisir un <userinput>show ip ospf route</userinput>.</para>
  
  <note>
    <title>Rappel important</title>
    <para>Il existe une différence entre cette table et celle utilisée par le
    démon <systemitem role='daemon'>zebra</systemitem> pour le routage
    proprement dit. Souvenez-vous que <application>Zebra</application> et
    <application>Quagga</application> sont multi-protocole et qu'ils ont une
    architecture modulaire (voir LM 43 : &url.zebra.rip;). Chaque démon
    calcule une table de routage à partir des informations dont il dispose (et
    qui ne sont pas nécessairement les mêmes pour chaque démon). Ensuite, ils
    transmettent chacun leur table au démon <systemitem
    role='daemon'>zebra</systemitem> qui en fait la synthèse. Cette synthèse
    constitue la véritable table de routage utilisée pour router les
    paquets.</para>
  </note>

  <para>Nous avons fait un tour d'horizon des principales commandes de
  <application>Zebra</application> permettant de surveiller l'état de ospfd. Il
  y en a encore beaucoup d'autres que je vous laisse découvrir (faites un
  <userinput>show ip ospf ?</userinput> par exemple). Il nous reste à observer
  la table de routage obtenue par <application>Zebra</application>. Quittez
  <systemitem role='daemon'>ospfd</systemitem> et connectez-vous sur le démon
  <systemitem role='daemon'>zebra</systemitem> via la commande
  <userinput>telnet localhost 2601</userinput> :</para>

<screen width='80'>R3(Zebra)&gt; show ip route
Codes: K - kernel route, C - connected, S - static, R - RIP, O - OSPF,
       B - BGP, &gt; - selected route, * - FIB route

O&gt;* 11.0.0.0/8 [110/20] via 12.0.0.1, eth0, 00:12:48
O      12.0.0.0/8 [110/10] is directly connected, eth0, 00:14:09
C&gt;* 12.0.0.0/8 is directly connected, eth0
O&gt;* 21.0.0.0/8 [110/40] via 12.0.0.1, eth0, 00:11:18
O&gt;* 22.0.0.0/8 [110/50] via 12.0.0.1, eth0, 00:10:16
O&gt;* 30.0.0.0/8 [110/30] via 12.0.0.1, eth0, 00:12:13
C&gt;* 127.0.0.0/8 is directly connected, lo
O&gt;* 172.18.0.0/24 [110/60] via 12.0.0.1, eth0, 00:08:48
O      192.168.3.0/24 [110/10] is directly connected, eth1, 00:14:19
C&gt;* 192.168.3.0/24 is directly connected, eth1
</screen>

  <para>Les routes notées 'O' ont été découvertes par <acronym>OSPF</acronym>.
  Entre crochets, on observe la distance administrative du protocole (110 par
  défaut pour <acronym>OSPF</acronym>) et le coût de la route pour accéder au
  réseau. Dans le cas de la topologie étudiée, il n'y a que des réseaux à 10
  Mbits/s, donc avec un coût par défaut de 10 pour chaque lien.</para>
  </sect2>
  
  <sect2 xml:id='zebra.ospf.lab.secure'>
    <title>Quelques éléments sur la sécurité</title>

  <sect3 xml:id='zebra.ospf.lab.secure.filter'>
    <title>Filtrer la diffusion des routes</title>

  <para>Le premier inconvénient d'un protocole de routage dynamique comme
  <acronym>OSPF</acronym> est sa volubilité. Il a tendance à dévoiler tout un
  tas d'informations sur les réseaux qu'un administrateur consciencieux n'a pas
  forcément envie de révéler. Pour limiter la diffusion des routes au strict
  minimum, ospfd intègre, à l'instar de <systemitem
  role='daemon'>ripd</systemitem>, un mécanisme de liste de contrôle d'accès
  (<wordasword>access-lists</wordasword>).</para>
  
  <para>Reportez-vous à l'article &url.zebra.rip; publié dans le numéro 43 de
  &url.linuxmag;. La configuration est strictement identique. J'en profite pour
  faire un peu de publicité : si vous êtes intéressés par les problèmes de
  sécurité, je vous conseille l'excellent magazine &url.misc;. La série
  d'articles sur la «protection de l'infrastructure réseau IP» constitue sur
  certains points un approfondissement intéressant.</para>
  </sect3>

  <sect3 xml:id='zebra.ospf.lab.secure.crypt'>
    <title>Protéger les annonces de routes</title>

  <para>Le deuxième inconvénient d'un protocole de routage dynamique comme
  <acronym>OSPF</acronym> est sa naïveté. Il croit tout ce qu'on lui dit ! Un
  petit malin pourrait s'amuser à diffuser des routes farfelues à vos routeurs,
  ce qui pourrait provoquer des dénis de service. Pour pallier à cela, on peut
  activer l'authentification des annonces sur une zone. Voici les manipulations
  à réaliser sur chaque routeur :</para>

<screen width='80'>Routeur(OSPF)(config-router)# area 1 authentication message-digest
</screen>

  <para>Ensuite, pour chaque interface participant à la diffusion des
  routes :</para>

<screen width='80'>Routeur(OSPF)(config)# int ethx
Routeur(OSPF)(config-if)# ospf message-digest-key 1 md5 motdepasse
</screen>

  <para>Vous adapterez le «motdepasse» à vos besoins. Ce mot de passe doit bien
  sûr être connu de tous les routeurs.</para>
  </sect3>
  </sect2>
</sect1>

<sect1 xml:id='zebra.ospf.conclusion'>
  <title>Conclusion</title>

  <para><acronym>OSPF</acronym> est un protocole de routage dynamique moderne,
  robuste et conçu pour les grands réseaux. On constate qu'il est nettement
  plus complexe que <acronym>RIP</acronym>. Pas forcément dans sa configuration
  mais dans son fonctionnement interne. Un inconvénient de ce protocole est
  qu'il peut être gourmand en puissance de calcul et en mémoire lorsque le
  réseau comporte beaucoup de routes ou qu'il y a de fréquentes modifications
  de topologie.</para>

  <para><acronym>OSPF</acronym> est un protocole <acronym>IGP</acronym>
  (<wordasword>Interior Gateway Protocol</wordasword>), c'est-à-dire qu'il agit
  au sein d'un système autonome. Un <acronym>AS</acronym>
  (<wordasword>Autonomous System</wordasword>) est un ensemble de réseaux gérés
  par un administrateur commun. Chaque système autonome possède un numéro
  identifiant sur 16 bits délivré par l'<acronym>IANA</acronym>
  (<wordasword>Internet Assigned Numbers Authority</wordasword>) ou ses
  délégations. Classiquement, les multinationales, les opérateurs de télécom ou
  les fournisseurs d'accès à Internet détiennent un numéro de système
  autonome.</para>
  
  <para>Pour assurer le routage entre les systèmes autonomes, un protocole de
  type <acronym>EGP</acronym> (<wordasword>Exterior Gateway
  Protocol</wordasword>) doit être mis en oeuvre. Dans le cas de l'Internet,
  c'est généralement <acronym>BGP</acronym> (<wordasword>Border Gateway
  Protocol</wordasword>) qui assume cette mission. <acronym>BGP</acronym>,
  protocole supporté par Zebra, constitue un vaste terrain
  d'investigation.</para>
  
  <para>Pour terminer, je voudrais saluer tous mes étudiants de BTS
  Informatique de gestion à Loudun qui m'ont aidé dans la réalisation de ce
  document.</para>

  <sect2 xml:id='zebra.ospf.conclusion.biblio'>
    <title>Bibliographie</title>
    
  <variablelist>
    <varlistentry>
      <term><citetitle>TCP/IP : Architecture, protocoles et
      applications</citetitle></term>
      <listitem>
      <para>Douglas COMER, DUNOD. ISBN: 2-10-005384-1 (09/2001) 830 p.</para>
      </listitem>
    </varlistentry>
    <varlistentry xml:id='huitema'>
      <term><citetitle>Le routage dans l'Internet</citetitle></term>
      <listitem>
      <para>Christian HUITEMA, EYROLLES. ISBN: 2-212-08902-3 (10/1994) 418 p.</para>
      </listitem>
    </varlistentry>
  </variablelist>
  </sect2>

  <sect2 xml:id='zebra.ospf.conclusion.links'>
    <title>Liens</title>

  <itemizedlist>
    <listitem>
    <para>&url.zebra;</para>
    </listitem>
    <listitem>
    <para>&url.quagga;</para>
    </listitem>
    <listitem>
    <para>&url.linuxmag;</para>
    </listitem>
    <listitem>
    <para>Version originale du document et page personnelle de
    &url.pmassol;</para>
    </listitem>
  </itemizedlist>
  </sect2>
</sect1>
</article>
