<?xml version='1.0'?>
<!DOCTYPE article PUBLIC "-//OASIS//DTD DocBook XML V5.0//EN"
  "/usr/share/xml/docbook/schema/dtd/5.0/docbook.dtd"[

<!ENTITY author         SYSTEM "author.xml">
<!ENTITY legal          SYSTEM "legal.xml">

<!-- urls -->
<!ENTITY url.amavisd-new
  '<link xmlns="http://docbook.org/ns/docbook" xlink:href="http://www.ijs.si/software/amavisd/">
  <application>amavisd-new</application></link>'>
<!ENTITY url.debian
  '<link xmlns="http://docbook.org/ns/docbook" xlink:href="http://www.debian.org/">
  <citetitle>Debian GNU/Linux</citetitle></link>'>
<!ENTITY url.debian-policy
  '<link xmlns="http://docbook.org/ns/docbook" xlink:href="http://www.debian.org/doc/devel-manuals#policy">
  <citetitle>La Charte Debian</citetitle></link>'>
<!ENTITY url.amavisd-new.debian
  '<link xmlns="http://docbook.org/ns/docbook" xlink:href="http://packages.qa.debian.org/a/amavisd-new.html">
  <citetitle>amavisd-new source package</citetitle></link>'>
<!ENTITY url.fetchmail
  '<link xmlns="http://docbook.org/ns/docbook" xlink:href="http://www.catb.org/~esr/fetchmail/">
  <citetitle>The fetchmail Home Page</citetitle></link>'>
<!ENTITY url.mimedefang
  '<link xmlns="http://docbook.org/ns/docbook" xlink:href="http://www.mimedefang.org/">
  <application>MIMEDefang</application></link>'>
<!ENTITY url.milter
  '<link xmlns="http://docbook.org/ns/docbook" xlink:href="http://www.milter.org/milter_api/">
  <application>milter</application></link>'>

<!ENTITY url.amavisd-new.INSTALL
  '<link xmlns="http://docbook.org/ns/docbook" xlink:href="http://www.ijs.si/software/amavisd/INSTALL">
   <filename>INSTALL</filename></link>'>

<!ENTITY url.amavisd-new.RELEASE_NOTES
  '<link xmlns="http://docbook.org/ns/docbook" xlink:href="http://www.ijs.si/software/amavisd/release-notes.txt">
   <filename>RELEASE_NOTES</filename></link>'>

<!ENTITY url.p0f
  '<link xmlns="http://docbook.org/ns/docbook" xlink:href="http://lcamtuf.coredump.cx/p0f.shtml">
   <application>p0f</application></link>'>

<!-- Sophos|Sophie -->
<!ENTITY url.sophos
  '<link xmlns="http://docbook.org/ns/docbook" xlink:href="http://www.sophos.fr/">
  <trademark>Sophos</trademark></link>'>
<!ENTITY url.sophos.update
  '<link xmlns="http://docbook.org/ns/docbook" xlink:href="http://www.sophos.fr/support/updates">
  http://www.sophos.fr/support/updates</link>'>
<!ENTITY url.sophie
  '<link xmlns="http://docbook.org/ns/docbook" xlink:href="http://www.clanfield.info/sophie/">
  <systemitem class="daemon">sophie</systemitem></link>'>
<!ENTITY url.sophie.cfg
  '<link xmlns="http://docbook.org/ns/docbook" xlink:href="http://www.linux-france.org/prj/inetdoc/telechargement/sophie.cfg">
  <filename>sophie.cfg</filename></link>'>
<!ENTITY url.sophos-ide-update
  '<link xmlns="http://docbook.org/ns/docbook" xlink:href="http://www.ijs.si/software/sophos-ide-update/">
  <application>sophos-ide-update</application></link>'>

<!-- Spamassassin -->
<!ENTITY url.spamassassin
  '<link xmlns="http://docbook.org/ns/docbook" xlink:href="http://spamassassin.apache.org/">
  <application>spamassassin</application></link>'>
<!ENTITY url.spamassassin.rulesemporium
  '<link xmlns="http://docbook.org/ns/docbook" xlink:href="http://www.rulesemporium.com/">
  SpamAssassin Rules Emporium (SARE)</link>'>
<!ENTITY url.spamassassin.openprotect
  '<link xmlns="http://docbook.org/ns/docbook" xlink:href="http://saupdates.openprotect.com/">
  OpenProtect&#39;s SpamAssassin sa-update channel</link>'>
<!ENTITY url.spamassassin.imageinfo
  '<link xmlns="http://docbook.org/ns/docbook" xlink:href="http://www.rulesemporium.com/plugins/">
  <application>ImageInfo Plugin</application></link>'>
<!ENTITY url.spamassassin.fuzzyocr
  '<link xmlns="http://docbook.org/ns/docbook" xlink:href="http://users.own-hero.net/~decoder/">
  <application>FuzzyOcr Plugin</application></link>'>
<!ENTITY url.spamassassin.sa-update.wiki
  '<link xmlns="http://docbook.org/ns/docbook" xlink:href="http://wiki.apache.org/spamassassin/SaUpdateKeyNotCrossCertified">
  <citetitle>SaUpdateKeyNotCrossCertified</citetitle></link>'>
]>

<article xml:id='amavisd-new' xml:lang='fr'>

<info>
  <title>Sécurité du service de courrier électronique : amavisd-new</title>
  
  &author;
  <abstract>
    <para>Cet article est un document de travail en cours de rédaction sur la
    sécurité du service de courrier électronique. Il est donc très incomplet et
    ne saurait remplacer la documentation officielle fournie avec le service
    <application>amavisd-new</application>.</para>
    <para>Depuis plusieurs années, on assiste à une globalisation des menaces
    véhiculées par le courrier électronique. Les solutions de sécurisation
    propriétaires dépendent de la segmentation du marché : antivirus,
    antispam, groupware, etc. C'est cette segmentation qui est mise en échec à
    l'heure actuelle.</para>
    <para>Il est donc essentiel de reprendre la problématique de sécurisation
    du service de courrier électronique avec une approche globale permettant
    d'adapter les <emphasis>relations</emphasis> entre les différentes
    fonctions.</para>
    <para><application>Amavisd-new</application> est un logiciel libre dont le
    but est de mettre en relation les outils de sécurité classiques. Ce
    document est donc consacré à l'organisation des fonctions de sécurité du
    service de courrier électronique.</para>
  </abstract>

  <revhistory>
    <revision>
      <revnumber role='rcs'>$Revision: 1620 $</revnumber>
      <date role='rcs'>$Date: 2011-04-05 08:59:44 +0200 (mar. 05 avril 2011) $</date>
      <authorinitials>$Author: latu $</authorinitials>
      <revremark>Draft en cours de rédaction</revremark>
    </revision>
  </revhistory>

  <keywordset>
    <keyword>GNU</keyword>
    <keyword>Linux</keyword>
    <keyword>Debian</keyword>
    <keyword>spamassassin</keyword>
    <keyword>clamav</keyword>
    <keyword>sophie</keyword>
    <keyword>sophos</keyword>
    <keyword>sophos-ide-update</keyword>
    <keyword>amavisd-new</keyword>
    <keyword>amavisd-release</keyword>
  </keywordset>
</info>

<?custom-pagebreak?>
<sect1 xml:id='amavisd-new.legal.meta'>
  &legal;

  <sect2 xml:id='amavisd-new.meta'>
    <title>Meta-information</title>
    
  <para>Cet article est écrit avec
  <link xmlns="http://docbook.org/ns/docbook" xlink:href="http://www.docbook.org"><citetitle>DocBook</citetitle></link> XML sur un système
  <link xmlns="http://docbook.org/ns/docbook" xlink:href="http://www.debian.org"><citetitle>Debian GNU/Linux</citetitle></link>.
  Il est disponible en version imprimable aux formats PDF et Postscript :
  <link xmlns="http://docbook.org/ns/docbook" xlink:href="http://www.linux-france.org/prj/inetdoc/telechargement/amavisd-new.pdf">
  <literal>amavisd-new.pdf</literal></link>|
  <link xmlns="http://docbook.org/ns/docbook" xlink:href="http://www.linux-france.org/prj/inetdoc/telechargement/amavisd-new.ps.gz">
  <literal>amavisd-new.ps.gz</literal></link>.</para>
  </sect2>

  <sect2 xml:id='amavisd-new.convtypo'>
    <title>Conventions typographiques</title>

  <para>Tous les exemples d'exécution des commandes sont précédés d'une invite
  utilisateur ou <wordasword>prompt</wordasword> spécifique au niveau des
  droits utilisateurs nécessaires sur le système.</para>

  <itemizedlist spacing='compact'>
    <listitem>
    <para>Toute commande précédée de l'invite <prompt>$</prompt> ne nécessite
    aucun privilège particulier et peut être utilisée au niveau utilisateur
    simple.</para>
    </listitem>
    <listitem>
    <para>Toute commande précédée de l'invite <prompt>#</prompt> nécessite les
    privilèges du super-utilisateur.</para>
    </listitem>
  </itemizedlist>
  </sect2>
</sect1>

<?custom-pagebreak?>
<sect1 xml:id='amavisd-new.context'>
  <title>Le contexte sécurité du service de courrier électronique</title>

  <epigraph>
    <attribution>Secrets et mensonges - Sécurité numérique dans un monde en
    réseau - Bruce Schneier</attribution>
    <para>«La sécurité est un processus et non un produit. Et comme dans tout
    processus, certaines de ces composantes sont plus solides, plus fiables,
    mieux huilées et plus sûres que d'autres. De plus, ces composantes doivent
    s'emboîter les unes dans les autres. Mieux elles s'emboîtent, mieux le
    processus fonctionne. Souvent, ce sont les interfaces entre les composantes
    qui sont les éléments les moins sûrs.»</para>
  </epigraph>

  <sect2 xml:id='amavisd-new.context.social-engineering'>
    <title>L'ingénierie sociale ou les limites de la technologie</title>

    <para>L'humain est-il la composante la plus faible du processus de
    sécurisation du courrier électronique ?.
    Répondre oui à cette question c'est choisir un alibi facile.
    L'ingénierie sociale (ou «esbroufe» dans un français plus académique),
    montre simplement les limites de la technologie.
    Il n'existe pas (encore ?) de système technique capable de détecter
    toutes les formes d'usurpation d'identité.
    <itemizedlist spacing='compact'>
      <listitem>
      <para>Ouvrir la pièce jointe chiffrée (contenant le virus !) dont la clé
      de déchiffrement est fournie dans le corps du message est un piège facile
      à éviter tant que l'on est pas «sensible» au contenu du message en
      question. Seule l'interprétation humaine provoquera le déclenchement du
      code viral.</para>
      </listitem>
      <listitem>
      <para>Compléter un formulaire demandant toutes les coordonnées bancaires
      (n° de carte de crédit, etc.) transmis par courrier est un piège facile à
      éviter tant que l'on «détecte une différence» entre le message et le
      formulaire Web que l'on a l'habitude de saisir pour consulter l'état de
      son compte en banque. Là encore, tout n'est qu'une question
      d'interprétation qui échappe totalement aux technologies de
      sécurité.</para>
      </listitem>
    </itemizedlist></para>

    <para>Face aux évolutions constantes des méthodes d'usurpation d'identité,
    seule une information constante et complète des utilisateurs sur le «bon
    usage» du service de courrier électronique est efficace.
    Cette sensibilisation sur les usages, aussi nécessaire soit-elle, est
    parfois difficile. Essayez de convaincre la totalité des utilisateurs d'un
    service de ne plus composer leurs courriers en HTML !. Gros challenge en
    perspective ;).</para>
    
    <para>Même si la technologie n'est pas une arme absolue, ses capacités de
    traitements automatisés sur des volumes de messages importants rendent de
    grands services.</para>

    <para>L'objet de ce document est justement de présenter un service
    <emphasis>interface</emphasis> entre les fonctions classiques de filtrage
    de contenus de courrier électronique.</para>
  </sect2>

  <sect2 xml:id='amavisd-new.context.secu-position'>
    <title>Le placement des fonctions de sécurisation du courrier
    électronique</title>

    <para>L'acheminement du courrier passe par des (étapes|points) bien
    particuliers. Tout commence par le service de noms de domaines
    (<acronym>DNS</acronym>) qui désigne les adresses IP responsables du
    traitement du courrier électronique d'une zone donnée. Les hôtes
    responsables de ces traitements (<wordasword>Mail Transfer
    Agent</wordasword>) sont repérés par le champ <wordasword>Mail
    eXchanger</wordasword> (<acronym>MX</acronym>) dans le fichier de zone
    <acronym>DNS</acronym>.</para>

    <para>Voici une exemple simple permettant d'obtenir la liste des hôtes
    responsables du courrier électronique pour la zone
    <literal>nic.fr.</literal> :</para>

<screen width='80'>$ dig nic.fr MX

; &lt;&lt;>> DiG 9.3.1 &lt;&lt;>> nic.fr MX
;; global options:  printcmd
;; Got answer:
;; ->>HEADER&lt;&lt;- opcode: QUERY, status: NOERROR, id: 1648
;; flags: qr rd ra; QUERY: 1, ANSWER: 2, AUTHORITY: 7, ADDITIONAL: 3

;; QUESTION SECTION:
;nic.fr.                                IN      MX

;; ANSWER SECTION:
nic.fr.                 172800  IN      MX      50 mx1.nic.fr.
nic.fr.                 172800  IN      MX      100 mx2.nic.fr.
</screen>

    <para>Passons maintenant au courrier électronique proprement dit et son
    acheminement entre zones de l'Internet.</para>

<screen width='80'>                 __        MTA(2)           MDA(3)
  MTA(1)     ___/  \_       .__.             .__.
   .__.    _/        \__    |  |  stockage   |  |  _____
   |  |   /             \   | =|  courrier   | =| |=_=_=//
  _| =|__| Internet      |__| -|   _  _  _   | -|__/ |
 / | -|  \_           __/   |  |__(_)(_)(_)__|  |    |
 | |  |    \__     __/     ------ (_)(_)(_) ------   |
 |------      \___/                           _______/
 |                                           /
 |.....MUA(0)                                |.....MUA(4)
 .------,~                                   .------,~
 | PC   |'                                   | PC   |'
 |Client||                                   |Client||
 \------ /                                   \------ /
  ======/                                     ======/
</screen>

    <variablelist>
      <varlistentry xml:id='mua.0'>
	<term>MUA(0)</term>
	<term><wordasword>Mail User Agent</wordasword></term>
	<term>Émission du courrier</term>
	<listitem>
	<para>L'utilisateur émet un courrier à l'aide d'une application appelée
	<wordasword>Mail User Agent</wordasword> vers le <xref linkend='mta.1'/>
	de son fournisseur d'accès Internet. La seule précaution possible à ce
	niveau consiste à utiliser un antivirus «à jour». Concrètement, cette
	condition est rarement respectée sur les postes domestiques. Pire
	encore, la vitesse de propagation des vers est maintenant supérieure à
	la fréquence des mises à jour de signatures de virus. Le niveau de
	sécurité d'un poste émettant du courrier est donc
	<emphasis>nécessairement</emphasis> faible.</para>
	<warning>
	  <para>Il est possible, via une configuration particulière, d'émettre
	  directement du courrier vers n'importe quel <acronym>MTA</acronym>
	  sur l'Internet à partir du poste client.</para>

	  <para>Ce type de fonctionnement correspond presque systématiquement à
	  une infection virale. C'est pour cette raison que dès que ces
	  émissions sont détectées, l'adresse IP du poste est classée en liste
	  noire. Il est donc vivement déconseillé d'émettre directement du
	  courrier vers d'autres <acronym>MTA</acronym> que celui de son
	  fournisseur d'accès.</para>
	</warning>
	</listitem>
      </varlistentry>
	
      <varlistentry xml:id='mta.1'>
	<term>MTA(1)</term>
	<term><wordasword>Mail Tranfer Agent</wordasword> (-TX)</term>
	<term>Transfert du courrier en émission</term>
	<listitem>
	<para>Le rôle du <wordasword>Mail Tranfer Agent</wordasword> est de
	transférer le courrier sur l'Internet vers le <wordasword>Mail Tranfer
	Agent</wordasword> correspondant à l'adresse du destinataire.</para>

	<para>La sécurisation des communications entre les
	<acronym>MTA</acronym>s est à la charge des opérateurs qui acheminent
	les données. Le rôle des fournisseurs d'accès dans la propagation des
	vers n'est pas neutre. Les clients sont facturés deux fois pour un
	service qui leur est dû. La surconsommation de bande passante due aux
	«pourriels» et aux vers est facturée à travers les forfaits et les
	fonctions antivirus et antispam sont facturées à travers des
	prestations supplémentaires. Si le problème était traité à la source,
	la surconsommation de bande passante serait sensiblement diminuée et la
	propagation des vers limitée.</para>

	<para>Outre la logique commerciale de la démarche, l'argumentaire sur
	l'approche globale de la sécurisation s'applique parfaitement ici. Tant
	qu'un opérateur «respecte» la segmentation du marché qui lui impose
	d'affecter un groupe d'unités centrales à une fonction unique
	(antivirus, antispam, listes noires, etc.) sans
	<emphasis>(organiser|contrôler) les relations</emphasis> entre ces
	fonctions, il n'a d'autre choix que d'investir sans fin dans de
	nouveaux châssis dédiés. Cette course est asphyxiante aussi bien sur le
	plan financier que sur le plan des ressources humaines disponibles pour
	administrer le service.</para>

	<para>Dans ce contexte, il faut <emphasis>réagir</emphasis> à son
	niveau et prendre un maximum de précautions lors de l'émission de
	courrier électronique depuis sa propre infrastructure. On observe trop
	souvent des comportements <emphasis>irresponsables</emphasis>
	d'administrateurs, qui sous prétexte que leur installation n'a pas été
	infectée, n'appliquent aucun traitement sur les courriers qui
	transitent par leur service alors qu'ils ne leur sont pas
	destinés.</para>
	
	<para>Les fonctions de sécurité sont identiques à celles mises en
	œuvre au niveau d'un <xref linkend='mta.2'/> de réception du courrier
	électronique. Seules les relations entre ces fonctions diffèrent. C'est
	au service de réception d'assumer la protection des périmètres placés
	sous son contrôle.</para>
	</listitem>
      </varlistentry>
	
      <varlistentry xml:id='mta.2'>
	<term>MTA(2)</term>
	<term><wordasword>Mail Tranfer Agent</wordasword> (-RX)</term>
	<term>Transfert du courrier en réception</term>
	<listitem>
	<para>Relativement au <xref linkend='mta.1'/>, le <wordasword>Mail
	Tranfer Agent</wordasword> de réception joue le rôle le plus important
	au niveau sécurité. C'est à ce point de passage que la charge de
	sécurisation est la plus critique. Il n'est pas rare de devoir «jeter»
	plus de 30% des courriers présentés au <wordasword>Mail Tranfer
	Agent</wordasword>. De plus, le début d'année 2004 a montré combien il
	est important que les relations entre les fonctions de sécurité soient
	bien contrôlées. Cette maîtrise de la chaîne de sécurisation permet
	«d'encaisser» les chocs lors des propagations de nouveaux vers.</para>
	</listitem>
      </varlistentry>
	
      <varlistentry xml:id='mda.3'>
	<term>MDA(3)</term>
	<term><wordasword>Mail Delivery Agent</wordasword></term>
	<term>Délivrance du courrier</term>
	<listitem>
	<para>Le rôle du <wordasword>Mail Delivery Agent</wordasword> est de
	prélever le courrier dans les files d'attentes et de le déposer dans le
	répertoire de boîte aux lettres de l'utilisateur.
	<application>Procmail</application> est l'outil <acronym>MDA</acronym>
	le plus utilisé dans l'univers GNU/Linux. Il est possible de placer des
	fonctions de sécurité à ce niveau : appels antivirus (et|ou)
	antispam. Ce type d'appel est très pénalisant en charge CPU et surtout
	en accès au système de fichiers sur la machine qui exécute le programme.
	Il est donc déconseillé de traiter de gros volumes de courrier de cette
	façon.</para>

	<para>Malgré ce défaut très pénalisant, le <wordasword>Mail Delivery
	Agent</wordasword> est l'outil de personnalisation des fonctions de
	sécurité. Si l'utilisateur souhaite régler lui-même les paramètres de
	fonctionnement des outils de sécurité, c'est là que l'opération doit se
	faire. Ces réglages individuels ne sont pas incompatibles avec les
	fonctions mises en œuvre au niveau <wordasword>Mail Tranfer
	Agent</wordasword>.</para>
	</listitem>
      </varlistentry>
	
      <varlistentry>
	<term>MUA(4)</term>
	<term><wordasword>Mail User Agent</wordasword></term>
	<term>Réception du courrier</term>
	<listitem>
	<para>Pour faire simple, si un courrier infecté arrive à ce
	niveau : c'est foutu !. La population des administrateurs de parc
	informatique ayant constaté que les antivirus et antispam clients sont
	totalement inutiles croît à une vitesse exponentielle. Si tous les
	ténors des solutions propriétaires cherchent encore à faire illusion,
	on (entend|lit) de plus en plus que la vitesse de propagation des vers
	et des pourriels est beaucoup trop rapide pour que ces solutions
	propriétaires soutiennent le rythme.</para>
	</listitem>
      </varlistentry>
    </variablelist>

    <para>Dans la suite de ce document, nous allons nous concentrer sur les
    fonctions de sécurité appliquées aux <wordasword>Mail Tranfer
    Agent</wordasword>s assurant l'émission (-TX) et la réception (-RX) du
    courrier à la frontière du périmètre administré. Comme indiqué ci-avant
    (<xref linkend='mda.3'/>), il est toujours possible d'affiner les
    paramètres d'utilisation des outils de sécurité. C'est le moyen de
    personnaliser au niveau utilisateur la chaîne de sécurité. Il faut rappeler
    que cette individualisation a un coût d'exécution important. Par exemple,
    les appels à <application>spamassassin</application> à travers
    <application>procmail</application> sont si longs à exécuter qu'ils gênent
    la consultation des courriers électroniques.</para>
  </sect2>

  <sect2 xml:id='amavisd-new.context.system'>
    <title>L'architecture système</title>

    <para>En considérant les points de passage obligatoires de l'acheminement
    du courrier électronique on retient que les <wordasword>Mail Tranfer
    Agent</wordasword>s situés à la frontière du réseau sont les outils
    critiques sur lesquels l'approche globale de sécurité du service de
    courrier électronique doit s'appliquer.</para>

    <para>Pour appliquer cette approche globale on utilise un service dédié aux
    relations entre les fonctions de sécurité : <xref
    linkend='amavisd-new.refdocs.main-site'/>.</para>

<?custom-pagebreak?>
<screen width='80'>   courrier issu du
    MTA précédent
         |
	 V                                   +------+
    +--------+                            .--| .zip |
    |        |                           /|  +------+-+
    | MTA-RX |                          / | .--| .rar |
    |        |        +-------------+  /  |    +------+-+
    +--------+        |             |-'   ,   .--| .arj |
         |            | antivirus 1 |    /       +------+
         |         .--|             |-+ /     +---------------+ 
	 V        /   +-------------+ |'      |               |
    +--------+   /      | antivirus 2 |       | liste noire 1 |
    |        |--' .-----|             |    .--|               |--+
    | amavis |---'      +-------------+   /   +---------------+  |
    |        |--.     +------------+     /       | liste noire 2 |
    +--------+   \    |            |----'   .----|               |
         |        \   | antispam 1 |-------'     +---------------+
         |         `--|            |---.    +----------------+
         V            +------------+    \   |                |
    +--------+                           `--| règles propres |
    |        |                              |                |
    | MTA-TX |                              +----------------+
    |        |
    +--------+
         |
	 V
  courrier pour le
    MTA suivant
</screen>

    <para>Dans l'exemple ci-dessus, on a représenté 3 fonctions de sécurité à
    titre indicatif : 2 antivirus et 1 antispam. Il existe de très
    nombreuses combinaisons possibles (FIXME: Voir liste amavis). Chaque
    fonction de sécurité peut elle même faire appel à plusieurs autres
    services : bases de données de signatures de virus, bases de données
    de listes noires, algorithmes de calcul de notes, algorithmes de
    (dé)compression, etc. Donner une représentation exhaustive de toutes les
    relations possibles serait illisible.</para>

    <para>Les en-têtes de courrier servent de plus en plus à
    (véhiculer|échanger) des paramètres entre les services exécutés par les
    différents <wordasword>Mail Transfer Agent</wordasword>s. Ce sont ces
    échanges de paramètres (<option>X-Virus-*</option>,
    <option>X-Spam-*</option>, etc.) qui régissent les relations entre
    <acronym>MTA</acronym>. Le service <xref
    linkend='amavisd-new.refdocs.main-site'/> doit donc nécessairement prendre
    en compte ces champs d'en-têtes pour prétendre à l'approche globale de
    sécurité.</para>

    <para>Voici un «bel exemple» d'utilisation des champs
    d'en-tête indiquant le résultat d'un calcul de pondération
    antispam :</para>

<screen width='80'>X-Spam-Status: Yes, hits=33.2 tag1=3.0 tag2=8.0 kill=8.0
 tests=CLICK_BELOW_CAPS, FORGED_YAHOO_RCVD, HTML_FONTCOLOR_RED,
 HTML_FONTCOLOR_UNKNOWN, HTML_FONT_BIG, HTML_MESSAGE, HTML_SHOUTING4,
 MIME_HTML_ONLY, MIME_HTML_ONLY_MULTI, OBFUSCATING_COMMENT,
 RAZOR2_CF_RANGE_51_100, RAZOR2_CHECK, RCVD_IN_BL_SPAMCOP_NET, RCVD_IN_DSBL,
 RCVD_IN_DYNABLOCK, RCVD_IN_NJABL, RCVD_IN_NJABL_PROXY, RCVD_IN_OPM,
 RCVD_IN_OPM_HTTP, RCVD_IN_OPM_HTTP_POST, RCVD_IN_SBL, RCVD_IN_SORBS,
 RCVD_IN_SORBS_HTTP, REMOVE_PAGE, UPPERCASE_25_50
 X-Spam-Level: *********************************
</screen>
  </sect2>

  <sect2 xml:id='amavisd-new.context.corp-archi'>
    <title>L'architecture réseau</title>

    <para>Voici une architecture réseau «simple» avec laquelle l'acheminement
    du courrier suit les processus suivants :</para>

    <orderedlist spacing='compact'>
      <listitem>
	<para>Le <wordasword>Mail Transfer Agent</wordasword> de réception de
	la <citetitle>passerelle</citetitle> est désigné comme service
	prioritaire dans la configuration du service de noms de domaines (champ
	<acronym>MX</acronym> du fichier de configuration de zone.</para>
      </listitem>
      <listitem>
	<para>Les règles du <citetitle>Pare-feu</citetitle> sont rédigées de
	façon à ce que les courriers électroniques issus de l'Internet arrivent
	à la passerelle et nulle part ailleurs.</para>
      </listitem>
      <listitem>
	<para>Le service <xref linkend='amavisd-new.refdocs.main-site'/>
	appelle tous les traitements voulus et prend une décision sur chaque
	courrier : passage au <acronym>MTA</acronym> suivant, mise en
	quarantaine ou destruction.</para>
      </listitem>
      <listitem>
	<para>Dans le cas ou le courrier doit passer au <acronym>MTA</acronym>
	suivant, les règles du <citetitle>Pare-feu</citetitle> sont rédigées de
	façon à ce que les courriers électroniques arrivent au
	<acronym>MTA</acronym> interne depuis la
	<citetitle>passerelle</citetitle> pour être délivrés dans les boîtes
	aux lettres des utilisateurs.</para>
      </listitem>
    </orderedlist>

<screen width='80'>         __       Pare-feu           MTA + MDA internes
     ___/  \_       .__.                 .__.
   _/        \__    |X |________________,|  |      _____
  /             \   |X=|                 | =|     |=_=_=//
 | Internet      |_,|X-|.__              | -|.____/  |
 \_           __/   |X |   \             |  _  _     |
   \__     __/     ------   |Passerelle  --(_)(_)    |
      \___/                 |  .__.        |_||_|    | 
                            |  |  |                  |
                            \_,| =|                  |.....
                               | -|                .------,~
                               |  |                | PC   |'
                              ------               |Client||
                        MTA-RX       MTA-TX        \------ /
                           \amavisd-new/            ======/
</screen>

    <para>Voici une architecture réseau «plus réaliste» qui intègre une
    redondance de la sécurisation du service ; on parle aujourd'hui de
    haute disponibilité. L'acheminement du courrier doit toujours
    disposer de 2 voies de communication distinctes de façon à tolérer une
    panne quelconque sur une ou plusieurs fonctions de sécurité. On utilise
    alors 2 passerelles placées sur des sites géographiques différents.</para>

<screen width='80'>         __       Pare-feu           MTA + MDA internes
     ___/  \_       .__.                 .__.
   _/        \__    |X |________________,|  |      _____
  /             \   |X=|                 | =|     |=_=_=//
 | Internet      |_,|X-|.__              | -|.____/  |
 \_           __/   |X |   \             |  _  _     |
   \__     __/     ------   |Passerelle  --(_)(_)    |
      \___/          .      |  .__.        |_||_|    | 
         |       VPN.       |  |  |                  |
         |         .        \_,| =|                  |.....
         |        .            | -|                .------,~
         |       .             |  |                | PC   |'
         |      .             ------               |Client||
         | Pare-feu     MTA-RX       MTA-TX        \------ /
         |    .__.         \amavisd-new/            ======/
         |    |X |
	 \___,|X=|
              |X-|.__
              |X |   \
             ------   |Passerelle
                      |  .__.
                      |  |  |
                      \_,| =|
                         | -|
                         |  |
                        ------
                  MTA-RX       MTA-TX
                     \amavisd-new/
</screen>

    <para>Le fonctionnement des passerelles est identique à celui décrit
    ci-dessus. Ce sont les champs <acronym>MX</acronym> du service de noms de
    domaines qui régissent les priorités entre les deux passerelles. Un réseau
    privé virtuel (<acronym>VPN</acronym> assure les communications entre les
    deux pare-feux.</para>
  </sect2>

  <sect2 xml:id='amavisd-new.context.home-archi'>
    <title>L'architecture «domestique»</title>

    <para>Comment appliquer la stratégie de sécurité présentée lorsque l'on ne
    gère pas un domaine réseau en propre ? Il est tout à fait possible de
    «réintroduire» le courrier électronique déposé chez un fournisseur d'accès
    vers un <wordasword>Mail Transfer Agent</wordasword>. Voici un exemple
    d'architecture :</para>

<screen width='80'>  Fournisseur        __
   d'accès       ___/  \_         modem  .___.
     .__.      _/        \__        __   |== |  _____
MTA  |  |     /             \ /\   |==|  |. =| |     |
 +   | =|`---| Internet      |  \  / |   | --| |     |
MDA  | -|    \_           __/    \/   \_,| --| -------
     |  _  _   \__     __/              -------======/
     --(_)(_)     \___/            fetchmail
       |_||_|                       MTA-RX       MTA-TX
  Boîte aux lettres                    \amavisd-new/
     utilisateur
</screen>

    <para>On utilise un outil particulier : <xref
    linkend='amavisd-new.refdocs.fetchmail'/>, dont la fonction de base est la
    collecte à distance et la retransmission du courrier électronique. L'outil
    <application>fetchmail</application> peut être utilisé comme passerelle
    <acronym>POP</acronym> ou <acronym>IMAP</acronym> pour un domaine
    <acronym>DNS</acronym> entier.</para>

    <para>Cette architecture «domestique» peut paraître d'une complexité trop
    importante relativement à la charge utile de traitement du courrier
    électronique. Il faut cependant prendre en compte les arguments
    suivants :</para>

    <itemizedlist spacing='compact'>
      <listitem>
      <para>La première approche de sécurisation consiste à faire appels aux
      fonctions antispam et antivirus à partir du <wordasword>Mail delivery
      Agent</wordasword>. Comme indiqué au point <xref linkend='mda.3'/>, le
      coût d'exécution des fonctions de sécurité gêne considérablement
      l'utilisateur dans la consultation du courrier électronique. Cette gêne
      est d'autant plus importante qu'il n'existe pas de relations entre les
      fonctions de sécurité. Un même courrier doit passer par toutes les
      fonctions avant qu'une décision soit prise.</para> 
      </listitem>
      <listitem>
      <para>Il ne faut pas oublier que si les «pourriels» (et|ou) les virus
      arrivent jusqu'à l'interface réseau de votre poste, c'est que les
      opérateurs n'ont pas joué leur rôle. Il n'est pas rare aujourd'hui, de
      devoir rejeter plus de 50% du courrier sur 2 adresses (FIXME: voir
      échantillon amavis-stats).</para>
      </listitem>
    </itemizedlist>

    <para>Dans ces conditions, la mise en place de cette configuration lourde à
    titre domestique se justifie pleinement.</para>
  </sect2>
  
  <sect2 xml:id='amavisd-new.context.filter'>
    <title>Les règles de filtrage réseau</title>

    <para>En considérant les 2 propositions d'architecture ci-dessus, voici un
    tableau récapitulatif des règles de filtrage à appliquer sur le(s)
    pare-feu(x).</para>

    <table xml:id='amavisd-new.context.filter.table' frame='all' pgwide='1'>
      <title>Filtrage réseau</title>
      <tgroup cols='5' align='left' colsep='1' rowsep='1'>
      <colspec colnum='1' colwidth='2*'/>
      <colspec colnum='2' colwidth='2*'/>
      <colspec colnum='3' colwidth='1*'/>
      <colspec colnum='4' colwidth='1*'/>
      <colspec colnum='5' colwidth='3*'/>
      <thead>
        <row>
        <entry>Source</entry>
        <entry>Destination</entry>
        <entry>Type</entry>
        <entry>Port</entry>
        <entry>Description</entry>
	</row>
      </thead>
      <tbody>
        <row>
	<entry>Internet</entry>
	<entry>Passerelle</entry>
	<entry>TCP</entry>
	<entry>22</entry>
	<entry>Accès SSH vers la passerelle</entry>
	</row>
	<row>
	<entry>Internet</entry>
	<entry>Passerelle</entry>
	<entry>TCP</entry>
	<entry>25</entry>
	<entry>Courriers entrant vers la passerelle</entry>
	</row>
        <row>
        <entry>Passerelle</entry>
        <entry>MTA interne et Internet</entry>
        <entry>TCP</entry>
        <entry>25</entry>
        <entry>Courriers sortant de la passerelle</entry>
        </row>
	<row>
	<entry>MTA interne</entry>
	<entry>Passerelle</entry>
	<entry>TCP</entry>
	<entry>25</entry>
	<entry>Courriers sortant du MTA interne</entry>
	</row>
	<row>
	<entry>Passerelle</entry>
	<entry>Internet</entry>
	<entry>TCP</entry>
	<entry>80</entry>
	<entry>Téléchargement de fichiers Web</entry>
	</row>
	<row>
	<entry>Passerelle</entry>
	<entry>Internet</entry>
	<entry>TCP</entry>
	<entry>2703</entry>
	<entry>Accès aux serveurs Razor</entry>
	</row>
	<row>
	<entry>Passerelle</entry>
	<entry>Internet</entry>
	<entry>ICMP</entry>
	<entry>8</entry>
	<entry>Accès ICMP aux serveurs Razor</entry>
	</row>
      </tbody>
      </tgroup>
    </table>
  </sect2>
</sect1>

<sect1 xml:id='amavisd-new.service'>
  <title>Le service amavisd-new</title>

  <para>Le service <xref linkend='amavisd-new.refdocs.main-site'/> n'est pas
  unique en son genre, mais il n'existe pas beaucoup d'équivalents. Citons
  juste &url.mimedefang; qui s'appuie sur &url.milter; pour composer un système
  de filtrage centralisé du courrier électronique.</para>

  <para>Le service <xref linkend='amavisd-new.refdocs.main-site'/> est une
  branche de la famille <xref linkend='amavisd-new.refdocs.old-amavis'/>. Parmi
  les autres membres on trouve : <application>amavis-perl</application>,
  <application>amavisd</application> et <application>amavis-ng</application>.
  Aujourd'hui, le code du service <xref
  linkend='amavisd-new.refdocs.main-site'/> est très éloigné des versions
  initiales d'<application>amavis-perl</application>.</para>

  <para>Le code du service <xref linkend='amavisd-new.refdocs.main-site'/> a
  été complètement revu. Il se distingue par l'utilisation de démons pour
  lesquels toutes les phases d'initialisations sont effectuées avant de
  commencer les traitements sur le courrier électronique. C'est ce
  «pré-chargement» de démon pour chaque fonction de sécurité qui assure une
  tenue en charge très supérieure à celle obtenue avec les outils classiques
  qui recourent massivement au système de fichiers.</para>

  <sect2 xml:id='amavisd-new.service.install'>
    <title>L'installation</title>

  <para>Bien qu'il existe un paquet Debian dont l'évolution est présentée à la
  page : &url.amavisd-new.debian;, celui-ci n'est pas mis à jour assez
  fréquemment pour pouvoir coller à l'actualité de la sécurité du courrier
  électronique. On touche ici à la question sensible de la <citetitle>Veille
  Sécurité</citetitle> (FIXME section journalisation). Il est possible que dans
  les semaines à venir la maintenance du paquet Debian rattrape son retard. Il
  serait alors préférable de l'utiliser.
  Depuis Janvier 2004, les vagues de (virus|vers) ont précipité les évolutions
  du service <xref linkend='amavisd-new.refdocs.main-site'/>. Dans le cas de
  l'utilisation de <application>milter</application> (FIXME section sendmail),
  il est indispensable d'utiliser les sources à la place du paquet.</para>

  <para>Le présent document décrit donc l'installation du service <xref
  linkend='amavisd-new.refdocs.main-site'/> à partir de ses sources disponibles
  à la page : &url.amavisd-new;. Comme la distribution utilisée est <xref
  linkend='amavisd-new.refdocs.debian'/>, l'organisation des fichiers et
  répertoires du service essaie de se conformer aux recommandations de la <xref
  linkend='amavisd-new.refdocs.debian-policy'/>.</para>

  <para>Enfin, ce qui suit ne peut se substituer à la documentation officielle
  sur l'installation du service : le fichier
  &url.amavisd-new.INSTALL;.</para>

    <sect3 xml:id='amavisd-new.service.install.download'>
      <title>Le téléchargement des sources et les dépendances</title>

  <para>Rien de bien original pour ce qui concerne l'obtention des
  sources :</para>
<screen width='80'>$ wget http://www.ijs.si/software/amavisd/amavisd-new.tar.gz
$ su
# mv amavisd-new.tar.gz /usr/local/src ; cd /usr/local/src
# tar xf amavisd-new.tar.gz
# chown -R root.src amavisd-new-2.6.x
# cd amavisd-new-2.6.x
# cp amavisd amavisd-agent amavisd-nanny amavisd-release p0f-analyzer.pl \
     /usr/local/sbin
</screen>

  <para>Pour ce qui est des autres logiciels nécessaires au fonctionnement du
  service, il faut comparer la liste fournie dans le fichier
  &url.amavisd-new.INSTALL; et les dépendances du paquet Debian.</para>
  
  <para>L'exécution de la commande
  <userinput><prompt>$</prompt> apt-cache depends amavisd-new</userinput>
  donne la liste des paquets nécessaires et recommandés pour le fonctionnement
  du service.</para>

  <para>On affiche les versions de la liste des paquets ci-dessus pour faire la
  correspondance avec le fichier &url.amavisd-new.INSTALL;  à l'aide de la
  commande suivante.</para>

<screen width='80'><prompt>$</prompt> dpkg -l file libconvert-tnef-perl \
  libconvert-uulib-perl libcompress-zlib-perl libarchive-zip-perl \
  libmailtools-perl libmime-perl libunix-syslog-perl libnet-server-perl \
  perl spamassassin clamav clamav-daemon lha arj rar zoo nomarch cpio lzop pax</screen>

  <para>Comme les numéros de version évoluent régulièrement, donner le résultat
  des deux commandes précédentes ne présente pas un grand intérêt. Il faut
  simplement suivre régulièrement l'évolution des paquets en question de façon
  à ce que la suite des outils soit pleinement efficace.</para>

  <para>Une fois les paquets correctement installés, on contrôle la
  disponibilité des fonctions en lançant le service en mode
  <wordasword>debug</wordasword>. Dans ce mode, l'exécution du démon lance un
  processus non détaché du <wordasword>shell</wordasword> courant et tous les
  messages sont directement envoyés dans le terminal. On lance la commande
  <userinput><prompt>#</prompt> amavisd debug</userinput>.</para>
    </sect3>
  </sect2>

  <sect2 xml:id='amavisd-new.service.quarantine-cleanup'>
    <title>La gestion de l'arborescence de quarantaine</title>

  <para>Une politique minimum de gestion des messages mis en quarantaine est
  nécessaire pour ne pas saturer l'espace de stockage d'une passerelle de
  courrier électronique. Ici, on se fixe comme règle de conserver les spams
  pendant 90 jours et les messages infectés pendant 6 jours. Ainsi, si un
  utilisateur du service de messagerie émet une réclamation sur un message à
  l'administrateur de la passerelle, il est toujours possible de retrouver le
  message en question et d'extraire manuellement une partie non infectée. Il
  s'agit plus d'une précaution d'usage que d'une pratique d'exploitation
  sachant qu'un message reconnu comme porteur de virus est rarement réclamé par
  son émetteur ou son destinataire.</para>

  <para>Par configuration du service <application>amavisd-new</application>, le
  répertoire de quarantaine est généralement : <filename
  class='directory'>/var/lib/amavis/virusmails/</filename>. Il contient
  l'ensemble des messages interceptés.</para>

  <para>L'application des règles énoncées ci-avant, se fait à l'aide d'un
  simple script shell placé dans le répertoire <filename
  class='directory'>/etc/cron.daily</filename>. Voici le code du script
  <filename>quarantine-cleanup</filename> :</para>

<screen width='80'>#!/bin/bash

if [ -d /var/lib/amavis/virusmails/ ]; then
   find /var/lib/amavis/virusmails/ -mtime +90 -exec rm -rf {} \;
fi

for file in `find /var/lib/amavis/virusmails/ -type f -name "virus*" -mtime +6 \
             -exec grep -l ^'X-Amavis-Alert: INFECTED' {} \;` ; do
   rm -rf $file
done

exit 0
</screen>
  
  <para>En ayant placé le script dans le répertoire indiqué, le service de
  planification <application>cron</application> lance son exécution tous les
  jours à 6h25.</para>
  </sect2>

  <sect2 xml:id='amavisd-new.service.quarantine-free'>
    <title>La libération d'un message en quarantaine</title>

  <para>Le service <application>amavisd-new</application> prévoit que l'on
  puisse libérer un message placé en quarantaine par erreur. Même si le nombre
  de faux positifs est extrêmement faible, il est important de pouvoir effectuer
  des recherches pour identifier et forcer la transmission d'un message placé en
  quarantaine.</para>

  <para>L'archive de distribution du service contient un utilitaire dédié
  appelé <application>amavisd-release</application> que l'on place
  habituellement dans le même répertoire que le démon du service :
  <filename class='directory'>/usr/local/sbin</filename>.</para>

  <para>Il faut intervenir sur la configuration du service en éditant le
  fichier <filename>amavisd.conf</filename> pour autoriser le fonctionnement de
  l'utilitaire.</para>

<screen width='80'>$policy_bank{'AM.PDP-SOCK'} = {
  protocol => 'AM.PDP',  # Amavis policy delegation protocol
  auth_required_release => 0,  # don't require secret_id for amavisd-release
};
&lt;snip/>
$interface_policy{'SOCK'} = 'AM.PDP-SOCK';</screen>

  <para>Ces deux modifications du fichier de configuration prinicpal du service
  ont pour but d'autoriser l'accès au <wordasword>socket</wordasword> UNIX du
  démon <systemitem class='daemon'>amavisd</systemitem> via l'utilitaire
  <application>amavisd-release</application>.</para>

  <para>Sachant que par configuration, on a choisi de placer les
  <wordasword>sockets</wordasword> dans le répertoire <filename
  class='directory'>/var/run/amavis</filename>, il faut aussi éditer le fichier
  source de l'utilitaire pour qu'il communique avec le bon fichier de
  <wordasword>socket</wordasword>.</para>

<screen width='80'>$ ll /var/run/amavis/amavisd.sock
srwxr-x--- 1 amavis amavis 0 2007-03-21 17:26 /var/run/amavis/amavisd.sock
</screen>

  <para>La modification correspondante dans le code de l'utilitaire
  <application>amavisd-release</application> donne :</para>

<screen width='80'>$ diff -uBb /usr/local/src/amavisd-new-2.4.5/amavisd-release amavisd-release
--- /usr/local/src/amavisd-new-2.4.5/amavisd-release    2006-08-08 20:14:47.000000000 +0200
+++ amavisd-release     2007-03-21 17:24:23.000000000 +0100
@@ -76,7 +76,7 @@

   $log_level = 1;
 # $socketname = '127.0.0.1:9998';
-  $socketname = '/var/amavis/amavisd.sock';
+  $socketname = '/var/run/amavis/amavisd.sock';

 sub sanitize_str {
  my($str, $keep_eol) = @_;
</screen>

  <para>Maintenant que l'utilitaire est prêt à fonctionner, il faut trouver un
  faux positif en quarantaine à libérer. Nous allons prendre un cas classique de
  service publicitaire sensible pour les utilisateurs et la réputation de
  l'administrateur du service de courrier électronique : une agence de
  voyage !.</para>

  <para>Comme on a pris soin de journaliser toutes les transactions du service
  <application>amavisd-new</application>, on commence par rechercher les
  références d'un message mis en quarantaine avec l'adresse de notre fameuse
  agence de voyage.</para>

<screen width='80'>$ for (( i=2 ; i &lt; 50 ; i++ ))<co xml:id='quarantine-free.loop'/> ; do \
zcat /var/log/amavis.mail.info.$i.gz |grep "fram\.fr"<co xml:id='quarantine-free.address'/> |grep "Blocked" ; \
done

Feb  9 08:59:23 MailGw amavis[30460]: (30460-14) Blocked SPAM,<co xml:id='quarantine-free.spam'/> [aaa.bbb.ccc.ddd] \
&lt;xxxxxxxx@fram.fr> -> &lt;DIRECTION@xxxxx.FR>, quarantine: l/spam-l1bnIZN88okd.gz<co xml:id='quarantine-free.ref'/>, \
Message-ID: &lt;45CC2AC0.2090800@fram.fr>, mail_id: l1bnIZN88okd, Hits: 8.43,<co xml:id='quarantine-free.score'/> 4730 ms
</screen>

  <calloutlist>
    <callout arearefs='quarantine-free.loop'>
    <para>Avec une rotation quotidienne des journaux du service de courrier
    électronique, la recherche est effectuée sur les 50 derniers jours moins
    les deux les plus récents pour lesquels les journaux ne sont pas
    compressés.</para>
    </callout>
    <callout arearefs='quarantine-free.address'>
    <para>La scrutation recherche une ligne comprenant le domaine de l'adresse
    de courrier électronique suspecte ainsi que le mot clé
    <literal>Blocked</literal> indiquant que le courrier n'a pas été transmis à
    son destinataire.</para>
    </callout>
    <callout arearefs='quarantine-free.spam quarantine-free.score'>
    <para>Le résultat de la recherche montre qu'un message émis depuis le
    domaine suspect a bien été considéré comme un <wordasword>spam</wordasword>
    et qu'il a obtenu un score supérieur au seuil de mise en quarantaine mais
    relativement faible comparé au flot de <wordasword>spams</wordasword>
    habituel.</para>
    <para>Dans cet exemple, le seuil de mise en quarantaine est de 6.31 et le
    score atteint est de 8.43. Les scores classiques obtenus par les
    <wordasword>spams</wordasword> dépassent facilement les 20 points.</para>
    </callout>
    <callout arearefs='quarantine-free.ref'>
    <para>Le même résultat de recherche désigne la référence du fichier de
    quarantaine. C'est cette référence qui doit être utilisée par l'utilitaire
    <application>amavisd-release</application> pour extraire le message et le
    transmettre au <acronym>MTA</acronym>.</para>
    </callout>
  </calloutlist>

<screen width='80'># amavisd-release l/spam-l1bnIZN88okd.gz
250 2.6.0 Ok, xml:id=rel-l1bnIZN88okd, from MTA([127.0.0.1]:10025): 250 2.0.0 Ok: queued as AF6DF4E8004
</screen>

  <para>L'appel à l'utilitaire <application>amavisd-release</application>
  indique que le message à été transmis au gestionnaire de mise en file
  d'attente du service de courrier électronique
  (<acronym>MTA</acronym>).</para>
  
  <para>Dernière remarque très importante ; toutes ces opérations ont été
  effectuées sans <emphasis>jamais</emphasis> consulter le contenu du moindre
  message. On respecte ainsi caractère privé du courrier électronique.</para>

  <para>Comme les journaux peuvent être déposés sur un serveur dédié et que
  l'utilitaire <application>amavisd-release</application> peut communiquer via
  un <wordasword>socket inet</wordasword>, il est possible d'organiser la
  délégation d'administration de façon à ce qu'il soit totalement impossible à
  l'administrateur responsable de la «libération» des messages d'en connaître
  le contenu.</para>
  </sect2>

  <sect2 xml:id='amavisd-new.service.p0f'>
    <title>La reconnaissance passive d'empreinte de système
    d'exploitation</title>

  <para>Depuis la version <option>2.4.0</option>, le service
  <application>amavisd-new</application> propose de compléter la pondération
  des scores calculés par <application>spamassassin</application> en exploitant
  les informations fournies par le scanner passif &url.p0f;.</para>

  <para>Il existe une condition importante pour l'exploitation de cet outil.
  L'adresse IP de l'hôte pair du dialogue <acronym>SMTP</acronym> doit être
  transmise au service <application>amavisd-new</application> par l'agent de
  transport de courrier électronique (<wordasword>Mail Transfer
  Agent</wordasword> ou <acronym>MTA</acronym>). Dans le cas de
  <application>Postfix</application>, l'extension <option>XFORWARD</option>
  doit être activée. Voici un extrait du fichier de configuration
  <filename>master.cf</filename> de <application>Postfix</application>.</para>

<screen width='80'>smtp-amavis    unix    -    -    y    -    2    lmtp
    -o lmtp_data_done_timeout=1200
    -o lmtp_send_xforward_command=yes
    -o max_use=20
</screen>

  <para>Le fichier &url.amavisd-new.RELEASE_NOTES; contient les instructions de
  configuration de transfert des résultats de <application>p0f</application>
  vers <application>amavisd-new</application> puis
  <application>spamassassin</application>. Le principe de fonctionnement est le
  suivant :</para>

  <orderedlist spacing='compact'>
    <listitem>
    <para>Le scanner <application>p0f</application> est exécuté de façon à
    identifier le système d'exploitation de l'hôte pair lors du dialogue
    <acronym>SMTP</acronym>. Il intercepte donc les requêtes sur le port
    destination <literal>tcp/25</literal> et génère des rapports sur la console
    courante.</para>
    </listitem>
    <listitem>
    <para>Le programme <application>p0f-analyzer.pl</application>, fourni avec
    la distribution du service <application>amavisd-new</application>, lit le
    rapport du scanner <application>p0f</application> sur la console courante
    (flux <literal>stdin</literal>). Ce programme conserve en cache pendant 10
    minutes les rapports générés par <application>p0f</application>. Ce même
    programme reste en écoute sur le port <literal>udp/2345</literal> de
    l'interface de boucle locale. Tous les paramètres indiqués ici sont soit
    des valeurs par défaut soit donnés dans la ligne de commande.</para>
    </listitem>
    <listitem>
    <para>Le service <application>amavisd-new</application> interroge le
    programme <application>p0f-analyzer.pl</application> qui maintient les
    rapports du scanner en cache. Les informations collectées sont transmises à
    <application>spamassassin</application> via un champ d'en-tête inséré
    spécifiquement. Il faut éditer le fichier de configuration du service pour
    activer cette fonctionnalité.</para>
    </listitem>
  </orderedlist>

  <para>Pour mettre en place cet outil, on effectue les opérations
  suivantes :</para>

  <itemizedlist spacing='compact'>
    <listitem>
    <para>Installation du paquet <application>p0f</application>.</para>

<screen width='80'># dpkg -l p0f
Souhait=inconnU/Installé/suppRimé/Purgé/H=à garder
| État=Non/Installé/fichier-Config/dépaqUeté/échec-conFig/H=semi-installé
|/ Err?=(aucune)/H=à garder/besoin Réinstallation/X=les deux (État,Err: maj=mauvais)
||/ Nom             Version         Description
+++-===============-===============-================================================
ii  p0f             2.0.8-2         Passive OS fingerprinting tool
</screen>
    </listitem>
    <listitem>
    <para>Lancement du scanner et du gestionnaire de cache de rapports
    d'identification.</para>

<screen width='80'># p0f -l -i eth0 'dst host &lt;MailGw_IP_address> and tcp dst port 25' 2>&amp;1 \
| p0f-analyzer.pl 2345 &amp;
</screen>
    </listitem>
    <listitem>
    <para>Édition du fichier <filename>amavisd.conf</filename> pour décommenter
    la ligne d'appel au programme
    <application>p0f-analyzer.pl</application>.</para>

<screen width='80'># grep p0f /etc/amavisd.conf
$os_fingerprint_method = 'p0f:127.0.0.1:2345';  # query p0f-analyzer.pl
</screen>
    </listitem>
    <listitem>
    <para>Insertion des scores à intégrer dans les calculs de
    <application>spamassassin</application> dans le fichier de configuration
    global.</para>

<screen width='80'># echo # p0f \
header L_P0F_WXP   X-Amavis-OS-Fingerprint =~ /^Windows XP/ \
score  L_P0F_WXP   3.5 \
header L_P0F_W     X-Amavis-OS-Fingerprint =~ /^Windows(?! XP)/ \
score  L_P0F_W     1.7 \
header L_P0F_UNKN  X-Amavis-OS-Fingerprint =~ /^UNKNOWN/ \
score  L_P0F_UNKN  0.8 \
header L_P0F_Unix  X-Amavis-OS-Fingerprint =~ /^((Free|Open|Net)BSD|Solaris|HP-UX|Tru64)/ \
score  L_P0F_Unix  -1.0 \
>> /etc/spamassassin/local.cf
</screen>
    </listitem>
    <listitem>
    <para>Après redémarrage du service <application>amavisd-new</application>,
    on peut valider le fonctionnement de l'identification passive de système
    d'exploitation en consultant les journaux système. Dans l'exemple
    ci-dessous, on constate que le score a été augmenté à partir de la
    correspondance : <literal>L_P0F_W=1.7</literal>.</para>

<screen width='80'>MailGw amavis[23777]: (23777-08) OS_fingerprint: 88.242.7.27 \
  46.023 Windows 2000 SP4, XP SP1, (distance 19, link: unknown-1460)
MailGw amavis[23777]: (23777-08) SPAM, &lt;xxxx@xxx-xx.com> -> &lt;xxxxx@xxx-xxx3.fr>, \
  Yes, score=46.023 tag=-999 tag2=6.31 kill=6.31 tests=[BAYES_95=5, DCC_CHECK=4.5, \
  DIGEST_MULTIPLE=0.765, HTML_MESSAGE=0.001, L_P0F_W=1.7, MIME_HTML_ONLY=0.001, \
  NO_RECEIVED=-0.001, NO_RELAYS=-0.001, RAZOR2_CF_RANGE_51_100=3.5, \
  RAZOR2_CF_RANGE_E4_51_100=1.5, RAZOR2_CF_RANGE_E8_51_100=1.5, \
  RAZOR2_CHECK=2.5, SARE_SPEC_REPLICA_OBFU=1.812, SARE_SPEC_ROLEX_NOV5A=1.062, \
  URIBL_AB_SURBL=3.812, URIBL_BLACK=3, URIBL_JP_SURBL=4.087, URIBL_OB_SURBL=3.008, \
  URIBL_SBL=1.639, URIBL_SC_SURBL=4.498, URIBL_WS_SURBL=2.14], \
  autolearn=spam, quarantine ZLIibG52Rt-A (spam-quarantine)
</screen>
    </listitem>
  </itemizedlist>
  </sect2>
</sect1>

<sect1 xml:id='amavisd-new.antispam'>
  <title>La lutte contre les pourriels</title>

  <para>L'outil de lutte contre les pourriels (<wordasword>spams</wordasword>)
  le plus répandu dans le monde du logiciel libre est &url.spamassassin;. Son
  mode de fonctionnement se rapproche de celui du service <link
  linkend='amavisd-new.service'>amavisd-new</link>. Il collecte les résultats
  obtenus par une collection d'autres outils et les transmet au service <link
  linkend='amavisd-new.service'>amavisd-new</link> qui prend la décision sur le
  message en fonction du score total obtenu par celui-ci.</para>

  <para>Du point de vue système, la mise en oeuvre de &url.spamassassin; est
  très simple. Il suffit de s'appuyer sur le paquet Debian/testing qui est très
  bien maintenu. Cette situation est d'autant plus intéressante que la
  collection des bibliothèques et des outils dépendants de
  <application>spamassassin</application> est très volumineuse. La commande
  <userinput>$ apt-cache show spamassassin</userinput> liste ces
  dépendances.</para>

  <sect2 xml:id='amavisd-new.antispam.config'>
    <title>La configuration de spamassassin</title>

  <para>Il faut distinguer 2 niveaux pour la configuration de cet outil.</para>

  <itemizedlist spacing='compact'>
    <listitem>
    <para>À l'échelle du système, le répertoire <filename
    class='directory'>/etc/spamassassin</filename> contient les fichiers de
    configuration communs à l'ensemble des utilisateurs.</para>
    </listitem>
    <listitem>
    <para>Pour l'utilisateur <systemitem class='username'>amavis</systemitem>,
    le répertoire <filename class='directory'>.spamassassin</filename> situé
    sous le répertoire personnel de l'utilisateur contient les fichiers de
    configuration dédiés ainsi que les bases de données constituées en cours
    d'exécution : liste blanche automatique, jetons de calcul,
    etc..</para>
    </listitem>
  </itemizedlist>

  <para>Comme dans les scénarios décrits dans ce document, le système sur
  lequel sont installés les outils est un serveur passerelle dédié au
  traitement du courrier électronique, tous les paramètres de configuration
  seront dans le répertoire général <filename
  class='directory'>/etc/spamassassin</filename> et toutes les bases de données
  seront dans le répertoire <filename
  class='directory'>/var/lib/amavis/.spamassassin</filename>.</para>

  <sect3 xml:id='amavisd-new.antispam.config.local_cf'>
    <title>Le fichier de configuration principal</title>

  <para>Le fichier <filename>local.cf</filename> regroupe les options
  principales du service. Voici un exemple de paramètres adaptés à
  l'exploitation d'une passerelle de courrier électronique. En plus des
  paramètres propres à <application>spamassassin</application>, on y trouve des
  éléments de sélection des outils complémentaires.</para>

<screen width='80'># cat /etc/spamassassin/local.cf
# This is the right place to customize your installation of SpamAssassin.
#
# See 'perldoc Mail::SpamAssassin::Conf' for details of what can be
# tweaked.
#
# Only a small subset of options are listed below
#
###########################################################################

dns_available yes

whitelist_from  root@MailGw
whitelist_from  amavis@MailGw
whitelist_from  logcheck@MailGw

# Enable the Bayes system
use_bayes              1
bayes_auto_expire      0
bayes_learn_to_journal 1
bayes_journal_max_size 0
bayes_path /var/lib/amavis/.spamassassin/bayes

use_auto_whitelist     1

# Text to prepend to subject if rewrite_subject is used
add_header all Report _REPORT_

# <link linkend='amavisd-new.antispam.zor'>DCC</link>
use_dcc 1
dcc_timeout 8

# <link linkend='amavisd-new.antispam.zor'>Razor</link>
use_razor2 1
razor_timeout 8

# <link linkend='amavisd-new.antispam.zor'>Pyzor</link>
use_pyzor 1

## Optional Score Increases
score DCC_CHECK 4.500
score SPF_FAIL 10.000
score SPF_HELO_FAIL 10.000
score RAZOR2_CHECK 2.500
score RAZOR2_CF_RANGE_51_100 3.500
score BAYES_99 5.300
score BAYES_95 4.500
score BAYES_80 3.500
score BAYES_60 2.500
score BAYES_50 2.000

# p0f
header L_P0F_WXP   X-Amavis-OS-Fingerprint =~ /^Windows XP/
score  L_P0F_WXP   3.5
header L_P0F_W     X-Amavis-OS-Fingerprint =~ /^Windows(?! XP)/
score  L_P0F_W     1.7
header L_P0F_UNKN  X-Amavis-OS-Fingerprint =~ /^UNKNOWN/
score  L_P0F_UNKN  0.8
header L_P0F_Unix  X-Amavis-OS-Fingerprint =~ /^((Free|Open|Net)BSD|Solaris|HP-UX|Tru64)/
score  L_P0F_Unix  -1.0
</screen>
  </sect3>
  </sect2>

  <sect2 xml:id='amavisd-new.antispam.sa-update'>
    <title>La mise à jour des jeux de règles de spamassassin</title>

  <para>La pondération des champs d'un message électronique est basée sur des
  jeux de règles prédéfinies. Comme de nouveaux styles de pourriels
  apparaissent constamment, il est nécessaire de mettre à jour ces règles
  périodiquement.</para>

  <para>Le paquet spamassassin fournit un outil dédié à cette tâche :
  <command>sa-update</command>. L'option <option>-D</option> de
  <wordasword>debugging</wordasword> affiche les informations intermédiaires du
  traitement.</para>

<screen width='80'># sa-update -D
dbg: logger: adding facilities: all
dbg: logger: logging level is DBG
dbg: generic: SpamAssassin version 3.3.0
dbg: generic: Perl 5.010001, PREFIX=/usr, \
     DEF_RULES_DIR=/usr/share/spamassassin, \
     LOCAL_RULES_DIR=/etc/spamassassin, \
     LOCAL_STATE_DIR=/var/lib/spamassassin
dbg: config: timing enabled
dbg: config: score set 0 chosen.
dbg: dns: is Net::DNS::Resolver available? yes
dbg: dns: Net::DNS version: 0.65
dbg: generic: sa-update version svn897929
dbg: generic: using update directory: /var/lib/spamassassin/3.003000
dbg: diag: perl platform: 5.010001 linux<co xml:id='sa-update.check'/>
dbg: diag: [...] module installed: Digest::SHA1, version 2.12
dbg: diag: [...] module installed: HTML::Parser, version 3.64
dbg: diag: [...] module installed: Net::DNS, version 0.65
dbg: diag: [...] module installed: NetAddr::IP, version 4.024
dbg: diag: [...] module installed: Time::HiRes, version 1.9719
dbg: diag: [...] module installed: Archive::Tar, version 1.52
dbg: diag: [...] module installed: IO::Zlib, version 1.09
dbg: diag: [...] module installed: Digest::SHA1, version 2.12
dbg: diag: [...] module installed: MIME::Base64, version 3.08
dbg: diag: [...] module installed: DB_File, version 1.82
dbg: diag: [...] module installed: Net::SMTP, version 2.31
dbg: diag: [...] module installed: Mail::SPF, version v2.007
dbg: diag: [...] module installed: IP::Country::Fast, version 604.001
dbg: diag: [...] module installed: Razor2::Client::Agent, version 2.84
dbg: diag: [...] module installed: Net::Ident, version 1.20
dbg: diag: [...] module installed: IO::Socket::INET6, version 2.54
dbg: diag: [...] module installed: IO::Socket::SSL, version 1.31
dbg: diag: [...] module installed: Compress::Zlib, version 2.022
dbg: diag: [...] module installed: Mail::DKIM, version 0.37
dbg: diag: [...] module installed: DBI, version 1.609
dbg: diag: [...] module installed: Getopt::Long, version 2.38
dbg: diag: [...] module installed: LWP::UserAgent, version 5.834
dbg: diag: [...] module installed: HTTP::Date, version 5.831
dbg: diag: [...] module installed: Encode::Detect, version 1.01
dbg: gpg: Searching for 'gpg'
dbg: util: current PATH is: /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
dbg: util: executable for gpg was found at /usr/bin/gpg
dbg: gpg: found /usr/bin/gpg<co xml:id='sa-update.gpg'/>
dbg: gpg: release trusted key id list: xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
dbg: channel: attempting channel updates.spamassassin.org
dbg: channel: update directory /var/lib/spamassassin/3.003000/updates_spamassassin_org
dbg: channel: channel cf file /var/lib/spamassassin/3.003000/updates_spamassassin_org.cf
dbg: channel: channel pre file /var/lib/spamassassin/3.003000/updates_spamassassin_org.pre
dbg: channel: metadata version = 903765
dbg: dns: 0.3.3.updates.spamassassin.org => 903765, parsed as 903765<co xml:id='sa-update.dnsver'/>
dbg: channel: current version is 903765, new version is 903765, skipping channel
dbg: diag: updates complete, exiting with code 1</screen>

  <calloutlist>
    <callout arearefs='sa-update.check'>
    <para>Le traitement débute par une vérification de la liste des
    bibliothèques et outils nécessaires à l'exploitation des jeux de règles de
    <application>spamassassin</application>.</para>
    </callout>
    <callout arearefs='sa-update.gpg'>
    <para>Les transferts de jeux de règles sont signés pour éviter les
    falsifications.</para>
    </callout>
    <callout arearefs='sa-update.dnsver'>
    <para>Les champs <acronym>TXT</acronym> du serveur de noms de domaines
    <acronym>DNS</acronym> sont utilisés pour véhiculer les informations de
    version des jeux de règles. Dans l'exemple, la version sur le serveur
    distant est identique à celle présente localement  473378. Il n'est
    donc pas nécessaire de télécharger les fichiers de règles de
    pondération.</para>
    </callout>
  </calloutlist>

  <para>L'outil <command>sa-update</command> a besoin de contrôler la signature
  du transfert pour valider la transaction. Cette opération de contrôle n'est
  possible que si la clé publique correspondante a bien été intégrée. La marche
  à suivre est décrite dans le wiki
  <application>Spamassassin</application> :
  &url.spamassassin.sa-update.wiki;.</para>

  <para>Les opérations nécessaires au bon fonctionnement des transferts de jeux
  de règles sont les suivantes :</para>

<screen width='80'><prompt>$</prompt> wget http://spamassassin.apache.org/updates/GPG.KEY
--2008-11-02 21:31:49--  http://spamassassin.apache.org/updates/GPG.KEY
Résolution de spamassassin.apache.org... 140.211.11.130
Connexion vers spamassassin.apache.org|140.211.11.130|:80...connecté.
requête HTTP transmise, en attente de la réponse...200 OK
Longueur: 4777 (4,7K) [text/plain]
Saving to: `GPG.KEY'

100%[===================================>] 4 777       23,9K/s   in 0,2s

2008-11-02 21:31:50 (23,9 KB/s) - « GPG.KEY » sauvegardé [4777/4777]

<prompt>$</prompt> su
Mot de passe :
<prompt>#</prompt> sa-update --import GPG.KEY
</screen>
  </sect2>

  <sect2 xml:id='amavisd-new.antispam.sa-rulesemporium'>
    <title>L'ajout du jeu de règles supplémentaires «rulesemporium»</title>

<note>
  <para>Les règles disponibles sur le site &url.spamassassin.rulesemporium; ne
  sont plus maintenues mais sont néanmoins utiles pour détecter les «figures
  classiques» des pourriels qui circulent toujours. On peut comparer leur
  utilité à celle des signatures de virus passés de mode pour les programmes
  antivirus. Elles ont encore un rôle important à jouer. Il faut simplement
  contrôler régulièrement que la syntaxe des règles non maintenues est toujours
  conforme aux évolutions de <application>spamassassin</application>.</para>

  <para>Dans le cas d'une nouvelle installation, il est préférable d'utiliser
  un autre canal réseau pour obtenir ces règles supplémentaires. Le service
  <citetitle>OpenProtect</citetitle> est présenté dans la section
  suivante : <xref linkend='amavisd-new.antispam.sa-openprotect'/>.</para>
</note>

  <para>Pour coller au plus près de l'actualité des pourriels, il est utile de
  compléter les jeux distribués avec le paquet
  <application>spamassassin</application> avec des règles supplémentaires. Le
  site &url.spamassassin.rulesemporium; est une référence reconnue de
  distribution de règles de pondération complémentaires. Ce site fournit les
  instructions de téléchargement et d'utilisation des jeux de règles
  complémentaires. Voici un exemple de configuration adapté au contexte
  d'utilisation des paquets Debian et de l'outil
  <application>sa-update</application>.</para>

  <itemizedlist spacing='compact'>
    <listitem>
    <para>On commence par télécharger la clé de signature des fichiers de
    règles et on l'insère dans la liste des clés autorisées.</para>
<screen width='80'><prompt>#</prompt> cd /etc/spamassassin
<prompt>#</prompt> wget http://daryl.dostech.ca/sa-update/sare/GPG.KEY
<prompt>#</prompt> sa-update --import GPG.KEY
</screen>
    </listitem>
    <listitem>
    <para>On créé un fichier de sélection des jeux de règles à intégrer. La
    liste donnée ci-dessous n'est qu'un exemple. Elle n'est pas
    exhaustive.</para>
<screen width='80'># cd /etc/spamassassin
# cat sare-sa-update-channels.txt
70_sare_adult.cf.sare.sa-update.dostech.net
70_sare_bayes_poison_nxm.cf.sare.sa-update.dostech.net
70_sare_stocks.cf.sare.sa-update.dostech.net
</screen>

    <para>Attention, ces règles n'étant plus maintenues, leur syntaxe peut ne
    plus être compatible avec les évolutions de
    <application>spamassassin</application>. Les étapes données ci-après sont
    donc essentielles pour la validation des règles.</para>
    </listitem>
    <listitem>
    <para>On lance ensuite le téléchargement des jeux de règles avec
    <application>sa-update</application>.</para>
<screen width='80'># sa-update -D \
  --channelfile /etc/spamassassin/sare-sa-update-channels.txt --gpgkey 856AA88A
</screen>
    </listitem>
    <listitem>
    <para>Enfin, il ne faut jamais oublier de contrôler l'état de la
    configuration de <application>spamassassin</application>. La commande
    ci-dessous ne doit produire aucun résultat. Si ce n'est pas le cas, il faut
    corriger ou éliminer les règles qui provoqueraient des défauts.</para>
<screen width='80'># spamassassin --lint
</screen>
    </listitem>
  </itemizedlist>

  <sect3 xml:id='amavisd-new.antispam.sa-rulesemporium.cron'>
    <title>L'automatisation des mises à jour</title>

  <para>Il est possible d'automatiser les mises à jour de l'ensemble des jeux
  de règles en s'appuyant sur le service <systemitem
  class='daemon'>cron</systemitem>. Sur un système Debian GNU/Linux, on peut
  implanter un script dans le répertoire <filename
  class='directory'>/etc/cron.daily</filename> pour consulter quotidiennement
  les dépôts de jeux de règles.</para>

  <para>Voici un exemple de <wordasword>shell script</wordasword>
  <application>Bash</application> extrait de la liste de diffusion du service
  <application>amavisd-new</application>.</para>

<screen width='80'><prompt>#</prompt> cat /etc/cron.daily/sare-rules
#!/bin/bash

set -x

sa-update
code1=$?
sa-update \
  --channelfile /etc/spamassassin/sare-sa-update-channels.txt --gpgkey 856AA88A
code2=$?
if [[ `expr $code1 + $code2` &lt; 2 ]]; then
  spamassassin --lint
  code3=$?
  if [ $code3 = 0 ]; then
    amavisd reload
  else
    echo "spamassassin failed to lint"
  fi
fi
</screen>

  <para>L'option de <wordasword>debugging</wordasword> <option>set -x</option>
  permet de recevoir un rapport quotidien par courrier électronique sur l'état
  du traitement des jeux de règles.</para>

<screen width='80'>/etc/cron.daily/sare-rules:
+ sa-update
+ code1=1
+ sa-update \
    --channelfile /etc/spamassassin/sare-sa-update-channels.txt --gpgkey 856AA88A
+ code2=0
++ expr 1 + 0
+ [[ 1 &lt; 2 ]]
+ spamassassin --lint
+ code3=0
+ '[' 0 = 0 ']'
+ amavisd reload
Waiting for the process [3904] to terminate
Waiting for the process [3904] to terminate
Daemon [3904] terminated by SIGTERM, waiting for dust to settle...
becoming a new daemon...
</screen>
  </sect3>
  </sect2>

  <sect2 xml:id='amavisd-new.antispam.sa-openprotect'>
    <title>L'ajout du jeu de règles supplémentaires «OpenProtect»</title>

<note>
  <para>Le service <citetitle>OpenProtect</citetitle> peut être considéré comme
  une amélioration de <citetitle>Rules Emporium</citetitle> qui permet
  d'intégrer directement les mises à jour des règles supplémentaires dans
  l'outil de gestion fourni avec
  <application>spamassassin</application>.</para>

  <para>Comme ces règles apportent un complément très efficace dans la
  détection des pourriels, il est vivement conseillé d'ajouter ce service à la
  configuration de <application>spamassassin</application>.</para>
</note>

  <para>Le site &url.spamassassin.openprotect; offre un canal de mise à jour et
  d'intégration des règles supplémentaires via <command>sa-update</command>.
  C'est une simplification dans la configuration du catalogue des règles
  <citetitle>Rules Emporium</citetitle>. Même si la page du site donne la
  marche à suivre, voici un petit rappel des opérations à réaliser.</para>

<screen width='80'><prompt>#</prompt> cd /etc/spamassassin
<prompt>#</prompt> wget http://saupdates.openprotect.com/pub.gpg
<prompt>#</prompt> mv pub.gpg openprotect.gpg
<prompt>#</prompt> sa-update --import openprotect.gpg
<prompt>#</prompt> sa-update --gpgkey D1C035168C1EBC08464946DA258CDB3ABDE9DC10 \
      --channel saupdates.openprotect.com
<prompt>#</prompt> spamassassin --lint</screen>

  </sect2>

  <sect2 xml:id='amavisd-new.antispam.zor'>
    <title>Les calculs distribués avec DCC, Pyzor et Razor</title>

<note>
  <para>Si les outils présentés dans cette section n'occupent pas le «devant de
  la scène» en matière de lutte contre les pourriels, ils n'en sont pas moins
  essentiels au bon fonctionnement d'une passerelle de courrier électronique
  digne de ce nom. Après plus de cinq ans d'exploitation, on peut affirmer
  qu'ils contribuent efficacement aux calculs délivrés par
  <application>spamassassin</application> et donc aux décisions prises par le
  service <application>amavisd-new</application>.</para>
</note>

  <para>Les trois outils <application>DCC</application>,
  <application>Pyzor</application> et <application>Razor</application>
  appartiennent à la même catégorie. Ce sont des réseaux collaboratifs de
  partage de signatures de spams en cours de propagation. Les signatures
  peuvent être assimilées à des sommes de contrôle
  (<wordasword>checksums</wordasword>) calculées à partir d'éléments clés du
  message de courrier électronique. Les utilisateurs du réseau contribuent au
  catalogue en transmettant les sommes de contrôles pour les messages qu'ils
  émettent et exploitent les calculs stockés dans le catalogue partagé
  lorsqu'ils reçoivent les messages.</para>

  <para>Ces trois outils peuvent être utilisés de façon autonome mais ce n'est
  pas la solution retenue dans notre cas. Avec
  <application>spamassassin</application>, les résultats obtenus à partir des
  sommes de contrôle sont intégrés dans le calcul global qui sert à déterminer
  si un courrier est un pourriel ou non. <application>DCC</application>,
  <application>Pyzor</application> et <application>Razor</application>
  constituent donc des sources d'alimentation supplémentaires pour
  <application>spamassassin</application>.</para>

  <para>Voici une présentation de l'installation et de la configuration de ces
  trois outils dans le contexte du service
  <application>amavisd-new</application>.</para>

  <sect3 xml:id='amavisd-new.antispam.zor.DCC'>
    <title>DCC</title>

  <para>L'acronyme <acronym>DCC</acronym> signifie <wordasword>Distributed
  Checksum Clearinghouses</wordasword>. Ce service est partiellement libre et
  il n'existe pas de paquet correspondant dans la distribution Debian
  GNU/Linux. Il est donc nécessaire de compiler localement la partie cliente du
  service à partir des sources.</para>

  <para>Voici un résumé des étapes de la compilation et de l'installation de la
  partie client du service DCC.</para>

<screen width='80'><prompt>$</prompt> cd /usr/local/src
<prompt>$</prompt> wget http://www.dcc-servers.net/dcc/source/dcc.tar.Z
<prompt>$</prompt> tar xf dcc.tar.Z
<prompt>$</prompt> ln -s dcc-1.3.119 dcc
<prompt>$</prompt> cd dcc
<prompt>$</prompt> ./configure --disable-dccm --disable-server
<prompt>$</prompt> make
<prompt>$</prompt> su
<prompt>#</prompt> make install</screen>

  <para>Une fois cette installation faite, il faut indiquer dans les fichiers
  de configuration de <application>spamassassin</application> que ce service
  doit être utilisé.</para>

  <itemizedlist spacing='compact'>
    <listitem>
    <para>Dans le fichier
    <filename>/etc/spamassassin/local.cf</filename> :</para>

<screen width='80'># DCC
#
use_dcc 1
dcc_timeout 8

## Optional Score Increases
score DCC_CHECK 4.500</screen>
    </listitem>
    <listitem>
    <para>Dans le fichier
    <filename>/etc/spamassassin/v310.pre</filename> :</para>

<screen width='80'># DCC - perform DCC message checks.
#
# DCC is disabled here because it is not open source.  See the DCC
# license for more details.
#
loadplugin Mail::SpamAssassin::Plugin::DCC</screen>

    <para>Les commentaires indiquent que comme ce service ne rentre pas dans la
    catégorie des logiciels libres, il est désactivé par défaut dans les
    fichiers de configuration du paquet
    <application>spamassassin</application>. Ici, on a décommenté le chargement
    du greffon <application>spamassassin</application>.</para>
    </listitem>
  </itemizedlist>
  </sect3>

  <sect3 xml:id='amavisd-new.antispam.zor.pyzor'>
    <title>Pyzor</title>

  <para>On débute par l'installation du paquet et le contrôle de sa
  version.</para>

<screen width='80'>$ aptitude search 'pyzor'
i   pyzor  - spam-catcher using a collaborative filtering network</screen>

  <para>Une fois le paquet installé, la configuration doit être appliquée à
  l'utilisateur <systemitem class='username'>amavis</systemitem>.</para>

<screen width='80'><prompt>#</prompt> su amavis -c 'pyzor discover'
downloading servers from http://pyzor.sourceforge.net/cgi-bin/inform-servers-0-3-x
<prompt>#</prompt> cat /var/lib/amavis/.pyzor/servers
public.pyzor.org:24441</screen>

  <para>Le service étant configuré, on peut contrôler la disponibilité du
  serveur de distribution du catalogue des sommes de contrôle.</para>

<screen width='80'><prompt>#</prompt> su amavis -c 'pyzor ping'
public.pyzor.org:24441  (200, 'OK')</screen>
  </sect3>

  <sect3 xml:id='amavisd-new.antispam.zor.razor'>
    <title>Razor</title>

  <para>On débute par l'installation du paquet et le contrôle de sa
  version.</para>

<screen width='80'>$ aptitude search 'razor'
v   librazor2-perl                                                                -
i   razor  - spam-catcher using a collaborative filtering network</screen>

  <para>Une fois le paquet installé, la configuration doit être appliquée à
  l'utilisateur <systemitem class='username'>amavis</systemitem>. Cette étape
  est plus complexe que la précédente dans la mesure où cet outil dispose d'une
  configuration globale puis d'une configuration utilisateur.</para>

  <para>Au niveau global ou système, on efface la configuration existante de
  façon à mettre en place une nouvelle configuration.</para>

<screen width='80'><prompt>#</prompt> rm /etc/razor/razor-agent.conf                          
<prompt>#</prompt> razor-admin -create
<prompt>#</prompt> mv ~/.razor/razor-agent.conf /etc/razor/</screen>

  <para>Le fichier de configuration système est modifié pour que les messages
  émis par l'outil soient journalisés dans un répertoire spécifique dans lequel
  le service <application>amavisd-new</application> dispose d'un accès en
  écriture.</para>

<screen width='80'><prompt>#</prompt> mkdir /var/log/razor
<prompt>#</prompt> chown amavis.adm /var/log/razor
<prompt>#</prompt> diff -uBb /etc/razor/razor-agent.conf.create /etc/razor/razor-agent.conf
--- /etc/razor/razor-agent.conf.create  2010-01-30 18:38:03.000000000 +0100
+++ /etc/razor/razor-agent.conf 2010-01-30 18:38:28.000000000 +0100
@@ -14,7 +14,7 @@
 listfile_catalogue     = servers.catalogue.lst
 listfile_discovery     = servers.discovery.lst
 listfile_nomination    = servers.nomination.lst
-logfile                = razor-agent.log
+logfile                = /var/log/razor/razor-agent.log
 logic_method           = 4
 min_cf                 = ac
 razordiscovery         = discovery.razor.cloudmark.com</screen>

  <para>Pour éviter une saturation de l'espace de stockage du volume dédié à la
  journalisation système, on configure la rotation du fichier de journalisation
  <filename>/var/log/razor/razor-agent.log</filename>.</para>

<screen width='80'><prompt>#</prompt> cat /etc/logrotate.d/razor
/var/log/razor/razor-agent.log {
        weekly
        rotate 52
        compress
        nomail
        notifempty
        missingok
        create 640  amavis adm
	}</screen>

  <para>Au niveau utilisateur, on enregistre le service.</para>

<screen width='80'><prompt>#</prompt> su amavis -c 'razor-admin -register'
Register successful.  Identity stored in /var/lib/amavis/.razor/identity-ruXyA99U4H</screen>

  <para>Le répertoire <filename
  class='directory'>/var/lib/amavis/.razor/</filename> contient l'ensemble des
  éléments de la configuration utilisateur.</para>
  </sect3>

  <sect3 xml:id='amavisd-new.antispam.zor.tests'>
    <title>Tests de fonctionement</title>

  <para>Pour qualifier l'utilisation des deux outils, il faut étudier les
  rapports délivrés par <application>spamassassin</application>.</para>

  <para>La première méthode consiste à tester un échantillon de pourriel fourni
  avec les sources du service <application>amavisd-new</application>. Voici un
  exemple de la syntaxe de test du fichier
  <filename>sample-spam.txt</filename>.</para>

<screen width='80'><prompt>#</prompt> su amavis -c 'spamassassin -D &lt;sample-spam.txt' &gt;test-report.txt 2&gt;&amp;1</screen>

  <para>Une fois cette commande exécutée, le rapport peut être consulté avec
  <command>less</command> par exemple. On peut aussi effectuer des recherches
  de chaînes de caractères avec <command>egrep</command>. Voici un
  extrait.</para>

<screen width='80'><prompt>#</prompt> egrep -i '(pyzor|razor)' test-report.txt
dbg: plugin: loading Mail::SpamAssassin::Plugin::Pyzor from @INC
dbg: pyzor: network tests on, attempting Pyzor
dbg: plugin: loading Mail::SpamAssassin::Plugin::Razor2 from @INC
dbg: razor2: razor2 is available, version 2.84
dbg: razor2: part=0 engine=4 contested=0 confidence=0
dbg: razor2: results: spam? 0
dbg: razor2: results: engine 8, highest cf score: 0
dbg: razor2: results: engine 4, highest cf score: 0
dbg: util: executable for pyzor was found at /usr/bin/pyzor
dbg: pyzor: pyzor is available: /usr/bin/pyzor
dbg: pyzor: opening pipe: /usr/bin/pyzor check &lt; /tmp/.spamassassin25335dM6Ovttmp
dbg: pyzor: got response: public.pyzor.org:24441 (200, 'OK') 12 0
dbg: pyzor: listed: COUNT=12/5 WHITELIST=0
dbg: rules: ran eval rule PYZOR_CHECK ======> got hit (1)
dbg: check: tests=BAYES_99,DATE_IN_PAST_12_24, \
            DNS_FROM_RFC_DSN,INVALID_DATE,INVALID_MSGID,PYZOR_CHECK
dbg: markup: * 3.7 PYZOR_CHECK Message list=e9 par Pyzor, voir http://pyzor.sf.net/
        DNS_FROM_RFC_DSN,INVALID_DATE,INVALID_MSGID,PYZOR_CHECK autolearn=no
        *  3.7 PYZOR_CHECK Message listé par Pyzor, voir http://pyzor.sf.net/
 3.7 PYZOR_CHECK            Message listé par Pyzor, voir http://pyzor.sf.net/</screen>

  <para>La seconde méthode consiste à consulter les journaux du service
  <application>amavisd-new</application> en cours de fonctionnement. Voici un
  exemple de résultat de calcul sur un message dont la nature ne fait aucun
  doute. On y voit clairement apparaître les coefficients attribués par
  <application>Pyzor</application> et <application>Razor</application>.</para>

<screen width='80'>SPAM, &lt;xxxxx-request@listes.lesxxxxs.fr> -> &lt;xxxx.xxxxx@xxx-xxxxx.fr>,
Yes, score=33.506 tag=-999 tag2=6.31 kill=6.31\
tests=[AV:Sanesecurity.Spam.9304.UNOFFICIAL=0.1, \
BAYES_50=2.5, DIGEST_MULTIPLE=0.001, FS_REPLICA=1.041, HTML_MESSAGE=0.001, \

<emphasis>PYZOR_CHECK=3.7, RAZOR2_CF_RANGE_51_100=3.5, \
RAZOR2_CF_RANGE_E4_51_100=1.5, RAZOR2_CF_RANGE_E8_51_100=1.5, \
RAZOR2_CHECK=2.5</emphasis>, \

REPLICA_WATCH=3.396, SARE_SPEC_REPLICA_OBFU=1.812, \
SARE_SPEC_ROLEX_REP=1.666, URIBL_AB_SURBL=1.86, \
URIBL_BLACK=1.955, URIBL_JP_SURBL=1.501, URIBL_OB_SURBL=1.5, \
URIBL_SBL=1.499, URIBL_SC_SURBL=0.474, URIBL_WS_SURBL=1.5] \
autolearn=spam, quarantine M-1gv4WGFeOI (spam-quarantine)</screen>
  </sect3>
  </sect2>

  <sect2 xml:id='amavisd-new.antispam.imageinfo'>
    <title>L'identification des images avec le greffon ImageInfo</title>

  <para>Comparé au greffon <link
  linkend='amavisd-new.antispam.fuzzyocr'>FuzzyOCR</link>,
  <citetitle>ImageInfo</citetitle> fait figure de poids léger. Cette
  caractéristique n'enlève rien à son efficacité. C'est un outil complémentaire
  qui permet de dégager de la puissance de calcul en repérant les messages
  spams basés sur des images les plus «faciles» à identifier.</para>

  <sect3 xml:id='amavisd-new.antispam.imageinfo.install'>
    <title>L'installation du greffon ImageInfo</title>

  <para>Le code source Perl du greffon et le fichier de configuration
  correspondant sont téléchargeables à l'adresse &url.spamassassin.imageinfo;.
  Les instructions d'installation sont fournies directement dans le code source
  du greffon.</para>

  <itemizedlist spacing='compact'>
    <listitem>
    <para>On place le code source du greffon dans le répertoire des greffons
    fournis avec le paquet Debian.</para>
<screen width='80'># wget http://www.rulesemporium.com/plugins/ImageInfo.pm
--22:19:49--  http://www.rulesemporium.com/plugins/ImageInfo.pm
           => `ImageInfo.pm'
Résolution de www.rulesemporium.com... 38.99.66.94
Connexion vers www.rulesemporium.com|38.99.66.94|:80...connecté.
requête HTTP transmise, en attente de la réponse...200 OK
Longueur: 12 464 (12K) [text/plain]

100%[========================================================>] 12 464  30.11K/s

22:19:50 (30.04 KB/s) - « ImageInfo.pm » sauvegardé [12464/12464]

# mv ImageInfo.pm /usr/share/perl5/Mail/SpamAssassin/Plugin/
</screen>
    </listitem>
    <listitem>
    <para>On place le fichier de configuration du greffon dans le répertoire de
    configuration global de <application>spamassassin</application> et on
    insère la syntaxe d'appel au greffon dans le fichier de chargement
    <filename>init.pre</filename>.</para>
<screen width='80'># wget http://www.rulesemporium.com/plugins/imageinfo.cf
--22:24:55--  http://www.rulesemporium.com/plugins/imageinfo.cf
           => `imageinfo.cf'
Résolution de www.rulesemporium.com... 38.99.66.94
Connexion vers www.rulesemporium.com|38.99.66.94|:80...connecté.
requête HTTP transmise, en attente de la réponse...200 OK
Longueur: 4 671 (4.6K) [text/plain]

100%[========================================================>] 4 671   30.23K/s

22:24:56 (30.15 KB/s) - « imageinfo.cf » sauvegardé [4671/4671]

# mv imageinfo.cf /etc/spamassassin/
# echo \
> loadplugin Mail::SpamAssassin::Plugin::ImageInfo >>/etc/spamassassin/init.pre
</screen>
    </listitem>
    <listitem>
    <para>Bien entendu, il ne faut oublier de valider la configuration de
    <application>spamassassin</application> et de relancer le service
    <application>amavisd-new</application> pour bénéficier de la nouvelle
    configuration.</para>
<screen width='80'># spamassassin --lint
# amavisd reload
Waiting for the process [3881] to terminate
Daemon [3881] terminated by SIGTERM, waiting for dust to settle...
becoming a new daemon...
</screen>
    </listitem>
  </itemizedlist>
  </sect3>

  <sect3 xml:id='amavisd-new.antispam.imageinfo.test'>
    <title>Les tests de validation du greffon ImageInfo</title>

  <para>Comme spécifié dans le fichier de configuration
  <filename>imageinfo.cf</filename>, les scores introduits par le greffon
  débutent par la chaîne de caractères "DC_". Pour valider le fonctionnement du
  greffon, il suffit de rechercher cette chaîne dans les journaux du service
  <application>amavisd-new</application>. Il ne faut pas attendre bien
  longtemps pour obtenir des correspondances positives.</para>

<screen width='80'># tail -500 /var/log/syslog |grep DC_
Nov 13 22:16:03 MailGw amavis[17884]: (17884-09) SPAM, \
&lt;xxxxxx@xxxxx.ru> -> &lt;xxxx@xxxxxxxxx>, Yes, score=18.682 tag=-999 \
tag2=6.31 kill=6.31 tests=[BAYES_60=2.5, DC_IMG_HTML_RATIO=1, \
DC_IMG_TEXT_RATIO=1, DRUGS_STOCK_MIMEOLE=2, HTML_40_50=0.496, \
HTML_IMAGE_ONLY_12=1.867, HTML_MESSAGE=0.001, MID_14DIGITS_HEX=2.8, \
MIME_HTML_ONLY=0.001, MY_CID_AND_STYLE=0.71, RCVD_IN_XBL=3.897, \
SARE_GIF_ATTACH=0.75, SARE_GIF_STOX=1.66, SPF_HELO_PASS=-0.001, \
UNPARSEABLE_RELAY=0.001], autolearn=spam, quarantine l33i6G+YsbJ2 (spam-quarantine)
</screen>
  </sect3>
  </sect2>

  <sect2 xml:id='amavisd-new.antispam.fuzzyocr'>
    <title>La reconnaissance de caractères avec le greffon FuzzyOCR</title>

  <para>La tendance de la rentrée 2006, c'est l'explosion des pourriels
  contenant des images animées de type <acronym>GIF</acronym>,
  <acronym>PNG</acronym> ou <acronym>JPEG</acronym>. Ces images contiennent le
  plus souvent des publicités ou des offres de cotations boursières pour le
  moins douteuses.</para>

  <para>Le &url.spamassassin.fuzzyocr; est une arme assez efficace pour lutter
  contre les pourriels contenant des images. Il se base sur la reconnaissance
  optique de caractères pour rechercher des mots clés dans ces images. Ce
  greffon possède aussi quelques optimisations pour le traitement des fichiers
  images volontairement corrompus.</para>

  <para>Le fonctionnement de base du greffon, tel qu'il est décrit sur la page
  web de présentation recouvre les étapes suivantes :</para>

  <orderedlist spacing='compact'>
    <listitem>
    <para>Recherche les images dans les différentes parties du
    message,</para>
    </listitem>
    <listitem>
    <para>Chaque image est analysée pour identifié sont format
    (<acronym>GIF</acronym>, <acronym>PNG</acronym>,
    <acronym>JPEG</acronym>),</para>
    </listitem>
    <listitem>
    <para>Suivant le format d'image détecté, différents outils sont appelés
    pour convertir l'image au format <acronym>PNM</acronym>,</para>
    </listitem>
    <listitem>
    <para>Le programme de reconnaissance optique de caractères
    <application>gocr</application> est appelé pour extraire le texte du
    fichier <acronym>PNM</acronym>,</para>
    </listitem>
    <listitem>
    <para>Les chaînes de caractères obtenues sont scrutées à la recherche de
    mots prédéfinis, les scores sont calculés et les résultats sont transmis à
    <application>spamassassin</application>.</para>
    </listitem>
  </orderedlist>

  <para>Sur le principe, cet outil est très intéressant. Il faut cependant
  considérer le fait que c'est un développement relativement récent qui
  mériterait un peu plus de travail pour être vraiment fiable.</para>

  <para>Compte tenu de la nature des outils mis en œuvre par le greffon, la
  charge processeur augmente sensiblement relativement avec la recherche de
  chaînes de caractères dans les images. Si la passerelle utilisée est limitée
  en puissance de calcul ou si le volume de courrier électronique à traiter est
  très important, les risques d'échecs d'analyse d'images dans les messages
  sont réels.</para>
  
  <para>À titre d'exemple, en 2 mois d'exploitation sur une passerelle basée
  sur un PC avec un processeur PIII 500MHz et 384Mo de RAM, le greffon a échoué
  53 fois pour environ 7400 messages traités et environ 3800 spams
  détectés.</para>

  <para>Dans le même temps, sur une passerelle basée sur un serveur lame avec 2
  processeurs Xeon MP 3GHz 32bits et 2Go de RAM, le greffon n'a jamais échoué
  pour environ 850000 messages traités et environ 450000 spams détectés.</para>

  <para>On peut donc conclure que &url.spamassassin.fuzzyocr; est un outil
  exploitable et efficace dans un contexte professionnel avec une bonne réserve
  de puissance de calcul.</para>

  <sect3 xml:id='amavisd-new.antispam.fuzzyocr.install'>
    <title>L'installation du greffon FuzzyOCR</title>

  <para>Malheureusement, on ne dispose pas de paquet Debian/testing. Il faut
  donc passer par une installation manuelle en s'appuyant sur les paquets des
  outils utilisés par le greffon.</para>

  <para>On commence par télécharger le code du greffon et placer les sources
  dans l'arborescence du serveur passerelle de courrier
  électronique :</para>

<screen width='80'>$ wget http://users.own-hero.net/~decoder/fuzzyocr/fuzzyocr-latest.tar.gz
$ scp fuzzyocr-latest.tar.gz phil@passerelle:~
$ ssh phil@passerelle
$ su
# mv fuzzyocr-latest.tar.gz /usr/local/src/
# cd /usr/local/src/
# tar xf fuzzyocr-latest.tar.gz
# chown -R root.src FuzzyOcr-2.3b</screen>

  <para>La première section du fichier <filename>INSTALL</filename> donne la
  liste des dépendances du greffon. Une fois tous les outils installés on doit
  obtenir les informations sur la liste de paquets suivante :</para>

<screen width='80'>$ dpkg -l spamassassin netpbm imagemagick libungif4g libungif-bin gocr \
>           libjpeg-progs libstring-approx-perl
Souhait=inconnU/Installé/suppRimé/Purgé/H=à garder
| État=Non/Installé/fichier-Config/dépaqUeté/échec-conFig/H=semi-installé
|/ Err?=(aucune)/H=à garder/besoin Réinstallation/X=les deux (État,Err: maj=mauvais)
||/ Nom                           Version                       Description
+++-=====================-==================-==========================================
ii  gocr                  0.41-1             A command line OCR
ii  imagemagick           6.2.4.5.dfsg1-0.11 Image manipulation programs
ii  libjpeg-progs         6b-13              Programs for manipulating JPEG files
ii  libstring-approx-perl 3.25-1             Perl extension for approximate matching
ii  libungif-bin          4.1.4-4            programs to convert GIF images
ii  libungif4g            4.1.4-4            shared library for GIF images
ii  netpbm                10.0-10.1          Graphics conversion tools
ii  spamassassin          3.1.7-1            Perl-based spam filter using text analysis
</screen>
  </sect3>

  <sect3 xml:id='amavisd-new.antispam.fuzzyocr.config'>
    <title>La configuration du greffon FuzzyOCR</title>

  <para>Pour cette partie, on ne suit pas les recommandations du fichier
  <filename>INSTALL</filename>. En effet, la configuration par défaut du
  greffon prévoit d'utiliser le répertoire <filename
  class='directory'>/etc/mail/spamassassin</filename> qui n'existe pas sur un
  système Debian. De plus, il n'est pas souhaitable de mélanger du code et des
  éléments de configuration dans le répertoire <filename
  class='directory'>/etc/</filename>.</para>

  <para>Pour l'installation du code du greffon, la commande
  <userinput># dpkg -L spamassassin |grep Plugin/</userinput>
  permet d'identifier le répertoire de dépôt des autres greffons utilisés par
  <application>spamassassin</application> : <filename
  class='directory'>/usr/share/perl5/Mail/SpamAssassin/Plugin/</filename>. On
  copie donc le code dans ce répertoire.</para>

<screen width='80'>/usr/local/src/FuzzyOcr-2.3b# cp FuzzyOcr.pm /usr/share/perl5/Mail/SpamAssassin/Plugin/
</screen>

  <para>Pour le fichier de configuration, il suffit de copier les fichiers
  suivant dans le répertoire général de configuration de
  <application>spamassassin</application>.</para>

<screen width='80'>/usr/local/src/FuzzyOcr-2.3b# cp FuzzyOcr.cf /etc/spamassassin/
/usr/local/src/FuzzyOcr-2.3b# cp FuzzyOcr.words.sample /etc/spamassassin/FuzzyOcr.words
</screen>

  <para>Plusieurs fichiers de configuration doivent être édités pour s'adapter
  au contexte de configuration.</para>
  
  <para>On doit indiquer le nouveau greffon dans la liste parcourue par
  spamassassin en ajoutant une ligne à la fin du fichier
  <filename>v310.pre</filename>.</para>

<screen width='80'>/etc/spamassassin# echo \
loadplugin FuzzyOcr /usr/share/perl5/Mail/SpamAssassin/Plugin/FuzzyOcr.pm >> v310.pre
</screen>

  <para>On doit éditer le fichier <filename>FuzzyOcr.cf</filename> pour
  l'adapter au contexte.</para>

  <itemizedlist spacing='compact'>
    <listitem>
    <para>Commenter le chargement du greffon déjà donné dans le fichier
    <filename>v310.pre</filename>.</para>
    </listitem>
    <listitem>
    <para>Désigner un fichier spécifique pour la journalisation et augmenter le
    niveau de verbosité des messages du greffon pour valider le fonctionnement
    des outils.</para>
    </listitem>
    <listitem>
    <para>Modifier le chemin d'accès au fichier contenant la liste des mots
    clés recherchés : <filename>FuzzyOcr.words</filename>.</para>
    </listitem>
    <listitem>
    <para>Augmenter le score au delà duquel le greffon n'est plus appelé. Ce
    paramétrage n'a de sens que pendant la phase de tests.</para>
    </listitem>
  </itemizedlist>

  <para>Voici un <wordasword>patch</wordasword> entre la configuration de la
  passerelle et la version distribuée.</para>

<screen width='80'># diff -uBb /usr/local/src/FuzzyOcr-2.3b/FuzzyOcr.cf FuzzyOcr.cf
--- /usr/local/src/FuzzyOcr-2.3b/FuzzyOcr.cf    2006-08-25 22:56:00.000000000 +0200
+++ FuzzyOcr.cf 2006-09-10 23:23:39.000000000 +0200
@@ -1,4 +1,4 @@
-loadplugin FuzzyOcr FuzzyOcr.pm
+#loadplugin FuzzyOcr FuzzyOcr.pm
body FUZZY_OCR eval:fuzzyocr_check()
describe FUZZY_OCR Mail contains an image with common spam text inside
body FUZZY_OCR_WRONG_CTYPE eval:dummy_check()
@@ -14,15 +14,15 @@

#### Logging options #####
# Verbosity level (see manual) Attention: Don't set to 0, but to 0.0 for quiet
# operation.
-#focr_verbose 1
+focr_verbose 4
#
# Logfile (make sure it is writable by the plugin)
-focr_logfile /etc/mail/spamassassin/FuzzyOcr.log
+focr_logfile /var/log/fuzzyocr.log
##########################

##### Wordlists #####
# Here we defined the words to scan for
-focr_global_wordlist /etc/mail/spamassassin/FuzzyOcr.words
+focr_global_wordlist /etc/spamassassin/FuzzyOcr.words
#
# This is the path RELATIVE to the respektive home directory for the personalized list
# This list is merged with the global word list on execution
@@ -90,6 +90,7 @@
#
# This is used to disable the OCR engine if the message has already more points
# than this value (Default value: 10)
#focr_autodisable_score 10
+#focr_autodisable_score 50
#
# Number of minimum matches before the rule scores (Default value: 2)
#focr_counts_required 2
</screen>

  <para>Enfin, il faut implanter la configuration nécessaire à la
  journalisation.</para>

<screen width='80'># touch /var/log/fuzzyocr.log
# chown amavis.amavis /var/log/fuzzyocr.log
</screen>

  <para>Pour limiter l'occupation disque de la journalisation du greffon tout
  en conservant un historique à 90 jours, on créé un fichier de configuration
  pour le service <application>logrotate</application>.</para>

<screen width='80'># cat /etc/logrotate.d/fuzzyocr
/var/log/fuzzyocr.log {
     rotate 90
     daily
     compress
     delaycompress
     create 644 amavis amavis
     }
</screen>
  </sect3>

  <sect3 xml:id='amavisd-new.antispam.fuzzyocr.test'>
    <title>Les tests de validation du greffon FuzzyOCR</title>

  <para>Avant toute manipulation, il faut s'assurer du bon fonctionnement de
  <application>spamassassin</application>. Les deux commandes
  <userinput># spamassassin --lint</userinput> et
  <userinput># su - amavis -- spamassassin --lint</userinput>
  ne doivent produire aucun affichage. Si ce n'est pas le cas, il faut revoir
  la configuration de <application>spamassassin</application> avant de tester
  le fonctionnement du greffon.</para>

  <para>On utilise ensuite les échantillons de pourriels fournis avec les
  sources du greffon et on analyse les résultats produits.</para> 

<screen width='80'># spamassassin -t /usr/local/src/FuzzyOcr-2.3b/samples/animated-gif.eml
&lt;snipped&gt;
 20 FUZZY_OCR              BODY: Mail contains an image with common spam text inside
                           Words found:
                           "alert" in 4 lines
                           "charts" in 1 lines
                           "symbol" in 1 lines
                           "alert" in 4 lines
                           "stock" in 2 lines
                           "company" in 3 lines
                           "trade" in 1 lines
                           "meridia" in 1 lines
                           "growth" in 1 lines
                           (18 word occurrences found)
</screen>

<screen width='80'># spamassassin -t /usr/local/src/FuzzyOcr-2.3b/samples/corrupted-gif.eml
&lt;snipped&gt;
1.5 FUZZY_OCR_WRONG_CTYPE  BODY: Mail contains an image with wrong
                           content-type set
                           Image has format "GIF" but content-type is
                           "image/jpeg"
2.5 FUZZY_OCR_CORRUPT_IMG  BODY: Mail contains a corrupted image
                           Corrupt image: GIF-LIB error: Image is
                           defective, decoding aborted.
 14 FUZZY_OCR              BODY: Mail contains an image with common spam text inside
                           Words found:
                           "alert" in 1 lines
                           "alert" in 1 lines
                           "stock" in 2 lines
                           "investor" in 1 lines
                           "company" in 1 lines
                           "price" in 2 lines
                           "trade" in 1 lines
                           "target" in 1 lines
                           "service" in 1 lines
                           "recommendation" in 1 lines
                           (12 word occurrences found)
</screen>

<screen width='80'># spamassassin -t /usr/local/src/FuzzyOcr-2.3b/samples/jpeg.eml
&lt;snipped&gt;
 6.0 FUZZY_OCR             BODY: Mail contains an image with common spam text inside
                           Words found:
			   "viagra" in 2 lines
			   "cialis" in 1 lines
			   "levitra" in 1 lines
			   (4 word occurrences found)
</screen>

  <para>On constate que les rapports sur les trois échantillons testés montrent
  que des mots clés ont été détectés dans les images et que les scores ont été
  augmentés en conséquence.</para>

  <para>Il ne reste plus qu'à valider la solution en exploitation
  réelle ! Sans attendre, on obtient un échantillon qui montre que la
  reconnaissance optique de caractère à ajouté 18 points au score.</para>

  <para>Extrait du journal système produit par le service
  <application>amavisd-new</application> :</para>

<screen width='80'>Sep 10 18:08:57 MailGw amavis[13387]: (13387-04) SPAM, \
  &lt;lwrceuqp@demax.sk&gt; -> &lt;xxxxxxxxxxxxx@xxx.xxx-xxxx.fr>, Yes, \
  score=27.449 tag=-999 tag2=6.31 kill=6.31 tests=[BAYES_50=2.5, \
  DATE_IN_FUTURE_03_06=1.961, EXTRA_MPART_TYPE=1.091, FUZZY_OCR=18.000, \
  HTML_MESSAGE=0.001, RCVD_IN_XBL=3.897, SPF_PASS=-0.001], \
  autolearn=spam, quarantine lkwO3NF5SAMT (spam-quarantine)
</screen>

  <para>Extrait du journal produit par le greffon pour le même
  message :</para>

<screen width='80'>[2006-09-10 18:08:57] Debug mode: Message is spam (score 18)...
[2006-09-10 18:08:57] Debug mode: Words found:
                      "charts" in 1 lines
                      "symbol" in 1 lines
                      "stock" in 2 lines
	              "international" in 3 lines
		      "company" in 2 lines
		      "million" in 1 lines
		      "buy" in 1 lines
                      "trade" in 3 lines
                      "target" in 1 lines
                      "meridia" in 1 lines
                      (16 word occurrences found)
</screen>

  <para>Extrait du journal produit par le greffon lors d'un échec de
  traitement. Bien que les outils associés, <command>jpegtopnm</command> en
  l'occurrence, soient correctement installés et configurés, le fichier
  temporaire créé par le service amavisd-new lors de l'éclatement des champs du
  message a disparu au moment de l'appel. Cet type d'échec ne se produit que
  sur un système à la puissance de calcul limitée. Voir les chiffres donnés
  ci-avant pour une configuration à base de PC PIII/500Mhz et 384Mo de
  RAM.</para>

<screen width='80'>[2006-09-05 12:24:02] Unexpected error in pipe to external programs.
         Please check that all helper programs are installed and in the correct path.
         (Pipe Command "/usr/bin/jpegtopnm", Pipe exit code 2 (""), \
          Temporary file: "/var/lib/amavis/tmp/.spamassassin8374rV7Hkqtmp")
</screen>

  <para>Pour éviter ce genre de problème, il est vivement conseillé d'associer
  le greffon <link linkend='amavisd-new.antispam.imageinfo'>ImageInfo</link> à
  <application>FuzzyOCR</application> pour optimiser la puissance de calcul de
  la passerelle. Le greffon <application>ImageInfo</application> pondère les
  messages contenant des images «faciles» à identifier et les appels à
  <application>FuzzyOCR</application> sont réservés aux images plus «délicates»
  à traiter.</para>
  </sect3>
  </sect2>
</sect1>

<?custom-pagebreak?>
<sect1 xml:id='amavisd-new.antivirus'>
  <title>Les antivirus</title>

  <para>À l'heure actuelle, utiliser une seule source de signature de virus
  n'est pas très professionnel. De nombreux exemples ont montré qu'il est très
  utile d'utiliser plusieurs antivirus en parallèle pour le traitement du
  courrier électronique.</para>

  <itemizedlist spacing='compact'>
    <listitem>
    <para>La réactivité des équipes techniques des fournisseurs d'antivirus
    doit être inférieure à la dizaine de minutes. Face à une contrainte aussi
    «infernale», il est tout à fait normal qu'un nouveau (ver|virus) échappe à
    la vigilance d'un fournisseur. Il est donc logique de chercher à mettre
    toutes les chances de son côté en utilisant plusieurs antivirus de
    (sources|marques) différentes.</para>
    </listitem>
    <listitem>
    <para>Tous les antivirus ne fonctionnent pas de la même façon. Il existe
    plusieurs techniques d'analyse qui donnent des résultats différents suivant
    les modes de propagation des codes malveillants. Là encore, il est logique
    de chercher à mettre toutes les chances de son côté ...</para>
    </listitem>
  </itemizedlist>

  <sect2 xml:id='amavisd-new.antivirus.clamav'>
    <title>Clam AntiVirus</title>

  <para>En quelques années, le projet <trademark>ClamAV</trademark> est devenu
  la référence en matière de logiciel libre antivirus. La réactivité de
  l'équipe de développement est excellente qu'il s'agisse de la vitesse de
  publication des signatures de nouveaux virus ou des publications de
  correctifs de sécurité du logiciel lui-même.</para>

  <para>L'installation et la configuration de cet antivirus est assez
  immédiate dans la mesure où le paquet Debian est parfaitement maintenu et
  son adaptation au service <application>amavisd-new</application> ne demande
  pas beaucoup d'efforts.</para>

    <sect3 xml:id='amavisd-new.antivirus.clamav.packages'>
      <title>Paquets Debian à installer</title>

  <para>Les paquets Debian à installer pour une utilisation avec le service
  <application>amavisd-new</application> sont donnés dans la liste
  suivante :</para>

<screen width='80'>$ dpkg -l *clam* |grep ^ii
ii  clamav            0.90.1-2  antivirus scanner for Unix
ii  clamav-base       0.90.1-2  base package for clamav, an anti-virus utility
ii  clamav-daemon     0.90.1-2  antivirus scanner daemon
ii  clamav-freshclam  0.90.1-2  downloads clamav virus databases from the Internet
ii  libclamav2        0.90.1-2  virus scanner library
</screen>

  <para>Cette liste comprend trois fonctions distinctes.</para>

  <variablelist xml:id='amavisd-new.antivirus.clamav.packages.functions'>
    <varlistentry xml:id='clamscan'>
      <term><application>clamav</application></term>
      <listitem>
      <para>Ce paquet contient le <wordasword>scanner</wordasword>
      <application>clamscan</application> que l'on utilise au niveau système de
      fichiers. Ce mode de traitement est excessivement coûteux en temps
      d'accès disque et dégrade très sensiblement les performances du
      traitement du courrier électronique. Le service
      <application>amavisd-new</application> ne fait appel à ce
      <wordasword>scanner</wordasword> qu'en secours ; lorsque les antivirus
      primaires travaillant en <acronym>RAM</acronym> ne sont plus
      disponibles.</para> 

      <para>Vis-à-vis du service <application>amavisd-new</application>, le
      <wordasword>scanner</wordasword> est un antivirus secondaire. On obtient
      les informations suivantes lors du lancement du service.</para>

<screen width='80'>amavis[3000]: Found secondary av scanner ClamAV-clamscan at /usr/bin/clamscan
</screen>
      </listitem>
    </varlistentry>
    <varlistentry xml:id='clamd'>
      <term><application>clamav-daemon</application></term>
      <listitem>
      <para>Ce paquet contient le démon <application>clamd</application> qui
      réside en mémoire de façon permanente et qui communique avec le service
      <application>amavisd-new</application> via un
      <wordasword>socket UNIX</wordasword>. C'est ce mode de traitement
      qui donne les meilleures performances. Une fois que le service a extrait
      tous les objets contenu dans les champs d'un message, il transmet ces
      objets aux anitivirus pour examen. Il est possible de stocker les objets
      à traiter dans un système de fichiers «monté» en <acronym>RAM</acronym>
      pour accroître encore les performances.</para>

      <para>Vis-à-vis du service <application>amavisd-new</application>, le
      démon est un antivirus primaire. On obtient les informations suivantes
      lors du lancement du service.</para>

<screen width='80'>amavis[3000]: Using internal av scanner code for (primary) ClamAV-clamd
</screen>
      </listitem>
    </varlistentry>
    <varlistentry xml:id='freshclam'>
      <term><application>freshclam</application></term>
      <listitem>
      <para>Ce paquet contient le démon <application>freshclam</application>
      qui réside en mémoire de façon permanente et qui collecte périodiquement
      les nouvelles signatures de virus. Ce démon est aussi chargé de notifier
      le démon <application>clamd</application> pour qu'il recompose son cache
      en fonction des nouvelles signatures.</para>
      
      <para>Ce démon n'a aucune interaction avec le service
      <application>amavisd-new</application>.</para>
      </listitem>
    </varlistentry>
  </variablelist>
    </sect3>

    <sect3 xml:id='amavisd-new.antivirus.clamav.config'>
      <title>Interaction avec amavisd-new</title>

  <para>Comme les communications entre les démons
  <application>freshclam</application>, <application>clamd</application> et le
  service <application>amavisd-new</application> son basées sur un
  <wordasword>socket UNIX</wordasword>, les principales opérations de
  configuration consistent à organiser l'arborescence et les permissions sur le
  système de fichiers.</para>

  <orderedlist spacing='compact'>
    <listitem>
    <para>On choisit de stocker les informations sur l'état courant des démons
    dans le répertoire <filename
    class='directory'>/var/run/amavis</filename>.</para>
    </listitem>
    <listitem>
    <para>Ce répertoire et tous ses objets doivent avoir pour propriétaire
    l'utilisateur et le groupe <systemitem
    class='username'>amavis</systemitem>.</para>
    </listitem>
  </orderedlist>

  <para>En cours d'exécution, on obtient les informations suivantes.</para>

<screen width='80'>$ ls -lA /var/run/amavis/
total 8
-rw-r----- 1 amavis amavis 0 2006-12-30 19:21 amavisd.lock
-rw-r----- 1 amavis amavis 5 2006-12-30 09:35 amavisd.pid
srwxr-x--- 1 amavis amavis 0 2006-12-30 09:35 amavisd.sock
-rw-rw---- 1 amavis amavis 4 2006-12-30 09:34 clamd.pid
srwxrwxrwx 1 amavis amavis 0 2006-12-30 09:34 clamd.sock
</screen>

   <variablelist>
     <varlistentry xml:id='amavisd-new.antivirus.clamav.config.freshclam'>
       <term>Configuration de <systemitem class='daemon'>freshclam</systemitem></term>
       <listitem>
         <para>La configuration de ce démon suit les directives du paquet Debian.</para>

<screen width='80'>$ cat /etc/clamav/freshclam.conf
# Automatically created by the clamav-freshclam postinst
# Comments will get lost when you reconfigure the clamav-freshclam package

DatabaseOwner clamav
UpdateLogFile /var/log/clamav/freshclam.log
LogFileMaxSize 0
MaxAttempts 5
# Check for new database 8 times a day
Checks 8
DatabaseMirror db.local.clamav.net
DatabaseMirror database.clamav.net
DatabaseDirectory /var/lib/clamav/
NotifyClamd <co xml:id='freshclam.notify'/>
DNSDatabaseInfo current.cvd.clamav.net
</screen>

         <calloutlist>
           <callout arearefs='freshclam.notify'>
	   <para>La notification du démon <systemitem
	   class='daemon'>clamd</systemitem> est l'élément essentiel de ce
	   fichier de configuration.</para>
	   </callout>
	 </calloutlist>
       </listitem>
     </varlistentry>
     <varlistentry xml:id='amavisd-new.antivirus.clamav.config.clamd'>
       <term>Configuration de <systemitem class='daemon'>clamd</systemitem></term>
       <listitem>
         <para>La configuration de ce démon suit aussi les directives du paquet Debian.</para>

<screen width='80'>$ cat /etc/clamav/clamd.conf
#Automatically Generated by clamav-base postinst
#To reconfigure clamd run #dpkg-reconfigure clamav-base
#Please read /usr/share/doc/clamav-base/README.Debian.gz for details
LocalSocket /var/run/amavis/clamd.sock <co xml:id='clamd.sock'/>
FixStaleSocket
User amavis <co xml:id='clamd.user'/>
AllowSupplementaryGroups
ScanMail
ScanArchive
ArchiveMaxRecursion 5
ArchiveMaxFiles 1000
ArchiveMaxFileSize 10M
ArchiveMaxCompressionRatio 250
ScanRAR
MaxDirectoryRecursion 15
ReadTimeout 180
MaxThreads 12
MaxConnectionQueueLength 15
LogSyslog
LogFile /var/log/clamav/clamav.log
LogTime
LogFileMaxSize 0
PidFile /var/run/amavis/clamd.pid
DatabaseDirectory /var/lib/clamav/
SelfCheck 3600
</screen>
         <calloutlist>
           <callout arearefs='clamd.sock'>
	   <para>Conformément au choix énoncé ci-dessus, on utilise le
	   répertoire <filename class='directory'>/var/run/amavis/</filename>
	   pour stocker le fichier <wordasword>socket</wordasword>.</para>
	   </callout>
           <callout arearefs='clamd.user'>
	   <para>Le propriétaire du processus <systemitem
	   class='daemon'>clamd</systemitem> est l'utilisateur <systemitem
	   class='username'>amavis</systemitem>.</para>
	   </callout>
	 </calloutlist>
       </listitem>
     </varlistentry>
     <varlistentry xml:id='amavisd-new.antivirus.clamav.config.user'>
       <term>Utilisateur <systemitem class='username'>clamav</systemitem></term>
       <listitem>
	 <para>L'utilisateur <systemitem class='username'>clamav</systemitem>
	 doit faire partie du groupe <systemitem
	 class='groupname'>amavis</systemitem>.</para>
<screen width='80'>$ grep clam /etc/group
amavis:!:109:clamav
clamav:!:112:
</screen>
       </listitem>
     </varlistentry>
   </variablelist>
    </sect3>

    <sect3 xml:id='amavisd-new.antivirus.clamav.amavisd.conf'>
      <title>Configuration du service amavisd-new</title>

    <para>C'est dans la <citetitle>Section VII - External programs, virus
    scanners</citetitle> du fichier <filename>amavisd.conf</filename> que l'on
    trouve les paramètres d'appel à l'antivirus <systemitem
    class='daemon'>clamd</systemitem>. Il faut désigner le fichier
    <wordasword>socket</wordasword> tel qu'il a été défini ci-avant :
    <filename>/var/run/amavis/clamd.sock</filename></para>

<screen width='80'># ### http://www.clamav.net/
['ClamAV-clamd',
  \&amp;ask_daemon, ["CONTSCAN {}\n", "/var/run/amavis/clamd.sock"],
  qr/\bOK$/, qr/\bFOUND$/,
  qr/^.*?: (?!Infected Archive)(.*) FOUND$/ ],
# # NOTE: run clamd under the same user as amavisd, or run it under its own
# #   uid such as clamav, add user clamav to the amavis group, and then add
# #   AllowSupplementaryGroups to clamd.conf;
# # NOTE: match socket name (LocalSocket) in clamav.conf to the socket name in
# #   this entry; when running chrooted one may prefer socket "$MYHOME/clamd".
</screen>
    </sect3>
  </sect2>

  <sect2 xml:id='amavisd-new.antivirus.sophos'>
    <title>Sophos</title>

  <para><xref linkend='amavisd-new.refdocs.sophos'/> est un fournisseur
  d'antivirus propriétaire non libre.</para>

    <sect3 xml:id='amavisd-new.antivirus.sophos.sav-interface'>
      <title>SAV interface</title>

    <para>En plus des outils antivirus propriétaires traditionnels,
    <trademark>Sophos</trademark> fournit un jeu de bibliothèques qui
    permettent de développer un produit tiers. C'est ce jeu de bibliothèques
    appelé <citetitle>SAV interface</citetitle> qui est utilisé par le démon
    <systemitem class='daemon'>sophie</systemitem>. Voir <xref
    linkend='amavisd-new.antivirus.sophos.sophie'/>.</para>

    <para>Chaque mois, il faut télécharger une nouvelle archive <citetitle>SAV
    interface</citetitle> pour que le démon <systemitem class='daemon'>sophie</systemitem>
    puisse bénéficier des nouveaux développements du fournisseur.</para>

    <variablelist>
      <varlistentry xml:id='amavisd-new.antivirus.sophos.sav-interface.update'>
      <term>Téléchargement de l'archive <citetitle>SAV
      interface</citetitle></term>
      <listitem>
      <para>À partir du site <xref
      linkend='amavisd-new.refdocs.sophos.update'/>, on télécharge l'archive
      <filename>linux.intel.libc6.glibc.2.2.tar.Z</filename>.</para>
      </listitem>
      </varlistentry>
      <varlistentry xml:id='amavisd-new.antivirus.sophos.sav-interface.install'>
      <term>Installation du jeu de bibliothèques</term>
      <listitem>
      <para>Il s'agit essentiellement de copier des fichiers dans
      l'arborescence <filename class='directory'>/usr/local/</filename>.</para>

<screen width='80'>$ tar xvzf linux.intel.libc6.glibc.2.2.tar.Z
&lt;snipped/>
$ cd sav-install
$ su
Password:
# ./install.sh -v 
Utilitaire d'installation de Sophos Anti-Virus [[Linux/Intel]]
Copyright (c) 1998-2005 Sophos Plc, Oxford, Angleterre

Initialisation...

Les binaires seront installés dans '/usr/local/bin'
Les bibliothèques seront installées dans '/usr/local/lib'
Les pages man seront installées dans '/usr/local/man'
Les données virales seront installées dans '/usr/local/sav'
Le texte de message sera installé dans '/usr/local/sav'

SWEEP sera installé
InterCheck ne sera pas installé
&lt;snipped/>
Ajustement en cours de /etc/sav.conf
&lt;snipped/>
</screen>
      </listitem>
      </varlistentry>
      <varlistentry xml:id='amavisd-new.antivirus.sophos.sav-interface.cleanup'>
      <term>Purge des anciens fichiers</term>
      <listitem>
      <para>Les mises à jour mensuelles et le script
      <application>sophos-ide-update.pl</application> renomment les fichiers de
      signatures virales et les bibliothèques sans les effacer. Le répertoire
      <filename class='directory'>/usr/local/sav/</filename> doit donc être
      purgé régulièrement.</para>

      <para>Voici une exemple de script exécuté chaque mois :</para>

<screen width='80'>MailGw:/etc/cron.monthly# cat sav-cleanup
#! /bin/sh

[ -d /usr/local/sav/ ] || exit 0

find /usr/local/sav/ -mtime +90 -exec rm {} \;
</screen>
      </listitem>
      </varlistentry>
    </variablelist>
    </sect3>

    <sect3 xml:id='amavisd-new.antivirus.sophos.sophie'>
      <title>Sophie</title>

    <para><xref linkend='amavisd-new.refdocs.sophie'/> est un démon libre qui
    utilise les bibliothèques <trademark>Sophos</trademark>. Associé au service
    <xref linkend='amavisd-new.refdocs.main-site'/>, ce démon joue le rôle
    d'antivirus <emphasis>primaire</emphasis> travaillant directement en
    mémoire vive (<acronym>RAM</acronym>). Ce mode de fonctionnement allie
    efficacité et vitesse de traitement.</para>
    
    <variablelist>
      <varlistentry xml:id='amavisd-new.antivirus.sophos.sophie.sources'>
        <term>Téléchargement des sources</term>
	<listitem>
	<para>Le site principal <xref linkend='amavisd-new.refdocs.sophie'/>
	indique la version la plus récente du démon.</para>
<screen width='80'>$ wget http://www.clanfield.info/sophie/sophie-3.05.tar.bz2
$ su
Password:
# mv sophie-3.05.tar.bz2 /usr/local/src
# cd /usr/local/src
# tar xf sophie-3.05.tar.bz2
# chown -R root.src sophie-3.05
</screen>
	</listitem>
      </varlistentry>

      <varlistentry xml:id='amavisd-new.antivirus.sophos.sophie.libsavi'>
        <term>Appel de la bibliothèque SAVI</term>
	<listitem>
	<para>Pour que la compilation du logiciel fasse appel à la bibliothèque
	d'exploitation des signatures de virus, il est nécessaire de créer un
	lien symbolique vers la dernière version de cette bibliothèque.</para>
<screen width='80'>MailGw:/usr/local/lib# ln -s libsavi.so.3 libsavi.so
MailGw:/usr/local/lib# ls -larth libsavi.so*
-r-xr-xr-x 1 bin  bin   1,7M 2006-09-04 16:12 libsavi.so.3.2.07.145
-r-xr-xr-x 1 bin  bin   1,7M 2006-10-03 23:34 libsavi.so.3.2.07.149
-r-xr-xr-x 1 bin  bin   1,7M 2006-11-09 09:57 libsavi.so.3.2.07.155
-r-xr-xr-x 1 bin  bin   1,7M 2006-12-01 20:07 libsavi.so.3.2.07.157
lrwxrwxrwx 1 root staff   21 2006-12-01 20:07 libsavi.so.3 -> libsavi.so.3.2.07.157
lrwxrwxrwx 1 root staff   21 2006-12-01 20:07 libsavi.so.2 -> libsavi.so.3.2.07.157
lrwxrwxrwx 1 root staff   12 2006-12-01 22:11 libsavi.so -> libsavi.so.3
</screen>
	</listitem>
      </varlistentry>

      <varlistentry xml:id='amavisd-new.antivirus.sophos.sophie.compile'>
        <term>Compilation de <xref linkend='amavisd-new.refdocs.sophie'/></term>
	<listitem>
	<para>On retrouve ici les étapes rituelles de compilation d'un logiciel
	libre.</para>

	<para>La commande <command>./configure</command> contrôle la présence
	des outils et des bibliothèques nécessaires à la compilation et génère
	les <filename>Makefiles</filename>.</para>

<screen width='80'>MailGw:/usr/local/src/sophie-3.05# ./configure
&lt;snipped/>
checking if only fatal errors will be reported... no
configure: creating ./config.status
config.status: creating Makefile
config.status: creating sophie.cfg
config.status: creating config.h
config.status: config.h is unchanged
</screen>

	<para>La commande <command>make</command> lance la compilation
	proprement dite.</para>

<screen width='80'>MailGw:/usr/local/src/sophie-3.05# make
gcc -g -O2 -Wall -Isav_if   -c -o sophie.o sophie.c
gcc -g -O2 -Wall -Isav_if   -c -o sophie_init.o sophie_init.c
gcc -g -O2 -Wall -Isav_if   -c -o sophie_scandir.o sophie_scandir.c
gcc -g -O2 -Wall -Isav_if   -c -o sophie_core.o sophie_core.c
gcc -g -O2 -Wall -Isav_if   -c -o sophie_notify.o sophie_notify.c
gcc -g -O2 -Wall -Isav_if -Wl,--strip-all -Wl,-rpath,/usr/local/lib \
                 -L/usr/local/lib -lsavi sophie.o sophie_init.o \
		 sophie_scandir.o sophie_core.o sophie_notify.o \
		 -o sophie
</screen>
	</listitem>
      </varlistentry>

      <varlistentry xml:id='amavisd-new.antivirus.sophos.sophie.install'>
        <term>Installation de <xref linkend='amavisd-new.refdocs.sophie'/></term>
	<listitem>
	<para>Comme pour les autres éléments, on installe le programme dans
	l'arborescence locale du système indépendante des paquets de la
	distribution <filename class='directory'>/usr/local</filename>.</para>

<screen width='80'># mv /usr/local/bin/sophie /usr/local/bin/sophie.old
# cp /usr/local/src/sophie-3.05/sophie /usr/local/bin/
</screen>
	</listitem>
      </varlistentry>

      <varlistentry xml:id='amavisd-new.antivirus.sophos.sophie.launch'>
        <term>Exécution de <xref linkend='amavisd-new.refdocs.sophie'/></term>
	<listitem>
	<para>Il ne reste plus qu'à lancer le démon.</para>

<screen width='80'># /etc/init.d/sophie stop
# /etc/init.d/sophie start
</screen>

	<para>On valide le chargement du démon en mémoire en consultant les
	messages systèmes.</para>

<screen width='80'># tail -250 /var/log/syslog
&lt;snipped/>
sophie[337]: NOTICE           : SIGNAL '15' caught - cleaning up and exiting.
sophie[337]: NOTICE           : pSAVI cleaned up and released/terminated
sophie[903]: WARNING          : Socket '/var/run/amavis/sophie.sock' already exists!
sophie[903]: NOTICE           : Removing existing socket
sophie[905]: NOTICE           : Setting configuration options - please wait...
sophie[903]: /usr/local/bin/sophie Placed in the background [PID: 9004]
sophie[905]: NOTICE           : Configuration options set
sophie[905]: Sophos engine    : Sophos engine version 2.40
sophie[905]: Sophie IDE       : Sophos IDE version 4.12 (detects 202043 viruses)
sophie[905]: SAVI config      : /etc/sophie.savi
sophie[905]: Max processes    : 20
sophie[905]: Socket path      : /var/run/amavis/sophie.sock
sophie[905]: Umask            : 7
sophie[905]: PID file         : /var/run/amavis/sophie.pid
sophie[905]: Timeout          : 300 seconds
sophie[905]: Running as user  : amavis
sophie[905]: Socket group     : amavis
sophie[905]: Logname          : sophie
sophie[905]: Log facility     : 16 (mail)
sophie[905]: Log priority     : 5 (notice)
sophie[905]: Error strings?   : yes
sophie[905]: Timestamps?      : no
sophie[905]: Show virus name? : yes
sophie[905]: Callbacks?       : yes
sophie[905]: limit_classif    : 10
sophie[905]: limit_nextfile   : 10000
sophie[905]: limit_decompr    : 1000
sophie[905]: socket_check     : yes
sophie[905]: Sophie version   : 3.05
</screen>
	</listitem>
      </varlistentry>

      <varlistentry xml:id='amavisd-new.antivirus.sophos.sophie.init'>
        <term>Script d'initialisation du démon</term>
	<listitem>
	<para>Voici un script d'initialisation à la mode <citetitle>Debian
	GNU/Linux</citetitle> que l'on intègre dans les
	<wordasword>runlevels</wordasword> à l'aide de la commande
	<userinput># update-rc.d sophie defaults</userinput>.</para>

<screen width='80'># cat /etc/init.d/sophie
#!/bin/sh

PATH=/sbin:/bin
DAEMON=sophie
SOPHIE=/usr/local/bin/$DAEMON

test -f $SOPHIE || exit 0

case "$1" in
start)
  echo -n "Running $DAEMON daemon"
  start-stop-daemon --start --quiet -c amavis \
                    --pidfile /var/run/amavis/$DAEMON.pid \
                    --exec $SOPHIE -- -D
  sleep 5
  test -f /var/run/amavis/$DAEMON.pid || echo "(failed)." || exit 1
  echo "."
  ;;
stop)
  echo -n "Killing $DAEMON daemon"
  start-stop-daemon --stop --quiet -c amavis --pidfile /var/run/amavis/$DAEMON.pid
  echo "."
  ;;
*)
  echo "Usage: /etc/init.d/sophie {start|stop}"
  exit 1
esac

exit 0
</screen>
	</listitem>
      </varlistentry>

      <varlistentry xml:id='amavisd-new.antivirus.sophos.sophie.config'>
        <term>Configuration du démon</term>
	<listitem>
	<para>Pour que la configuration soit complète, il manque deux fichiers
	de configuration nécessaires au bon fonctionnement du démon et à son
	association avec le service
	<application>amavisd-new</application>. Ces deux fichiers doivent être
	placés dans le répertoire <filename
	class='directory'>/etc</filename>.</para> 

	<para>le fichier &url.sophie.cfg; contient les paramètres de
	fonctionnement du démon tels que son identification de processus,
	l'emplacement du fichier socket, son propriétaire, etc.</para>

	<para>Voici un <wordasword>patch</wordasword> adapté à la configuration
	des services utilisés dans ce document.</para>

<screen width='80'># diff -uBb /usr/local/src/sophie-3.05/etc/sophie.cfg /etc/sophie.cfg
--- /usr/local/src/sophie-3.05/etc/sophie.cfg   2003-03-06 13:00:00.000000000 +0100
+++ /etc/sophie.cfg     2004-02-06 18:27:05.000000000 +0100
@@ -23,12 +23,12 @@
 # Location of PID file
 #
 # Change requires: RESTART
-pidfile: /var/run/sophie.pid
+pidfile: /var/run/amavis/sophie.pid

 # Location of socket file
 #
 # Change requires: RESTART
-socketfile: /var/run/sophie
+socketfile: /var/run/amavis/sophie.sock

 # Umask for the socket file
 #
@@ -38,12 +38,12 @@
 # User to run Sophie as
 #
 # Change requires: RESTART
-user: mail
+user: amavis

 # Group to run Sophie as
 #
 # Change requires: RESTART
-group: mail
+group: amavis

 # Scanning timeout (in seconds)
 # If Sophie child doesn't finish scanning a file within this timeframe,
</screen>

	<para>Le fichier <filename>sophie.savi</filename> contient les
	paramètres des bibliothèques d'exploitation des signatures de virus. À
	priori, on s'appuie sur les paramètres fournis avec la distribution de
	<xref linkend='amavisd-new.refdocs.sophie'/>. On se contente donc de
	copier ce fichier.</para>

<screen width='80'># cp /usr/local/src/sophie-3.05/etc/sophie.savi /etc
</screen>
	</listitem>
      </varlistentry>
    </variablelist>
    </sect3>

    <sect3 xml:id='amavisd-new.antivirus.sophos.amavisd.conf'>
      <title>Configuration du service amavisd-new</title>

    <para>C'est dans la <citetitle>Section VII - External programs, virus
    scanners</citetitle> du fichier <filename>amavisd.conf</filename> que l'on
    trouve les paramètres d'appel au démon <systemitem
    class='daemon'>sophie</systemitem>. Il faut désigner le fichier
    <wordasword>socket</wordasword> tel qu'il a été défini ci-avant :
    <filename>/var/run/amavis/sophie.sock</filename></para>

<screen width='80'># ### http://www.vanja.com/tools/sophie/
['Sophie',
  \&amp;ask_daemon, ["{}/\n", '/var/run/amavis/sophie.sock'],
  qr/(?x)^ 0+ ( : | [\000\r\n]* $)/,  qr/(?x)^ 1 ( : | [\000\r\n]* $)/,
  qr/(?x)^ [-+]? \d+ : (.*?) [\000\r\n]* $/ ],
</screen>
    </sect3>

    <sect3 xml:id='amavisd-new.antivirus.sophos.sophos-ide-update'>
      <title>Mise à jour des signatures de virus</title>

    <para>Le script Perl &url.sophos-ide-update; a pour but de télécharger les
    signatures individuelles des nouveaux virus publiées sur le site du
    fournisseur <xref linkend='amavisd-new.refdocs.sophos'/>. Ces signatures
    étant publiées après chaque découverte de nouveaux virus, il faut lancer ce
    script périodiquement pour les collecter. Si de nouvelles signatures de
    virus sont apparues entre deux exécutions du script, il faut relancer le
    démon antivirus résidant en mémoire <systemitem
    class='daemon'>sophie</systemitem> (voir <xref
    linkend='amavisd-new.antivirus.sophos.sophie'/>).</para>

    <para>Voici un <wordasword>patch</wordasword> adapté à la configuration des
    services utilisés dans ce document. Il s'agit principalement d'identifier
    le <wordasword>socket</wordasword> le numéro du processus du démon
    <systemitem class='daemon'>sophie</systemitem>.</para>

<screen width='80'># diff -uBb /usr/local/src/sophos-ide-update_1.4/sophos-ide-update.pl \
  /usr/local/sbin/sophos-ide-update.pl
--- /usr/local/src/sophos-ide-update_1.4/sophos-ide-update.pl 2007-02-27 15:03:27.00 +0100
+++ /usr/local/sbin/sophos-ide-update.pl 2007-02-27 18:13:19.00 +0100
@@ -222,8 +222,9 @@
 # status reports of each run, along with local timezone timestamps (ISO 8601).
 # "$savdir/" will be prepended to $log_filename if it does not start with a "/"
 #
-  $log_filename = '000last_updated.log';
+# $log_filename = '000last_updated.log';
 # $log_filename = '/var/log/000last_updated.log';
+ $log_filename = '/var/log/sophos/000last_updated.log';

 # Check also the procedure get_sophos_data_directory() further down
 # if you keep both the /etc/sav.conf and /usr/local/sav in other locations.
@@ -280,20 +281,23 @@
 # writes its process id (supposedly since Sophie V1.17, although
 # not in sophie-1.20a1). It does not hurt if the file does not exist.
 #
-  $sophie_pidfile = '/var/run/sophie.pid';
+#  $sophie_pidfile = '/var/run/sophie.pid';
+  $sophie_pidfile = '/var/run/amavis/sophie.pid';

 # $sophie_socket is a Unix socket name which Sophie daemon keeps open.
 # Must be an absolute path. 'lsof' (if available) will try to locate
 # a parent process (i.e. Sophie children will be ignored) which has
 # this socket open and runs a command named 'sophie'.
 #
-  $sophie_socket = '/var/run/sophie';
+#  $sophie_socket = '/var/run/sophie';
+  $sophie_socket = '/var/run/amavis/sophie.sock';

 # Full path of the 'lsof' program.
 # In case you do not have it, home of lsof is at:
 #   ftp://vic.cc.purdue.edu/pub/tools/unix/lsof
 #
-  $lsof_path = '/usr/local/sbin/lsof';
+#  $lsof_path = '/usr/local/bin/lsof';
+  $lsof_path = '/usr/bin/lsof';

 # Comment out the $lsof_path or $sophie_socket if you want to prevent
 # 'lsof' from being called regardless of the existence of Sophie socket file.
</screen>

    <para>Une fois que le script de téléchargement des nouvelles signatures est
    utilisable, il faut automatiser son exécution à l'aide du service système
    <systemitem class='daemon'>cron</systemitem>.</para>

    <para>Voici une copie du fichier
    <filename>/etc/cron.d/sophie</filename>  un exemple de configuration
    qui lance l'exécution du script toutes les 45 minutes. Cette exécution se
    fait avec l'identité <systemitem class='username'>root</systemitem> pour
    avoir la capacité à relancer le démon antivirus.</para>

<screen width='80'># /etc/cron.d/sophie: crontab entry for sophie

PATH=/usr/local/sbin:/usr/local/bin:/sbin:/bin:/usr/sbin:/usr/bin

*/45 * * * *  root  test -e /usr/local/sbin/sophos-ide-update.pl &amp;&amp; \
                    /usr/local/sbin/sophos-ide-update.pl
</screen>
    </sect3>
  </sect2>
</sect1>

<sect1 xml:id='amavisd-new.echantillons'>
  <title>Les échantillons relevés</title>

  <para>Voici quelques échantillons relevés lors de l'utilisation du service
  <xref linkend='amavisd-new.refdocs.main-site'/>. Certaines informations telles que les
  adresses de courrier électronique ont été masquées par des caractères
  <literal>X</literal>.</para>

  <sect2 xml:id='amavisd-new.echantillons.mime'>
    <title>Module MIME::Tools</title>

  <para>Ces 2 exemples sont issus de deux installations du type :
  sendmail - amavis-milter - amavisd-new.</para>

  <para>Il est important de disposer d'un module de désassemblage MIME de bonne
  qualité pour pouvoir traiter les cas anormaux. Il faut absolument éviter
  qu'un message à la composition MIME volontairement erronée suffise à sauter
  les appels aux antivirus. Dans le cas ci-dessous, un
  <literal>'W32/Dumaru-Y'</literal> est «accroché» à un message avec un en-tête
  MIME erroné.</para>

<screen width='80'>mai  5 10:38:11 MailGw amavis[8378]: (i458c9dV005475) warning - MIME::Parser
error: BadHead: couldn't parse header; ProblemNear:; name="accounts.zip";
Content-Transfer-Encoding: base64; Content-Disposition: attachment;;
filename="myphoto.zip"; error: UnexpectedBound: part didn't end with expected
boundary [in multipart messag...

May  5 10:38:11 MailGw sophie[831]: WARNING          : Scan result =>
'/var/lib/amavis/amavis-milter-i458c9dV005475/parts/part-00004' infected with
virus 'W32/Dumaru-Y'
</screen>
  
  <para>Dans ce second exemple, un autre message avec une mauvaise construction
  MIME contient un fichier joint exécutable. La configuration du service
  interdit la transmission de fichiers <literal>.exe</literal> par courrier
  électronique.</para>
 
<screen width='80'>mai  5 10:29:54 MailGw amavis[22332]: (i458Trqb012919) warning - MIME::Parser
error: UnexpectedBound: part didn't end with expected boundary [in multipart
message]; EOSToken: CLOSE 3692B18230B.1083745793/XXXXXXXX.XXXXX.XXX; EOSType:
EXT; error: SeveredParts: unexpected end of parts before epilogue [in multipart
message]; Virtu...

mai  5 10:29:54 MailGw amavis[22332]: (i458Trqb012919) NOTICE: DSN contains
BANNED NAME; bounce is not bouncable, mail intentionally dropped

mai  5 10:29:54 MailGw amavis[22332]: (i458Trqb012919) BANNED name/type (.exe),
&lt;> -> &lt;XXXX@XXXX.XXXXXXXXX.XX>, quarantine
virus-20040505-102954-i458Trqb012919, Message-ID:
&lt;20040505082953.5687E182367@XXXXXXXX.XXXXX.XXX>, Hits: -
</screen>
  </sect2>
</sect1>

<sect1 xml:id='amavisd-new.refdocs'>
  <title>Documents de référence</title>

<variablelist>
  <varlistentry xml:id='amavisd-new.refdocs.main-site'>
    <term>amavisd-new</term>
    <listitem>
    <para>&url.amavisd-new; : site principal de l'outil de filtrage de
    contenu de courrier électronique. L'interface
    <application>amavisd-new</application> se place entre les gestionnaires de
    mise en file d'attente de réception et d'émission de l'agent de transfert e
    courrier électronique (<acronym>MTA</acronym>).</para>
    </listitem>
  </varlistentry>

  <varlistentry xml:id='amavisd-new.refdocs.www200.pair.com'>
    <term>Debian Anti-Spam Anti-Virus Gateway Email Server using Postfix,
    Amavisd-new, SpamAssassin, Razor, DCC, Pyzor and ClamAV HOWTO</term>
    <listitem>
    <para>Support de référence en anglais : <link
    xmlns="http://docbook.org/ns/docbook" xlink:href="http://www200.pair.com/mecham/spam/">Debian Anti-Spam Anti-Virus
    Gateway Email Server</link>.</para>
    </listitem>
  </varlistentry>

  <varlistentry xml:id='amavisd-new.refdocs.old-amavis'>
    <term>Amavis</term>
    <listitem>
    <para>Page principale du projet d'origine : <link
    xmlns="http://docbook.org/ns/docbook" xlink:href="http://www.amavis.org/"><application>amavis</application></link>. Cet
    outil n'est plus supporté|maintenu.</para>
    </listitem>
  </varlistentry>

  <varlistentry xml:id='amavisd-new.refdocs.fetchmail'>
    <term><application>fetchmail</application></term>
    <listitem>
    <para>&url.fetchmail; : <application>fetchmail</application> est un
    utilitaire de récupération et de retransmission de courrier électronique
    prévu pour fonctionner avec des connexions à la demande de type
    <acronym>PPP</acronym>.</para>
    </listitem>
  </varlistentry>

  <varlistentry xml:id='amavisd-new.refdocs.sophos'>
    <term><trademark>Sophos</trademark></term>
    <listitem>
    <para>&url.sophos; : fournisseur d'antivirus propriétaire non libre.
    Une fois la licence du logiciel acquise, <trademark>Sophos</trademark>
    fournit une interface d'intégration du moteur antivirus dans un logiciel
    tiers. Cette interface appelée <citetitle>SAV Interface</citetitle> est
    utilisée par <xref linkend='amavisd-new.refdocs.sophie'/> pour constituer
    un démon antivirus primaire pour <xref
    linkend='amavisd-new.refdocs.main-site'/>.</para>
    </listitem>
  </varlistentry>

  <varlistentry xml:id='amavisd-new.refdocs.sophos.update'>
    <term>Mises à jour <trademark>Sophos</trademark></term>
    <listitem>
    <para>&url.sophos.update; : page Web de téléchargement des mises à
    jour du jeu de bibliothèques <trademark>Sophos</trademark> utilisé par
    <xref linkend='amavisd-new.refdocs.sophie'/>.</para>
    </listitem>
  </varlistentry>

  <varlistentry xml:id='amavisd-new.refdocs.sophie'>
    <term><systemitem class='daemon'>sophie</systemitem></term>
    <listitem>
    <para>&url.sophie; : démon libre d'interfaçage du moteur antivirus
    <xref linkend='amavisd-new.refdocs.sophos'/>. L'objectif de ce démon est
    d'optimiser les appels au moteur antivirus <xref
    linkend='amavisd-new.refdocs.sophos'/>. Chaque partie d'un message est
    examinée à partir d'un code antivirus déjà chargé en mémoire vive
    (<acronym>RAM</acronym>).</para>
    </listitem>
  </varlistentry>

  <varlistentry xml:id='amavisd-new.refdocs.debian'>
    <term><citetitle>Debian GNU/Linux</citetitle></term>
    <listitem>
    <para>&url.debian; : page principale de la distribution.</para>
    </listitem>
  </varlistentry>

  <varlistentry xml:id='amavisd-new.refdocs.debian-policy'>
    <term><citetitle>Charte Debian</citetitle></term>
    <listitem>
    <para>&url.debian-policy;  décrit l'organisation des ressources du
    système d'exploitation.</para>
    </listitem>
  </varlistentry>
</variablelist>
</sect1>
</article>
